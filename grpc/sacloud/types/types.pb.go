// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthClass int32

const (
	AuthClass_AUTH_CLASS_UNSPECIFIED AuthClass = 0
	AuthClass_AUTH_CLASS_ACCOUNT     AuthClass = 1
)

var AuthClass_name = map[int32]string{
	0: "AUTH_CLASS_UNSPECIFIED",
	1: "AUTH_CLASS_ACCOUNT",
}
var AuthClass_value = map[string]int32{
	"AUTH_CLASS_UNSPECIFIED": 0,
	"AUTH_CLASS_ACCOUNT":     1,
}

func (x AuthClass) String() string {
	return proto.EnumName(AuthClass_name, int32(x))
}
func (AuthClass) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{0}
}

type AuthMethod int32

const (
	AuthMethod_AUTH_METHOD_UNSPECIFIED AuthMethod = 0
	AuthMethod_AUTH_METHOD_API_KEY     AuthMethod = 1
)

var AuthMethod_name = map[int32]string{
	0: "AUTH_METHOD_UNSPECIFIED",
	1: "AUTH_METHOD_API_KEY",
}
var AuthMethod_value = map[string]int32{
	"AUTH_METHOD_UNSPECIFIED": 0,
	"AUTH_METHOD_API_KEY":     1,
}

func (x AuthMethod) String() string {
	return proto.EnumName(AuthMethod_name, int32(x))
}
func (AuthMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{1}
}

type Availability int32

const (
	Availability_AVAILABILITY_UNSPECIFIED  Availability = 0
	Availability_AVAILABILITY_AVAILABLE    Availability = 1
	Availability_AVAILABILITY_UPLOADING    Availability = 2
	Availability_AVAILABILITY_FAILED       Availability = 3
	Availability_AVAILABILITY_MIGRATING    Availability = 4
	Availability_AVAILABILITY_TRANSFERRING Availability = 5
	Availability_AVAILABILITY_DISCONTINUED Availability = 6
)

var Availability_name = map[int32]string{
	0: "AVAILABILITY_UNSPECIFIED",
	1: "AVAILABILITY_AVAILABLE",
	2: "AVAILABILITY_UPLOADING",
	3: "AVAILABILITY_FAILED",
	4: "AVAILABILITY_MIGRATING",
	5: "AVAILABILITY_TRANSFERRING",
	6: "AVAILABILITY_DISCONTINUED",
}
var Availability_value = map[string]int32{
	"AVAILABILITY_UNSPECIFIED":  0,
	"AVAILABILITY_AVAILABLE":    1,
	"AVAILABILITY_UPLOADING":    2,
	"AVAILABILITY_FAILED":       3,
	"AVAILABILITY_MIGRATING":    4,
	"AVAILABILITY_TRANSFERRING": 5,
	"AVAILABILITY_DISCONTINUED": 6,
}

func (x Availability) String() string {
	return proto.EnumName(Availability_name, int32(x))
}
func (Availability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{2}
}

type BackupSpanType int32

const (
	BackupSpanType_BACKUP_SPAN_TYPE_UNSPECIFIED BackupSpanType = 0
	BackupSpanType_BACKUP_SPAN_TYPE_WEEKDAYS    BackupSpanType = 1
)

var BackupSpanType_name = map[int32]string{
	0: "BACKUP_SPAN_TYPE_UNSPECIFIED",
	1: "BACKUP_SPAN_TYPE_WEEKDAYS",
}
var BackupSpanType_value = map[string]int32{
	"BACKUP_SPAN_TYPE_UNSPECIFIED": 0,
	"BACKUP_SPAN_TYPE_WEEKDAYS":    1,
}

func (x BackupSpanType) String() string {
	return proto.EnumName(BackupSpanType_name, int32(x))
}
func (BackupSpanType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{3}
}

type BackupSpanWeekday int32

const (
	BackupSpanWeekday_BACKUP_SPAN_WEEKDAY_UNSPECIFIED BackupSpanWeekday = 0
	BackupSpanWeekday_BACKUP_SPAN_WEEKDAY_SUNDAY      BackupSpanWeekday = 1
	BackupSpanWeekday_BACKUP_SPAN_WEEKDAY_MONDAY      BackupSpanWeekday = 2
	BackupSpanWeekday_BACKUP_SPAN_WEEKDAY_TUESDAY     BackupSpanWeekday = 3
	BackupSpanWeekday_BACKUP_SPAN_WEEKDAY_WEDNESDAY   BackupSpanWeekday = 4
	BackupSpanWeekday_BACKUP_SPAN_WEEKDAY_THURSDAY    BackupSpanWeekday = 5
	BackupSpanWeekday_BACKUP_SPAN_WEEKDAY_FRIDAY      BackupSpanWeekday = 6
	BackupSpanWeekday_BACKUP_SPAN_WEEKDAY_SATURDAY    BackupSpanWeekday = 7
)

var BackupSpanWeekday_name = map[int32]string{
	0: "BACKUP_SPAN_WEEKDAY_UNSPECIFIED",
	1: "BACKUP_SPAN_WEEKDAY_SUNDAY",
	2: "BACKUP_SPAN_WEEKDAY_MONDAY",
	3: "BACKUP_SPAN_WEEKDAY_TUESDAY",
	4: "BACKUP_SPAN_WEEKDAY_WEDNESDAY",
	5: "BACKUP_SPAN_WEEKDAY_THURSDAY",
	6: "BACKUP_SPAN_WEEKDAY_FRIDAY",
	7: "BACKUP_SPAN_WEEKDAY_SATURDAY",
}
var BackupSpanWeekday_value = map[string]int32{
	"BACKUP_SPAN_WEEKDAY_UNSPECIFIED": 0,
	"BACKUP_SPAN_WEEKDAY_SUNDAY":      1,
	"BACKUP_SPAN_WEEKDAY_MONDAY":      2,
	"BACKUP_SPAN_WEEKDAY_TUESDAY":     3,
	"BACKUP_SPAN_WEEKDAY_WEDNESDAY":   4,
	"BACKUP_SPAN_WEEKDAY_THURSDAY":    5,
	"BACKUP_SPAN_WEEKDAY_FRIDAY":      6,
	"BACKUP_SPAN_WEEKDAY_SATURDAY":    7,
}

func (x BackupSpanWeekday) String() string {
	return proto.EnumName(BackupSpanWeekday_name, int32(x))
}
func (BackupSpanWeekday) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{4}
}

type Commitment int32

const (
	Commitment_COMMITMENT_UNSPECIFIED   Commitment = 0
	Commitment_COMMITMENT_STANDARD      Commitment = 1
	Commitment_COMMITMENT_DEDICATED_CPU Commitment = 2
)

var Commitment_name = map[int32]string{
	0: "COMMITMENT_UNSPECIFIED",
	1: "COMMITMENT_STANDARD",
	2: "COMMITMENT_DEDICATED_CPU",
}
var Commitment_value = map[string]int32{
	"COMMITMENT_UNSPECIFIED":   0,
	"COMMITMENT_STANDARD":      1,
	"COMMITMENT_DEDICATED_CPU": 2,
}

func (x Commitment) String() string {
	return proto.EnumName(Commitment_name, int32(x))
}
func (Commitment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{5}
}

type ContainerRegistryAccessLevel int32

const (
	ContainerRegistryAccessLevel_CONTAINER_REGISTRY_ACCESS_LEVEL_UNSPECIFIED ContainerRegistryAccessLevel = 0
	ContainerRegistryAccessLevel_CONTAINER_REGISTRY_ACCESS_LEVEL_READ_WRITE  ContainerRegistryAccessLevel = 1
	ContainerRegistryAccessLevel_CONTAINER_REGISTRY_ACCESS_LEVEL_READ_ONLY   ContainerRegistryAccessLevel = 2
	ContainerRegistryAccessLevel_CONTAINER_REGISTRY_ACCESS_LEVEL_NONE        ContainerRegistryAccessLevel = 3
)

var ContainerRegistryAccessLevel_name = map[int32]string{
	0: "CONTAINER_REGISTRY_ACCESS_LEVEL_UNSPECIFIED",
	1: "CONTAINER_REGISTRY_ACCESS_LEVEL_READ_WRITE",
	2: "CONTAINER_REGISTRY_ACCESS_LEVEL_READ_ONLY",
	3: "CONTAINER_REGISTRY_ACCESS_LEVEL_NONE",
}
var ContainerRegistryAccessLevel_value = map[string]int32{
	"CONTAINER_REGISTRY_ACCESS_LEVEL_UNSPECIFIED": 0,
	"CONTAINER_REGISTRY_ACCESS_LEVEL_READ_WRITE":  1,
	"CONTAINER_REGISTRY_ACCESS_LEVEL_READ_ONLY":   2,
	"CONTAINER_REGISTRY_ACCESS_LEVEL_NONE":        3,
}

func (x ContainerRegistryAccessLevel) String() string {
	return proto.EnumName(ContainerRegistryAccessLevel_name, int32(x))
}
func (ContainerRegistryAccessLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{6}
}

type ContainerRegistryPermission int32

const (
	ContainerRegistryPermission_CONTAINER_REGISTRY_PERMISSION_UNSPECIFIED ContainerRegistryPermission = 0
	ContainerRegistryPermission_CONTAINER_REGISTRY_PERMISSION_READ_WRITE  ContainerRegistryPermission = 1
	ContainerRegistryPermission_CONTAINER_REGISTRY_PERMISSION_READ_ONLY   ContainerRegistryPermission = 2
	ContainerRegistryPermission_CONTAINER_REGISTRY_PERMISSION_ALL         ContainerRegistryPermission = 3
)

var ContainerRegistryPermission_name = map[int32]string{
	0: "CONTAINER_REGISTRY_PERMISSION_UNSPECIFIED",
	1: "CONTAINER_REGISTRY_PERMISSION_READ_WRITE",
	2: "CONTAINER_REGISTRY_PERMISSION_READ_ONLY",
	3: "CONTAINER_REGISTRY_PERMISSION_ALL",
}
var ContainerRegistryPermission_value = map[string]int32{
	"CONTAINER_REGISTRY_PERMISSION_UNSPECIFIED": 0,
	"CONTAINER_REGISTRY_PERMISSION_READ_WRITE":  1,
	"CONTAINER_REGISTRY_PERMISSION_READ_ONLY":   2,
	"CONTAINER_REGISTRY_PERMISSION_ALL":         3,
}

func (x ContainerRegistryPermission) String() string {
	return proto.EnumName(ContainerRegistryPermission_name, int32(x))
}
func (ContainerRegistryPermission) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{7}
}

type DNSRecordType int32

const (
	DNSRecordType_DNS_RECORD_TYPE_UNSPECIFIED DNSRecordType = 0
	DNSRecordType_DNS_RECORD_TYPE_A           DNSRecordType = 1
	DNSRecordType_DNS_RECORD_TYPE_AAAA        DNSRecordType = 2
	DNSRecordType_DNS_RECORD_TYPE_ALIAS       DNSRecordType = 3
	DNSRecordType_DNS_RECORD_TYPE_CNAME       DNSRecordType = 4
	DNSRecordType_DNS_RECORD_TYPE_NS          DNSRecordType = 5
	DNSRecordType_DNS_RECORD_TYPE_MX          DNSRecordType = 6
	DNSRecordType_DNS_RECORD_TYPE_TXT         DNSRecordType = 7
	DNSRecordType_DNS_RECORD_TYPE_SRV         DNSRecordType = 8
	DNSRecordType_DNS_RECORD_TYPE_CAA         DNSRecordType = 9
	DNSRecordType_DNS_RECORD_TYPE_PTR         DNSRecordType = 10
)

var DNSRecordType_name = map[int32]string{
	0:  "DNS_RECORD_TYPE_UNSPECIFIED",
	1:  "DNS_RECORD_TYPE_A",
	2:  "DNS_RECORD_TYPE_AAAA",
	3:  "DNS_RECORD_TYPE_ALIAS",
	4:  "DNS_RECORD_TYPE_CNAME",
	5:  "DNS_RECORD_TYPE_NS",
	6:  "DNS_RECORD_TYPE_MX",
	7:  "DNS_RECORD_TYPE_TXT",
	8:  "DNS_RECORD_TYPE_SRV",
	9:  "DNS_RECORD_TYPE_CAA",
	10: "DNS_RECORD_TYPE_PTR",
}
var DNSRecordType_value = map[string]int32{
	"DNS_RECORD_TYPE_UNSPECIFIED": 0,
	"DNS_RECORD_TYPE_A":           1,
	"DNS_RECORD_TYPE_AAAA":        2,
	"DNS_RECORD_TYPE_ALIAS":       3,
	"DNS_RECORD_TYPE_CNAME":       4,
	"DNS_RECORD_TYPE_NS":          5,
	"DNS_RECORD_TYPE_MX":          6,
	"DNS_RECORD_TYPE_TXT":         7,
	"DNS_RECORD_TYPE_SRV":         8,
	"DNS_RECORD_TYPE_CAA":         9,
	"DNS_RECORD_TYPE_PTR":         10,
}

func (x DNSRecordType) String() string {
	return proto.EnumName(DNSRecordType_name, int32(x))
}
func (DNSRecordType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{8}
}

type DatabasePlan int32

const (
	DatabasePlan_DATABASE_PLAN_UNSPECIFIED DatabasePlan = 0
	DatabasePlan_DATABASE_PLAN_10GB        DatabasePlan = 1
	DatabasePlan_DATABASE_PLAN_30GB        DatabasePlan = 2
	DatabasePlan_DATABASE_PLAN_90GB        DatabasePlan = 3
	DatabasePlan_DATABASE_PLAN_240GB       DatabasePlan = 4
	DatabasePlan_DATABASE_PLAN_500GB       DatabasePlan = 5
	DatabasePlan_DATABASE_PLAN_1TB         DatabasePlan = 6
)

var DatabasePlan_name = map[int32]string{
	0: "DATABASE_PLAN_UNSPECIFIED",
	1: "DATABASE_PLAN_10GB",
	2: "DATABASE_PLAN_30GB",
	3: "DATABASE_PLAN_90GB",
	4: "DATABASE_PLAN_240GB",
	5: "DATABASE_PLAN_500GB",
	6: "DATABASE_PLAN_1TB",
}
var DatabasePlan_value = map[string]int32{
	"DATABASE_PLAN_UNSPECIFIED": 0,
	"DATABASE_PLAN_10GB":        1,
	"DATABASE_PLAN_30GB":        2,
	"DATABASE_PLAN_90GB":        3,
	"DATABASE_PLAN_240GB":       4,
	"DATABASE_PLAN_500GB":       5,
	"DATABASE_PLAN_1TB":         6,
}

func (x DatabasePlan) String() string {
	return proto.EnumName(DatabasePlan_name, int32(x))
}
func (DatabasePlan) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{9}
}

type DatabaseReplicationModel int32

const (
	DatabaseReplicationModel_DATABASE_REPLICATION_MODEL_UNSPECIFIED   DatabaseReplicationModel = 0
	DatabaseReplicationModel_DATABASE_REPLICATION_MODEL_MASTER_SLAVE  DatabaseReplicationModel = 1
	DatabaseReplicationModel_DATABASE_REPLICATION_MODEL_ASYNC_REPLICA DatabaseReplicationModel = 2
)

var DatabaseReplicationModel_name = map[int32]string{
	0: "DATABASE_REPLICATION_MODEL_UNSPECIFIED",
	1: "DATABASE_REPLICATION_MODEL_MASTER_SLAVE",
	2: "DATABASE_REPLICATION_MODEL_ASYNC_REPLICA",
}
var DatabaseReplicationModel_value = map[string]int32{
	"DATABASE_REPLICATION_MODEL_UNSPECIFIED":   0,
	"DATABASE_REPLICATION_MODEL_MASTER_SLAVE":  1,
	"DATABASE_REPLICATION_MODEL_ASYNC_REPLICA": 2,
}

func (x DatabaseReplicationModel) String() string {
	return proto.EnumName(DatabaseReplicationModel_name, int32(x))
}
func (DatabaseReplicationModel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{10}
}

type DiskConnection int32

const (
	DiskConnection_DISK_CONNECTION_UNSPECIFIED DiskConnection = 0
	DiskConnection_DISK_CONNECTION_VIRT_IO     DiskConnection = 1
	DiskConnection_DISK_CONNECTION_IDE         DiskConnection = 2
)

var DiskConnection_name = map[int32]string{
	0: "DISK_CONNECTION_UNSPECIFIED",
	1: "DISK_CONNECTION_VIRT_IO",
	2: "DISK_CONNECTION_IDE",
}
var DiskConnection_value = map[string]int32{
	"DISK_CONNECTION_UNSPECIFIED": 0,
	"DISK_CONNECTION_VIRT_IO":     1,
	"DISK_CONNECTION_IDE":         2,
}

func (x DiskConnection) String() string {
	return proto.EnumName(DiskConnection_name, int32(x))
}
func (DiskConnection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{11}
}

type DiskPlan int32

const (
	DiskPlan_DISK_PLAN_UNSPECIFIED DiskPlan = 0
	DiskPlan_DISK_PLAN_SSD         DiskPlan = 1
	DiskPlan_DISK_PLAN_HDD         DiskPlan = 2
)

var DiskPlan_name = map[int32]string{
	0: "DISK_PLAN_UNSPECIFIED",
	1: "DISK_PLAN_SSD",
	2: "DISK_PLAN_HDD",
}
var DiskPlan_value = map[string]int32{
	"DISK_PLAN_UNSPECIFIED": 0,
	"DISK_PLAN_SSD":         1,
	"DISK_PLAN_HDD":         2,
}

func (x DiskPlan) String() string {
	return proto.EnumName(DiskPlan_name, int32(x))
}
func (DiskPlan) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{12}
}

type GSLBHealthCheckProtocols int32

const (
	GSLBHealthCheckProtocols_GSLB_HEALTH_CHECKK_PROTOCOL_UNSPECIFIED GSLBHealthCheckProtocols = 0
	GSLBHealthCheckProtocols_GSLB_HEALTH_CHECKK_PROTOCOL_HTTP        GSLBHealthCheckProtocols = 1
	GSLBHealthCheckProtocols_GSLB_HEALTH_CHECKK_PROTOCOL_HTTPS       GSLBHealthCheckProtocols = 2
	GSLBHealthCheckProtocols_GSLB_HEALTH_CHECKK_PROTOCOL_TCP         GSLBHealthCheckProtocols = 3
	GSLBHealthCheckProtocols_GSLB_HEALTH_CHECKK_PROTOCOL_PING        GSLBHealthCheckProtocols = 4
)

var GSLBHealthCheckProtocols_name = map[int32]string{
	0: "GSLB_HEALTH_CHECKK_PROTOCOL_UNSPECIFIED",
	1: "GSLB_HEALTH_CHECKK_PROTOCOL_HTTP",
	2: "GSLB_HEALTH_CHECKK_PROTOCOL_HTTPS",
	3: "GSLB_HEALTH_CHECKK_PROTOCOL_TCP",
	4: "GSLB_HEALTH_CHECKK_PROTOCOL_PING",
}
var GSLBHealthCheckProtocols_value = map[string]int32{
	"GSLB_HEALTH_CHECKK_PROTOCOL_UNSPECIFIED": 0,
	"GSLB_HEALTH_CHECKK_PROTOCOL_HTTP":        1,
	"GSLB_HEALTH_CHECKK_PROTOCOL_HTTPS":       2,
	"GSLB_HEALTH_CHECKK_PROTOCOL_TCP":         3,
	"GSLB_HEALTH_CHECKK_PROTOCOL_PING":        4,
}

func (x GSLBHealthCheckProtocols) String() string {
	return proto.EnumName(GSLBHealthCheckProtocols_name, int32(x))
}
func (GSLBHealthCheckProtocols) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{13}
}

type InterfaceDriver int32

const (
	InterfaceDriver_INTERFACE_DRIVER_UNSPECIFIED InterfaceDriver = 0
	InterfaceDriver_INTERFACE_DRIVER_VIRT_IO     InterfaceDriver = 1
	InterfaceDriver_INTERFACE_DRIVER_E1000       InterfaceDriver = 2
)

var InterfaceDriver_name = map[int32]string{
	0: "INTERFACE_DRIVER_UNSPECIFIED",
	1: "INTERFACE_DRIVER_VIRT_IO",
	2: "INTERFACE_DRIVER_E1000",
}
var InterfaceDriver_value = map[string]int32{
	"INTERFACE_DRIVER_UNSPECIFIED": 0,
	"INTERFACE_DRIVER_VIRT_IO":     1,
	"INTERFACE_DRIVER_E1000":       2,
}

func (x InterfaceDriver) String() string {
	return proto.EnumName(InterfaceDriver_name, int32(x))
}
func (InterfaceDriver) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{14}
}

type LoadBalancerHealthCheckProtocol int32

const (
	LoadBalancerHealthCheckProtocol_LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_UNSPECIFIED LoadBalancerHealthCheckProtocol = 0
	LoadBalancerHealthCheckProtocol_LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_HTTP        LoadBalancerHealthCheckProtocol = 1
	LoadBalancerHealthCheckProtocol_LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_HTTPS       LoadBalancerHealthCheckProtocol = 2
	LoadBalancerHealthCheckProtocol_LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_TCP         LoadBalancerHealthCheckProtocol = 3
	LoadBalancerHealthCheckProtocol_LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_PING        LoadBalancerHealthCheckProtocol = 4
)

var LoadBalancerHealthCheckProtocol_name = map[int32]string{
	0: "LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_UNSPECIFIED",
	1: "LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_HTTP",
	2: "LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_HTTPS",
	3: "LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_TCP",
	4: "LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_PING",
}
var LoadBalancerHealthCheckProtocol_value = map[string]int32{
	"LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_UNSPECIFIED": 0,
	"LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_HTTP":        1,
	"LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_HTTPS":       2,
	"LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_TCP":         3,
	"LOAD_BALANCER_HEALTH_CHECK_PROTOCOL_PING":        4,
}

func (x LoadBalancerHealthCheckProtocol) String() string {
	return proto.EnumName(LoadBalancerHealthCheckProtocol_name, int32(x))
}
func (LoadBalancerHealthCheckProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{15}
}

type LoadBalancerPlan int32

const (
	LoadBalancerPlan_LOAD_BALANCER_PLAN_UNSPECIFIED LoadBalancerPlan = 0
	LoadBalancerPlan_LOAD_BALANCER_PLAN_STANDARD    LoadBalancerPlan = 1
	LoadBalancerPlan_LOAD_BALANCER_PLAN_HIGH_SPEC   LoadBalancerPlan = 2
)

var LoadBalancerPlan_name = map[int32]string{
	0: "LOAD_BALANCER_PLAN_UNSPECIFIED",
	1: "LOAD_BALANCER_PLAN_STANDARD",
	2: "LOAD_BALANCER_PLAN_HIGH_SPEC",
}
var LoadBalancerPlan_value = map[string]int32{
	"LOAD_BALANCER_PLAN_UNSPECIFIED": 0,
	"LOAD_BALANCER_PLAN_STANDARD":    1,
	"LOAD_BALANCER_PLAN_HIGH_SPEC":   2,
}

func (x LoadBalancerPlan) String() string {
	return proto.EnumName(LoadBalancerPlan_name, int32(x))
}
func (LoadBalancerPlan) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{16}
}

type NFSHDDSize int32

const (
	NFSHDDSize_NFS_HDD_SIZE_UNSPECIFIED NFSHDDSize = 0
	NFSHDDSize_NFS_HDD_SIZE_100GB       NFSHDDSize = 1
	NFSHDDSize_NFS_HDD_SIZE_500GB       NFSHDDSize = 2
	NFSHDDSize_NFS_HDD_SIZE_1TB         NFSHDDSize = 3
	NFSHDDSize_NFS_HDD_SIZE_2TB         NFSHDDSize = 4
	NFSHDDSize_NFS_HDD_SIZE_4TB         NFSHDDSize = 5
	NFSHDDSize_NFS_HDD_SIZE_8TB         NFSHDDSize = 6
	NFSHDDSize_NFS_HDD_SIZE_12TB        NFSHDDSize = 7
)

var NFSHDDSize_name = map[int32]string{
	0: "NFS_HDD_SIZE_UNSPECIFIED",
	1: "NFS_HDD_SIZE_100GB",
	2: "NFS_HDD_SIZE_500GB",
	3: "NFS_HDD_SIZE_1TB",
	4: "NFS_HDD_SIZE_2TB",
	5: "NFS_HDD_SIZE_4TB",
	6: "NFS_HDD_SIZE_8TB",
	7: "NFS_HDD_SIZE_12TB",
}
var NFSHDDSize_value = map[string]int32{
	"NFS_HDD_SIZE_UNSPECIFIED": 0,
	"NFS_HDD_SIZE_100GB":       1,
	"NFS_HDD_SIZE_500GB":       2,
	"NFS_HDD_SIZE_1TB":         3,
	"NFS_HDD_SIZE_2TB":         4,
	"NFS_HDD_SIZE_4TB":         5,
	"NFS_HDD_SIZE_8TB":         6,
	"NFS_HDD_SIZE_12TB":        7,
}

func (x NFSHDDSize) String() string {
	return proto.EnumName(NFSHDDSize_name, int32(x))
}
func (NFSHDDSize) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{17}
}

type NFSPlan int32

const (
	NFSPlan_NFS_PLAN_UNSPECIFIED NFSPlan = 0
	NFSPlan_NFS_PLAN_HDD         NFSPlan = 1
	NFSPlan_NFS_PLAN_SSD         NFSPlan = 2
)

var NFSPlan_name = map[int32]string{
	0: "NFS_PLAN_UNSPECIFIED",
	1: "NFS_PLAN_HDD",
	2: "NFS_PLAN_SSD",
}
var NFSPlan_value = map[string]int32{
	"NFS_PLAN_UNSPECIFIED": 0,
	"NFS_PLAN_HDD":         1,
	"NFS_PLAN_SSD":         2,
}

func (x NFSPlan) String() string {
	return proto.EnumName(NFSPlan_name, int32(x))
}
func (NFSPlan) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{18}
}

type NFSSSDSize int32

const (
	NFSSSDSize_NFS_SSD_SIZE_UNSPECIFIED NFSSSDSize = 0
	NFSSSDSize_NFS_SSD_SIZE_20GB        NFSSSDSize = 1
	NFSSSDSize_NFS_SSD_SIZE_100GB       NFSSSDSize = 2
	NFSSSDSize_NFS_SSD_SIZE_500GB       NFSSSDSize = 3
	NFSSSDSize_NFS_SSD_SIZE_1TB         NFSSSDSize = 4
	NFSSSDSize_NFS_SSD_SIZE_2TB         NFSSSDSize = 5
	NFSSSDSize_NFS_SSD_SIZE_4TB         NFSSSDSize = 6
)

var NFSSSDSize_name = map[int32]string{
	0: "NFS_SSD_SIZE_UNSPECIFIED",
	1: "NFS_SSD_SIZE_20GB",
	2: "NFS_SSD_SIZE_100GB",
	3: "NFS_SSD_SIZE_500GB",
	4: "NFS_SSD_SIZE_1TB",
	5: "NFS_SSD_SIZE_2TB",
	6: "NFS_SSD_SIZE_4TB",
}
var NFSSSDSize_value = map[string]int32{
	"NFS_SSD_SIZE_UNSPECIFIED": 0,
	"NFS_SSD_SIZE_20GB":        1,
	"NFS_SSD_SIZE_100GB":       2,
	"NFS_SSD_SIZE_500GB":       3,
	"NFS_SSD_SIZE_1TB":         4,
	"NFS_SSD_SIZE_2TB":         5,
	"NFS_SSD_SIZE_4TB":         6,
}

func (x NFSSSDSize) String() string {
	return proto.EnumName(NFSSSDSize_name, int32(x))
}
func (NFSSSDSize) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{19}
}

type OperationPenaltie int32

const (
	OperationPenaltie_OPERATION_PENALTIE_UNSPECIFIED OperationPenaltie = 0
	OperationPenaltie_OPERATION_PENALTIE_NONE        OperationPenaltie = 1
)

var OperationPenaltie_name = map[int32]string{
	0: "OPERATION_PENALTIE_UNSPECIFIED",
	1: "OPERATION_PENALTIE_NONE",
}
var OperationPenaltie_value = map[string]int32{
	"OPERATION_PENALTIE_UNSPECIFIED": 0,
	"OPERATION_PENALTIE_NONE":        1,
}

func (x OperationPenaltie) String() string {
	return proto.EnumName(OperationPenaltie_name, int32(x))
}
func (OperationPenaltie) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{20}
}

type APIKeyPermission int32

const (
	APIKeyPermission_API_KEY_PERMISSION_UNSPECIFIED APIKeyPermission = 0
	APIKeyPermission_API_KEY_PERMISSION_CREATE      APIKeyPermission = 1
	APIKeyPermission_API_KEY_PERMISSION_ARRANGE     APIKeyPermission = 2
	APIKeyPermission_API_KEY_PERMISSION_POWER       APIKeyPermission = 3
	APIKeyPermission_API_KEY_PERMISSION_VIEW        APIKeyPermission = 4
)

var APIKeyPermission_name = map[int32]string{
	0: "API_KEY_PERMISSION_UNSPECIFIED",
	1: "API_KEY_PERMISSION_CREATE",
	2: "API_KEY_PERMISSION_ARRANGE",
	3: "API_KEY_PERMISSION_POWER",
	4: "API_KEY_PERMISSION_VIEW",
}
var APIKeyPermission_value = map[string]int32{
	"API_KEY_PERMISSION_UNSPECIFIED": 0,
	"API_KEY_PERMISSION_CREATE":      1,
	"API_KEY_PERMISSION_ARRANGE":     2,
	"API_KEY_PERMISSION_POWER":       3,
	"API_KEY_PERMISSION_VIEW":        4,
}

func (x APIKeyPermission) String() string {
	return proto.EnumName(APIKeyPermission_name, int32(x))
}
func (APIKeyPermission) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{21}
}

type PlanGeneration int32

const (
	PlanGeneration_PLAN_GENERATION_UNSPECIFIED PlanGeneration = 0
	PlanGeneration_PLAN_GENERATION_G100        PlanGeneration = 1
	PlanGeneration_PLAN_GENERATION_G200        PlanGeneration = 2
)

var PlanGeneration_name = map[int32]string{
	0: "PLAN_GENERATION_UNSPECIFIED",
	1: "PLAN_GENERATION_G100",
	2: "PLAN_GENERATION_G200",
}
var PlanGeneration_value = map[string]int32{
	"PLAN_GENERATION_UNSPECIFIED": 0,
	"PLAN_GENERATION_G100":        1,
	"PLAN_GENERATION_G200":        2,
}

func (x PlanGeneration) String() string {
	return proto.EnumName(PlanGeneration_name, int32(x))
}
func (PlanGeneration) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{22}
}

type ProxyLBPlan int32

const (
	ProxyLBPlan_PROXY_LB_PLAN_UNSPECIFIED ProxyLBPlan = 0
	ProxyLBPlan_PROXY_LB_PLAN_CPS100      ProxyLBPlan = 1
	ProxyLBPlan_PROXY_LB_PLAN_CPS500      ProxyLBPlan = 2
	ProxyLBPlan_PROXY_LB_PLAN_CPS1000     ProxyLBPlan = 3
	ProxyLBPlan_PROXY_LB_PLAN_CPS5000     ProxyLBPlan = 4
	ProxyLBPlan_PROXY_LB_PLAN_CPS10000    ProxyLBPlan = 5
	ProxyLBPlan_PROXY_LB_PLAN_CPS50000    ProxyLBPlan = 6
	ProxyLBPlan_PROXY_LB_PLAN_CPS100000   ProxyLBPlan = 7
)

var ProxyLBPlan_name = map[int32]string{
	0: "PROXY_LB_PLAN_UNSPECIFIED",
	1: "PROXY_LB_PLAN_CPS100",
	2: "PROXY_LB_PLAN_CPS500",
	3: "PROXY_LB_PLAN_CPS1000",
	4: "PROXY_LB_PLAN_CPS5000",
	5: "PROXY_LB_PLAN_CPS10000",
	6: "PROXY_LB_PLAN_CPS50000",
	7: "PROXY_LB_PLAN_CPS100000",
}
var ProxyLBPlan_value = map[string]int32{
	"PROXY_LB_PLAN_UNSPECIFIED": 0,
	"PROXY_LB_PLAN_CPS100":      1,
	"PROXY_LB_PLAN_CPS500":      2,
	"PROXY_LB_PLAN_CPS1000":     3,
	"PROXY_LB_PLAN_CPS5000":     4,
	"PROXY_LB_PLAN_CPS10000":    5,
	"PROXY_LB_PLAN_CPS50000":    6,
	"PROXY_LB_PLAN_CPS100000":   7,
}

func (x ProxyLBPlan) String() string {
	return proto.EnumName(ProxyLBPlan_name, int32(x))
}
func (ProxyLBPlan) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{23}
}

type ProxyLBProtocol int32

const (
	ProxyLBProtocol_PROXY_LB_PROTOCOL_UNSPECIFIED ProxyLBProtocol = 0
	ProxyLBProtocol_PROXY_LB_PROTOCOL_HTTP        ProxyLBProtocol = 1
	ProxyLBProtocol_PROXY_LB_PROTOCOL_TCP         ProxyLBProtocol = 2
)

var ProxyLBProtocol_name = map[int32]string{
	0: "PROXY_LB_PROTOCOL_UNSPECIFIED",
	1: "PROXY_LB_PROTOCOL_HTTP",
	2: "PROXY_LB_PROTOCOL_TCP",
}
var ProxyLBProtocol_value = map[string]int32{
	"PROXY_LB_PROTOCOL_UNSPECIFIED": 0,
	"PROXY_LB_PROTOCOL_HTTP":        1,
	"PROXY_LB_PROTOCOL_TCP":         2,
}

func (x ProxyLBProtocol) String() string {
	return proto.EnumName(ProxyLBProtocol_name, int32(x))
}
func (ProxyLBProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{24}
}

type ProxyLBProxyMode int32

const (
	ProxyLBProxyMode_PROXY_LB_PROXY_MODE_UNSPECIFIED ProxyLBProxyMode = 0
	ProxyLBProxyMode_PROXY_LB_PROXY_MODE_HTTP        ProxyLBProxyMode = 1
	ProxyLBProxyMode_PROXY_LB_PROXY_MODE_HTTPS       ProxyLBProxyMode = 2
	ProxyLBProxyMode_PROXY_LB_PROXY_MODE_TCP         ProxyLBProxyMode = 3
)

var ProxyLBProxyMode_name = map[int32]string{
	0: "PROXY_LB_PROXY_MODE_UNSPECIFIED",
	1: "PROXY_LB_PROXY_MODE_HTTP",
	2: "PROXY_LB_PROXY_MODE_HTTPS",
	3: "PROXY_LB_PROXY_MODE_TCP",
}
var ProxyLBProxyMode_value = map[string]int32{
	"PROXY_LB_PROXY_MODE_UNSPECIFIED": 0,
	"PROXY_LB_PROXY_MODE_HTTP":        1,
	"PROXY_LB_PROXY_MODE_HTTPS":       2,
	"PROXY_LB_PROXY_MODE_TCP":         3,
}

func (x ProxyLBProxyMode) String() string {
	return proto.EnumName(ProxyLBProxyMode_name, int32(x))
}
func (ProxyLBProxyMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{25}
}

type ProxyLBRegion int32

const (
	ProxyLBRegion_PROXY_LB_REGION_UNSPECIFIED ProxyLBRegion = 0
	ProxyLBRegion_PROXY_LB_REGION_TK1         ProxyLBRegion = 1
	ProxyLBRegion_PROXY_LB_REGION_IS1         ProxyLBRegion = 2
)

var ProxyLBRegion_name = map[int32]string{
	0: "PROXY_LB_REGION_UNSPECIFIED",
	1: "PROXY_LB_REGION_TK1",
	2: "PROXY_LB_REGION_IS1",
}
var ProxyLBRegion_value = map[string]int32{
	"PROXY_LB_REGION_UNSPECIFIED": 0,
	"PROXY_LB_REGION_TK1":         1,
	"PROXY_LB_REGION_IS1":         2,
}

func (x ProxyLBRegion) String() string {
	return proto.EnumName(ProxyLBRegion_name, int32(x))
}
func (ProxyLBRegion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{26}
}

type Scope int32

const (
	Scope_SCOPE_UNSPECIFIED Scope = 0
	Scope_SCOPE_SHARED      Scope = 1
	Scope_SCOPE_USER        Scope = 2
)

var Scope_name = map[int32]string{
	0: "SCOPE_UNSPECIFIED",
	1: "SCOPE_SHARED",
	2: "SCOPE_USER",
}
var Scope_value = map[string]int32{
	"SCOPE_UNSPECIFIED": 0,
	"SCOPE_SHARED":      1,
	"SCOPE_USER":        2,
}

func (x Scope) String() string {
	return proto.EnumName(Scope_name, int32(x))
}
func (Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{27}
}

type SIMOperator int32

const (
	SIMOperator_SIM_OPERATOR_UNSPECIFIED SIMOperator = 0
	SIMOperator_SIM_OPERATOR_KDDI        SIMOperator = 1
	SIMOperator_SIM_OPERATOR_DOCOMO      SIMOperator = 2
	SIMOperator_SIM_OPERATOR_SOFTBANK    SIMOperator = 3
)

var SIMOperator_name = map[int32]string{
	0: "SIM_OPERATOR_UNSPECIFIED",
	1: "SIM_OPERATOR_KDDI",
	2: "SIM_OPERATOR_DOCOMO",
	3: "SIM_OPERATOR_SOFTBANK",
}
var SIMOperator_value = map[string]int32{
	"SIM_OPERATOR_UNSPECIFIED": 0,
	"SIM_OPERATOR_KDDI":        1,
	"SIM_OPERATOR_DOCOMO":      2,
	"SIM_OPERATOR_SOFTBANK":    3,
}

func (x SIMOperator) String() string {
	return proto.EnumName(SIMOperator_name, int32(x))
}
func (SIMOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{28}
}

type SimpleMonitorProtocol int32

const (
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_UNSPECIFIED     SimpleMonitorProtocol = 0
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_HTTP            SimpleMonitorProtocol = 1
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_HTTPS           SimpleMonitorProtocol = 2
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_PING            SimpleMonitorProtocol = 3
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_TCP             SimpleMonitorProtocol = 4
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_DNS             SimpleMonitorProtocol = 5
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_SSH             SimpleMonitorProtocol = 6
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_SMTP            SimpleMonitorProtocol = 7
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_POP3            SimpleMonitorProtocol = 8
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_SNMP            SimpleMonitorProtocol = 9
	SimpleMonitorProtocol_SIMPLE_MONITOR_PROTOCOL_SSL_CERTIFICATE SimpleMonitorProtocol = 10
)

var SimpleMonitorProtocol_name = map[int32]string{
	0:  "SIMPLE_MONITOR_PROTOCOL_UNSPECIFIED",
	1:  "SIMPLE_MONITOR_PROTOCOL_HTTP",
	2:  "SIMPLE_MONITOR_PROTOCOL_HTTPS",
	3:  "SIMPLE_MONITOR_PROTOCOL_PING",
	4:  "SIMPLE_MONITOR_PROTOCOL_TCP",
	5:  "SIMPLE_MONITOR_PROTOCOL_DNS",
	6:  "SIMPLE_MONITOR_PROTOCOL_SSH",
	7:  "SIMPLE_MONITOR_PROTOCOL_SMTP",
	8:  "SIMPLE_MONITOR_PROTOCOL_POP3",
	9:  "SIMPLE_MONITOR_PROTOCOL_SNMP",
	10: "SIMPLE_MONITOR_PROTOCOL_SSL_CERTIFICATE",
}
var SimpleMonitorProtocol_value = map[string]int32{
	"SIMPLE_MONITOR_PROTOCOL_UNSPECIFIED":     0,
	"SIMPLE_MONITOR_PROTOCOL_HTTP":            1,
	"SIMPLE_MONITOR_PROTOCOL_HTTPS":           2,
	"SIMPLE_MONITOR_PROTOCOL_PING":            3,
	"SIMPLE_MONITOR_PROTOCOL_TCP":             4,
	"SIMPLE_MONITOR_PROTOCOL_DNS":             5,
	"SIMPLE_MONITOR_PROTOCOL_SSH":             6,
	"SIMPLE_MONITOR_PROTOCOL_SMTP":            7,
	"SIMPLE_MONITOR_PROTOCOL_POP3":            8,
	"SIMPLE_MONITOR_PROTOCOL_SNMP":            9,
	"SIMPLE_MONITOR_PROTOCOL_SSL_CERTIFICATE": 10,
}

func (x SimpleMonitorProtocol) String() string {
	return proto.EnumName(SimpleMonitorProtocol_name, int32(x))
}
func (SimpleMonitorProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{29}
}

type VPCRouterFirewallProtocol int32

const (
	VPCRouterFirewallProtocol_VPC_ROUTER_FIREWALL_PROTOCOL_UNSPECIFIED VPCRouterFirewallProtocol = 0
	VPCRouterFirewallProtocol_VPC_ROUTER_FIREWALL_PROTOCOL_TCP         VPCRouterFirewallProtocol = 1
	VPCRouterFirewallProtocol_VPC_ROUTER_FIREWALL_PROTOCOL_UDP         VPCRouterFirewallProtocol = 2
	VPCRouterFirewallProtocol_VPC_ROUTER_FIREWALL_PROTOCOL_ICMP        VPCRouterFirewallProtocol = 3
	VPCRouterFirewallProtocol_VPC_ROUTER_FIREWALL_PROTOCOL_IP          VPCRouterFirewallProtocol = 4
)

var VPCRouterFirewallProtocol_name = map[int32]string{
	0: "VPC_ROUTER_FIREWALL_PROTOCOL_UNSPECIFIED",
	1: "VPC_ROUTER_FIREWALL_PROTOCOL_TCP",
	2: "VPC_ROUTER_FIREWALL_PROTOCOL_UDP",
	3: "VPC_ROUTER_FIREWALL_PROTOCOL_ICMP",
	4: "VPC_ROUTER_FIREWALL_PROTOCOL_IP",
}
var VPCRouterFirewallProtocol_value = map[string]int32{
	"VPC_ROUTER_FIREWALL_PROTOCOL_UNSPECIFIED": 0,
	"VPC_ROUTER_FIREWALL_PROTOCOL_TCP":         1,
	"VPC_ROUTER_FIREWALL_PROTOCOL_UDP":         2,
	"VPC_ROUTER_FIREWALL_PROTOCOL_ICMP":        3,
	"VPC_ROUTER_FIREWALL_PROTOCOL_IP":          4,
}

func (x VPCRouterFirewallProtocol) String() string {
	return proto.EnumName(VPCRouterFirewallProtocol_name, int32(x))
}
func (VPCRouterFirewallProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{30}
}

type VPCRouterPlan int32

const (
	VPCRouterPlan_VPC_ROUTER_PLAN_UNSPECIFIED    VPCRouterPlan = 0
	VPCRouterPlan_VPC_ROUTER_PLAN_STANDARD       VPCRouterPlan = 1
	VPCRouterPlan_VPC_ROUTER_PLAN_PREMIUM        VPCRouterPlan = 2
	VPCRouterPlan_VPC_ROUTER_PLAN_HIGH_SPEC      VPCRouterPlan = 3
	VPCRouterPlan_VPC_ROUTER_PLAN_HIGH_SPEC_4000 VPCRouterPlan = 4
)

var VPCRouterPlan_name = map[int32]string{
	0: "VPC_ROUTER_PLAN_UNSPECIFIED",
	1: "VPC_ROUTER_PLAN_STANDARD",
	2: "VPC_ROUTER_PLAN_PREMIUM",
	3: "VPC_ROUTER_PLAN_HIGH_SPEC",
	4: "VPC_ROUTER_PLAN_HIGH_SPEC_4000",
}
var VPCRouterPlan_value = map[string]int32{
	"VPC_ROUTER_PLAN_UNSPECIFIED":    0,
	"VPC_ROUTER_PLAN_STANDARD":       1,
	"VPC_ROUTER_PLAN_PREMIUM":        2,
	"VPC_ROUTER_PLAN_HIGH_SPEC":      3,
	"VPC_ROUTER_PLAN_HIGH_SPEC_4000": 4,
}

func (x VPCRouterPlan) String() string {
	return proto.EnumName(VPCRouterPlan_name, int32(x))
}
func (VPCRouterPlan) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{31}
}

type VPCRouterPortForwardingProtocol int32

const (
	VPCRouterPortForwardingProtocol_VPC_ROUTER_PORT_FORWARDING_PROTOCOL_UNSPECIFIED VPCRouterPortForwardingProtocol = 0
	VPCRouterPortForwardingProtocol_VPC_ROUTER_PORT_FORWARDING_PROTOCOL_TCP         VPCRouterPortForwardingProtocol = 1
	VPCRouterPortForwardingProtocol_VPC_ROUTER_PORT_FORWARDING_PROTOCOL_UDP         VPCRouterPortForwardingProtocol = 2
)

var VPCRouterPortForwardingProtocol_name = map[int32]string{
	0: "VPC_ROUTER_PORT_FORWARDING_PROTOCOL_UNSPECIFIED",
	1: "VPC_ROUTER_PORT_FORWARDING_PROTOCOL_TCP",
	2: "VPC_ROUTER_PORT_FORWARDING_PROTOCOL_UDP",
}
var VPCRouterPortForwardingProtocol_value = map[string]int32{
	"VPC_ROUTER_PORT_FORWARDING_PROTOCOL_UNSPECIFIED": 0,
	"VPC_ROUTER_PORT_FORWARDING_PROTOCOL_TCP":         1,
	"VPC_ROUTER_PORT_FORWARDING_PROTOCOL_UDP":         2,
}

func (x VPCRouterPortForwardingProtocol) String() string {
	return proto.EnumName(VPCRouterPortForwardingProtocol_name, int32(x))
}
func (VPCRouterPortForwardingProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{32}
}

type WebAccelDomainType int32

const (
	WebAccelDomainType_WEB_ACCEL_DOMAIN_TYPE_UNSPECIFIED WebAccelDomainType = 0
	WebAccelDomainType_WEB_ACCEL_DOMAIN_TYPE_OWN         WebAccelDomainType = 1
	WebAccelDomainType_WEB_ACCEL_DOMAIN_TYPE_SUB_DOMAIN  WebAccelDomainType = 2
)

var WebAccelDomainType_name = map[int32]string{
	0: "WEB_ACCEL_DOMAIN_TYPE_UNSPECIFIED",
	1: "WEB_ACCEL_DOMAIN_TYPE_OWN",
	2: "WEB_ACCEL_DOMAIN_TYPE_SUB_DOMAIN",
}
var WebAccelDomainType_value = map[string]int32{
	"WEB_ACCEL_DOMAIN_TYPE_UNSPECIFIED": 0,
	"WEB_ACCEL_DOMAIN_TYPE_OWN":         1,
	"WEB_ACCEL_DOMAIN_TYPE_SUB_DOMAIN":  2,
}

func (x WebAccelDomainType) String() string {
	return proto.EnumName(WebAccelDomainType_name, int32(x))
}
func (WebAccelDomainType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_59b68ff833397d8b, []int{33}
}

func init() {
	proto.RegisterEnum("types.AuthClass", AuthClass_name, AuthClass_value)
	proto.RegisterEnum("types.AuthMethod", AuthMethod_name, AuthMethod_value)
	proto.RegisterEnum("types.Availability", Availability_name, Availability_value)
	proto.RegisterEnum("types.BackupSpanType", BackupSpanType_name, BackupSpanType_value)
	proto.RegisterEnum("types.BackupSpanWeekday", BackupSpanWeekday_name, BackupSpanWeekday_value)
	proto.RegisterEnum("types.Commitment", Commitment_name, Commitment_value)
	proto.RegisterEnum("types.ContainerRegistryAccessLevel", ContainerRegistryAccessLevel_name, ContainerRegistryAccessLevel_value)
	proto.RegisterEnum("types.ContainerRegistryPermission", ContainerRegistryPermission_name, ContainerRegistryPermission_value)
	proto.RegisterEnum("types.DNSRecordType", DNSRecordType_name, DNSRecordType_value)
	proto.RegisterEnum("types.DatabasePlan", DatabasePlan_name, DatabasePlan_value)
	proto.RegisterEnum("types.DatabaseReplicationModel", DatabaseReplicationModel_name, DatabaseReplicationModel_value)
	proto.RegisterEnum("types.DiskConnection", DiskConnection_name, DiskConnection_value)
	proto.RegisterEnum("types.DiskPlan", DiskPlan_name, DiskPlan_value)
	proto.RegisterEnum("types.GSLBHealthCheckProtocols", GSLBHealthCheckProtocols_name, GSLBHealthCheckProtocols_value)
	proto.RegisterEnum("types.InterfaceDriver", InterfaceDriver_name, InterfaceDriver_value)
	proto.RegisterEnum("types.LoadBalancerHealthCheckProtocol", LoadBalancerHealthCheckProtocol_name, LoadBalancerHealthCheckProtocol_value)
	proto.RegisterEnum("types.LoadBalancerPlan", LoadBalancerPlan_name, LoadBalancerPlan_value)
	proto.RegisterEnum("types.NFSHDDSize", NFSHDDSize_name, NFSHDDSize_value)
	proto.RegisterEnum("types.NFSPlan", NFSPlan_name, NFSPlan_value)
	proto.RegisterEnum("types.NFSSSDSize", NFSSSDSize_name, NFSSSDSize_value)
	proto.RegisterEnum("types.OperationPenaltie", OperationPenaltie_name, OperationPenaltie_value)
	proto.RegisterEnum("types.APIKeyPermission", APIKeyPermission_name, APIKeyPermission_value)
	proto.RegisterEnum("types.PlanGeneration", PlanGeneration_name, PlanGeneration_value)
	proto.RegisterEnum("types.ProxyLBPlan", ProxyLBPlan_name, ProxyLBPlan_value)
	proto.RegisterEnum("types.ProxyLBProtocol", ProxyLBProtocol_name, ProxyLBProtocol_value)
	proto.RegisterEnum("types.ProxyLBProxyMode", ProxyLBProxyMode_name, ProxyLBProxyMode_value)
	proto.RegisterEnum("types.ProxyLBRegion", ProxyLBRegion_name, ProxyLBRegion_value)
	proto.RegisterEnum("types.Scope", Scope_name, Scope_value)
	proto.RegisterEnum("types.SIMOperator", SIMOperator_name, SIMOperator_value)
	proto.RegisterEnum("types.SimpleMonitorProtocol", SimpleMonitorProtocol_name, SimpleMonitorProtocol_value)
	proto.RegisterEnum("types.VPCRouterFirewallProtocol", VPCRouterFirewallProtocol_name, VPCRouterFirewallProtocol_value)
	proto.RegisterEnum("types.VPCRouterPlan", VPCRouterPlan_name, VPCRouterPlan_value)
	proto.RegisterEnum("types.VPCRouterPortForwardingProtocol", VPCRouterPortForwardingProtocol_name, VPCRouterPortForwardingProtocol_value)
	proto.RegisterEnum("types.WebAccelDomainType", WebAccelDomainType_name, WebAccelDomainType_value)
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_types_59b68ff833397d8b) }

var fileDescriptor_types_59b68ff833397d8b = []byte{
	// 1936 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x58, 0x4b, 0x6f, 0x1b, 0xc9,
	0x11, 0xce, 0x0c, 0xf5, 0xb0, 0xcb, 0x8f, 0x6d, 0x73, 0xfd, 0x90, 0x2d, 0xd9, 0xb2, 0xd6, 0xbb,
	0x91, 0x76, 0xe4, 0xdd, 0xa5, 0xfc, 0x00, 0x92, 0x53, 0xd2, 0x9c, 0x69, 0x92, 0x0d, 0xce, 0x2b,
	0xdd, 0x4d, 0xd1, 0xca, 0x65, 0x30, 0xa2, 0x26, 0x36, 0x21, 0x8a, 0x23, 0x90, 0xb4, 0x77, 0x95,
	0x53, 0x7e, 0x41, 0x80, 0xfc, 0x80, 0x00, 0xc9, 0x39, 0x40, 0x10, 0x20, 0xf7, 0xdc, 0x73, 0xc9,
	0x35, 0xb9, 0x05, 0x39, 0xe7, 0x4f, 0x2c, 0x6a, 0x48, 0x91, 0x9c, 0x07, 0x29, 0x1d, 0xa7, 0xbe,
	0xaf, 0xab, 0xbb, 0xab, 0xaa, 0xbf, 0xae, 0x1e, 0xb8, 0x35, 0xba, 0x38, 0x8f, 0x86, 0xdf, 0x9e,
	0x0f, 0xe2, 0x51, 0x5c, 0x5e, 0x4d, 0x3e, 0x8c, 0x5f, 0xc0, 0x4d, 0xfa, 0x71, 0xf4, 0xc1, 0xec,
	0x85, 0xc3, 0x61, 0xf9, 0x09, 0x3c, 0xa4, 0x2d, 0xd5, 0x08, 0x4c, 0x9b, 0x4a, 0x19, 0xb4, 0x5c,
	0xe9, 0x33, 0x93, 0xd7, 0x38, 0xb3, 0xc8, 0x4f, 0xca, 0x0f, 0xa1, 0x3c, 0x87, 0x51, 0xd3, 0xf4,
	0x5a, 0xae, 0x22, 0x9a, 0x51, 0x05, 0x40, 0x07, 0x4e, 0x34, 0xfa, 0x10, 0x9f, 0x94, 0x37, 0xe1,
	0x51, 0xc2, 0x72, 0x98, 0x6a, 0x78, 0x56, 0xc6, 0xc5, 0x23, 0xf8, 0x7c, 0x1e, 0xa4, 0x3e, 0x0f,
	0x9a, 0xec, 0x88, 0x68, 0xc6, 0xbf, 0x35, 0xb8, 0x4d, 0x3f, 0x85, 0xdd, 0x5e, 0x78, 0xdc, 0xed,
	0x75, 0x47, 0x17, 0xe5, 0x2d, 0xd8, 0xa0, 0x87, 0x94, 0xdb, 0xb4, 0xca, 0x6d, 0xae, 0x8e, 0x32,
	0x7e, 0x70, 0x99, 0xf3, 0xe8, 0xe4, 0xc3, 0x66, 0x44, 0xcb, 0x61, 0x2d, 0xdf, 0xf6, 0xa8, 0xc5,
	0xdd, 0x3a, 0xd1, 0x93, 0xf9, 0xe7, 0xb1, 0x1a, 0xe5, 0x36, 0xb3, 0x48, 0x29, 0x37, 0xc8, 0xe1,
	0x75, 0x41, 0x15, 0x0e, 0x5a, 0x29, 0x3f, 0x85, 0xc7, 0x29, 0x4c, 0x09, 0xea, 0xca, 0x1a, 0x13,
	0x02, 0xe1, 0xd5, 0x1c, 0x6c, 0x71, 0x69, 0x7a, 0xae, 0xe2, 0x6e, 0x8b, 0x59, 0x64, 0xcd, 0xf8,
	0x15, 0xdc, 0xad, 0x86, 0x9d, 0xd3, 0x8f, 0xe7, 0xf2, 0x3c, 0xec, 0xab, 0x8b, 0xf3, 0xa8, 0xfc,
	0x1c, 0xb6, 0xaa, 0xd4, 0x6c, 0xb6, 0xfc, 0x40, 0xfa, 0xd4, 0x0d, 0xd4, 0x91, 0xcf, 0x32, 0xdb,
	0x7b, 0x0a, 0x8f, 0x73, 0x8c, 0x36, 0x63, 0x4d, 0x8b, 0x1e, 0x49, 0xa2, 0x19, 0x7f, 0xd2, 0xe1,
	0xde, 0xcc, 0x67, 0x3b, 0x8a, 0x4e, 0x4f, 0xc2, 0x8b, 0xf2, 0x0b, 0xd8, 0x9e, 0x1f, 0x34, 0xe1,
	0x67, 0x3c, 0x3f, 0x83, 0x27, 0x45, 0x24, 0xd9, 0x72, 0x2d, 0x7a, 0x44, 0xb4, 0x45, 0xb8, 0xe3,
	0x25, 0xb8, 0x5e, 0xde, 0x86, 0xcd, 0x22, 0x5c, 0xb5, 0x98, 0x44, 0x42, 0xa9, 0xbc, 0x03, 0x4f,
	0x8b, 0x08, 0x6d, 0x66, 0xb9, 0x63, 0xca, 0x4a, 0x76, 0xff, 0x53, 0x1f, 0x8d, 0x96, 0x48, 0x18,
	0xab, 0x8b, 0x56, 0x51, 0x13, 0x1c, 0xf1, 0xb5, 0x45, 0x1e, 0x24, 0x55, 0x2d, 0x81, 0x8c, 0x75,
	0x23, 0x00, 0x30, 0xe3, 0xb3, 0xb3, 0xee, 0xe8, 0x2c, 0xea, 0x8f, 0x30, 0xbb, 0xa6, 0xe7, 0x38,
	0x5c, 0x39, 0xcc, 0x55, 0xf9, 0x92, 0x9c, 0xc3, 0xa4, 0xa2, 0xae, 0x45, 0x85, 0x45, 0x34, 0xac,
	0xc0, 0x39, 0xc0, 0x62, 0x16, 0x37, 0xa9, 0x62, 0x56, 0x60, 0xfa, 0x2d, 0xa2, 0x1b, 0xff, 0xd1,
	0x60, 0xcb, 0x8c, 0xfb, 0xa3, 0xb0, 0xdb, 0x8f, 0x06, 0x22, 0x7a, 0xdf, 0x1d, 0x8e, 0x06, 0x17,
	0xb4, 0xd3, 0x89, 0x86, 0x43, 0x3b, 0xfa, 0x14, 0xf5, 0xca, 0xdf, 0xc1, 0x3e, 0x96, 0x01, 0xe5,
	0x2e, 0x13, 0x81, 0x60, 0x75, 0x2e, 0x95, 0x38, 0xc2, 0x53, 0xc3, 0xa4, 0x0c, 0x6c, 0x76, 0xc8,
	0xec, 0xcc, 0x42, 0xbe, 0x05, 0xe3, 0xaa, 0x01, 0x82, 0x51, 0x2b, 0x68, 0x0b, 0xae, 0xb0, 0xce,
	0xbf, 0x81, 0xaf, 0xaf, 0xc5, 0xf7, 0x5c, 0x1b, 0x33, 0xb7, 0x07, 0x5f, 0x5e, 0x45, 0x77, 0x3d,
	0x97, 0x91, 0x92, 0xf1, 0x2f, 0x0d, 0x36, 0x73, 0x5b, 0xf3, 0xa3, 0xc1, 0x59, 0x77, 0x38, 0xec,
	0xc6, 0xfd, 0x05, 0x13, 0xfb, 0x4c, 0x38, 0x5c, 0x4a, 0xee, 0xb9, 0x99, 0x7d, 0xbd, 0x84, 0xbd,
	0xe5, 0xf4, 0xd4, 0xae, 0xf6, 0x61, 0xf7, 0x1a, 0xec, 0xc9, 0x9e, 0xbe, 0x82, 0x9d, 0xe5, 0x64,
	0x6a, 0xdb, 0xa4, 0x64, 0xfc, 0x45, 0x87, 0x3b, 0x96, 0x2b, 0x45, 0xd4, 0x89, 0x07, 0x27, 0xc9,
	0x11, 0xdc, 0x86, 0x4d, 0xcb, 0x95, 0x81, 0x60, 0xa6, 0x27, 0xac, 0xa2, 0x13, 0xf8, 0x00, 0xee,
	0x65, 0x09, 0x94, 0x68, 0xe5, 0x0d, 0xb8, 0x9f, 0x33, 0x53, 0x4a, 0x89, 0x5e, 0x7e, 0x0c, 0x0f,
	0x72, 0x88, 0xcd, 0xa9, 0x24, 0xa5, 0x22, 0xc8, 0x74, 0xa9, 0xc3, 0xc8, 0x0a, 0x4a, 0x6a, 0x16,
	0x72, 0x25, 0x59, 0x2d, 0xb2, 0x3b, 0xef, 0xc8, 0x1a, 0x16, 0x6b, 0xd6, 0xae, 0xde, 0x29, 0xb2,
	0x5e, 0x04, 0x48, 0x71, 0x48, 0x6e, 0x14, 0x01, 0x26, 0xa5, 0xe4, 0x66, 0x11, 0xe0, 0x2b, 0x41,
	0xc0, 0xf8, 0x87, 0x06, 0xb7, 0xad, 0x70, 0x14, 0x1e, 0x87, 0xc3, 0xc8, 0xef, 0x85, 0x7d, 0x54,
	0x23, 0x8b, 0x2a, 0x5a, 0xa5, 0x92, 0x05, 0xbe, 0x4d, 0xdd, 0xfc, 0xb5, 0x90, 0x86, 0x0f, 0x2a,
	0xf5, 0x2a, 0xd1, 0xf2, 0xf6, 0xd7, 0x68, 0xd7, 0xf3, 0xf6, 0x9f, 0xa3, 0xbd, 0x94, 0x2c, 0x28,
	0x65, 0x7f, 0xf5, 0x06, 0x81, 0x95, 0x3c, 0xf0, 0xb6, 0x82, 0xc0, 0x6a, 0x92, 0xa4, 0xf4, 0xcc,
	0xaa, 0x4a, 0xd6, 0x8c, 0x3f, 0x6b, 0xb0, 0x71, 0xb9, 0x01, 0x11, 0x9d, 0xf7, 0xba, 0x9d, 0x70,
	0xd4, 0x8d, 0xfb, 0x4e, 0x7c, 0x12, 0xf5, 0xca, 0x06, 0xfc, 0x74, 0x3a, 0x46, 0x30, 0xdf, 0xc6,
	0x43, 0x8d, 0x95, 0xe2, 0x78, 0x56, 0xee, 0x44, 0xee, 0xc3, 0xee, 0x12, 0xae, 0x43, 0xa5, 0x62,
	0x22, 0x90, 0x36, 0x3d, 0xc4, 0xc2, 0x7d, 0x09, 0x7b, 0x4b, 0xc8, 0x54, 0x1e, 0xb9, 0xe6, 0xa5,
	0x9d, 0xe8, 0xc6, 0x7b, 0xb8, 0x6b, 0x75, 0x87, 0xa7, 0x66, 0xdc, 0xef, 0x47, 0x1d, 0x5c, 0x5d,
	0x52, 0x92, 0x5c, 0x36, 0x03, 0xd3, 0x73, 0x5d, 0x66, 0xaa, 0xfc, 0x39, 0xda, 0x84, 0x47, 0x59,
	0xc2, 0x21, 0x17, 0x2a, 0xe0, 0x1e, 0xd1, 0x92, 0x18, 0x65, 0x40, 0x6e, 0x31, 0xa2, 0x1b, 0x4d,
	0xb8, 0x81, 0x13, 0x25, 0x89, 0xc4, 0x42, 0x44, 0x52, 0x41, 0x12, 0xef, 0xc1, 0x9d, 0x19, 0x24,
	0x25, 0xea, 0x5f, 0xca, 0xd4, 0xb0, 0x2c, 0xa2, 0x1b, 0xff, 0xd5, 0x60, 0xa3, 0x2e, 0xed, 0x6a,
	0x23, 0x0a, 0x7b, 0xa3, 0x0f, 0xe6, 0x87, 0xa8, 0x73, 0xea, 0x63, 0x2b, 0xd1, 0x89, 0x7b, 0x43,
	0x8c, 0x16, 0x62, 0x41, 0x83, 0x51, 0x1b, 0xbb, 0x84, 0x06, 0x33, 0x9b, 0xcd, 0xc0, 0x17, 0x9e,
	0xf2, 0x4c, 0x2f, 0x1b, 0xda, 0x2f, 0xe1, 0xf9, 0x32, 0x72, 0x43, 0x29, 0x9f, 0x68, 0x78, 0xbe,
	0xaf, 0x62, 0x49, 0xa2, 0xe3, 0xcd, 0xb7, 0x8c, 0xa6, 0x4c, 0x9f, 0x94, 0xae, 0x9a, 0xd1, 0x4f,
	0xee, 0x7a, 0xe3, 0x0c, 0x3e, 0xe3, 0xfd, 0x51, 0x34, 0xf8, 0x4d, 0xd8, 0x89, 0xac, 0x41, 0xf7,
	0x53, 0x34, 0xc0, 0xcb, 0x86, 0xbb, 0x8a, 0x89, 0x1a, 0x35, 0x59, 0x60, 0x09, 0x7e, 0xc8, 0x44,
	0x66, 0x33, 0x5b, 0xb0, 0x91, 0x63, 0xcc, 0x52, 0xf3, 0x04, 0x1e, 0xe6, 0x50, 0x76, 0x50, 0xa9,
	0x54, 0x88, 0x6e, 0xfc, 0x5e, 0x87, 0x6d, 0x3b, 0x0e, 0x4f, 0xaa, 0x61, 0x2f, 0xec, 0x77, 0xa2,
	0x41, 0x41, 0x60, 0xcb, 0xaf, 0xe1, 0x3b, 0x6c, 0x60, 0x82, 0x2a, 0xb5, 0xa9, 0x6b, 0x32, 0x91,
	0xda, 0xc1, 0xa2, 0xf8, 0xbe, 0x84, 0xbd, 0xeb, 0x0c, 0x9a, 0xc4, 0xf9, 0x1b, 0xf8, 0xfa, 0xba,
	0x6c, 0x8c, 0xf7, 0x3e, 0xec, 0x5e, 0x87, 0x3e, 0x8e, 0xfb, 0x35, 0x57, 0x32, 0x89, 0xff, 0x05,
	0x90, 0xf9, 0x78, 0x24, 0x65, 0xfb, 0x05, 0x3c, 0x4b, 0x7b, 0x28, 0xa8, 0xdf, 0x6d, 0xd8, 0x2c,
	0xe0, 0xcc, 0xdd, 0xe6, 0xcf, 0x61, 0xab, 0x80, 0xd0, 0xe0, 0xf5, 0x46, 0x80, 0x7e, 0x88, 0x6e,
	0xfc, 0x53, 0x03, 0x70, 0x6b, 0xb2, 0x61, 0x59, 0xb2, 0xfb, 0xdb, 0x08, 0x93, 0xea, 0xd6, 0x24,
	0x16, 0x7e, 0x20, 0xf9, 0xaf, 0x59, 0x5e, 0xf4, 0x52, 0xe8, 0x41, 0x65, 0x2a, 0x7a, 0x29, 0xfb,
	0x58, 0xaa, 0xf4, 0xf2, 0x7d, 0x20, 0x69, 0xbe, 0x42, 0xc9, 0xcb, 0x5a, 0x5f, 0x29, 0xd4, 0xbb,
	0xac, 0xf5, 0x8d, 0x42, 0xb1, 0xcb, 0x5a, 0x7f, 0x86, 0x5a, 0x87, 0x12, 0x98, 0xf6, 0x8b, 0x2e,
	0xd6, 0x8d, 0x3a, 0xac, 0xbb, 0x35, 0x99, 0x44, 0x6f, 0x03, 0xee, 0x23, 0xa3, 0x20, 0x66, 0x04,
	0x6e, 0x4f, 0x11, 0x3c, 0xdf, 0x5a, 0xca, 0x82, 0x22, 0xa0, 0x1b, 0x7f, 0x1f, 0x07, 0x45, 0xca,
	0x54, 0x50, 0xa4, 0x2c, 0x0c, 0xca, 0x64, 0x31, 0x53, 0xf4, 0x55, 0x2a, 0x26, 0x53, 0xf3, 0x41,
	0x65, 0x7a, 0x11, 0xa4, 0xec, 0xe3, 0x58, 0x4d, 0xa3, 0x32, 0xe3, 0xcf, 0x47, 0x65, 0xe6, 0x7c,
	0x3e, 0x2a, 0x53, 0xeb, 0x9b, 0xe4, 0x06, 0x50, 0x70, 0xcf, 0x3b, 0x8f, 0x06, 0x89, 0xec, 0xfb,
	0x51, 0x3f, 0xec, 0x8d, 0xba, 0x11, 0x96, 0x91, 0xe7, 0x33, 0x31, 0x56, 0x65, 0x9f, 0xb9, 0xd4,
	0x56, 0x9c, 0xe5, 0x35, 0xb6, 0x80, 0x93, 0xf4, 0x45, 0x9a, 0xf1, 0x37, 0x0d, 0x08, 0xf5, 0x79,
	0x33, 0x9a, 0x6f, 0x86, 0xbe, 0x80, 0x67, 0x93, 0x57, 0xcc, 0xe2, 0x0e, 0x08, 0x5f, 0x08, 0x79,
	0x8e, 0x29, 0x18, 0x4d, 0x5a, 0x9e, 0x67, 0xf0, 0xa4, 0x00, 0xa6, 0x42, 0x50, 0xb7, 0xce, 0x88,
	0x9e, 0x3c, 0x85, 0xf2, 0xb8, 0xef, 0xb5, 0x99, 0x20, 0xa5, 0xe4, 0xbd, 0x95, 0x47, 0x0f, 0x39,
	0x6b, 0x93, 0x15, 0x23, 0x82, 0xbb, 0x58, 0x04, 0xf5, 0xa8, 0x3f, 0x89, 0x06, 0x1e, 0x94, 0x24,
	0xbd, 0x75, 0xe6, 0x5e, 0xee, 0x33, 0xbd, 0xd8, 0x0d, 0xb8, 0x9f, 0x25, 0xd4, 0x0f, 0x2a, 0x95,
	0x71, 0xf3, 0x93, 0x43, 0x5e, 0x25, 0x32, 0xf6, 0x7f, 0x0d, 0x6e, 0xf9, 0x83, 0xf8, 0x87, 0x0b,
	0xbb, 0x7a, 0xd9, 0x31, 0xf8, 0xc2, 0x7b, 0x77, 0x14, 0xd8, 0xd5, 0xa2, 0xc2, 0x43, 0x47, 0x29,
	0xd8, 0xf4, 0xe5, 0x6c, 0x8a, 0x2c, 0xf2, 0x16, 0xa7, 0xc0, 0xbb, 0xab, 0x68, 0x4c, 0x65, 0xdc,
	0x5f, 0x15, 0x0d, 0xaa, 0x90, 0x15, 0xd4, 0xde, 0xc2, 0x51, 0x15, 0xb2, 0x5a, 0x88, 0xbd, 0x4d,
	0xb0, 0x35, 0x0c, 0x6a, 0xf1, 0xb8, 0x0a, 0x59, 0x37, 0x4e, 0xe1, 0xb3, 0xcb, 0xcd, 0x5e, 0x6a,
	0xf4, 0x0e, 0x3c, 0x9d, 0xf1, 0x8b, 0x15, 0x39, 0x35, 0x5d, 0x46, 0x7f, 0x53, 0x3b, 0x98, 0x97,
	0x4f, 0xdd, 0xf8, 0x83, 0x06, 0x64, 0x36, 0xdb, 0x0f, 0x17, 0xd8, 0xc5, 0xe0, 0x85, 0x37, 0xcf,
	0x7f, 0x77, 0x94, 0x74, 0x19, 0xf9, 0x5b, 0xa9, 0x88, 0x34, 0x99, 0x32, 0x95, 0xa2, 0x34, 0x8a,
	0x12, 0x9f, 0x0a, 0xc0, 0x0c, 0x4e, 0x24, 0xdd, 0x38, 0x86, 0x3b, 0x93, 0x25, 0xe1, 0xeb, 0x60,
	0x52, 0x54, 0x97, 0x6c, 0x6c, 0xc3, 0x73, 0x45, 0xf5, 0x08, 0x3e, 0xcf, 0x12, 0x54, 0xf3, 0x60,
	0xdc, 0xb7, 0x64, 0x01, 0x2e, 0x0f, 0x88, 0x6e, 0xfc, 0x12, 0x56, 0x65, 0x27, 0x3e, 0x8f, 0x50,
	0x54, 0xa4, 0xe9, 0xe5, 0x1a, 0x74, 0x02, 0xb7, 0xc7, 0x66, 0xd9, 0xa0, 0x82, 0xa1, 0x78, 0xdd,
	0x05, 0x98, 0x10, 0x25, 0x13, 0x44, 0x37, 0x3e, 0xc1, 0x2d, 0xc9, 0x9d, 0xb1, 0x0e, 0xc4, 0x03,
	0x0c, 0x87, 0xe4, 0x4e, 0x30, 0x3e, 0xde, 0x9e, 0xc8, 0x4b, 0x57, 0x0a, 0x6d, 0x5a, 0x16, 0x1f,
	0x2f, 0x2f, 0x65, 0xb6, 0x3c, 0xd3, 0x73, 0xbc, 0x71, 0x39, 0xa6, 0x00, 0xe9, 0xd5, 0x54, 0x95,
	0xba, 0x4d, 0x52, 0x32, 0xfe, 0x58, 0x82, 0x07, 0xb2, 0x7b, 0x76, 0xde, 0x8b, 0x9c, 0xb8, 0xdf,
	0x1d, 0xc5, 0x83, 0x69, 0x95, 0xec, 0xc2, 0x0b, 0xc9, 0x1d, 0xdf, 0x66, 0xf8, 0x9e, 0xe6, 0x38,
	0x6c, 0x41, 0xad, 0x3c, 0x87, 0xad, 0x45, 0xc4, 0x49, 0xfa, 0x76, 0xe0, 0xe9, 0x32, 0x06, 0xa6,
	0x70, 0x89, 0x93, 0xe4, 0xb2, 0x2d, 0x61, 0xda, 0x16, 0x31, 0x30, 0xd1, 0x2b, 0xcb, 0x08, 0x56,
	0xf2, 0x4e, 0x59, 0x42, 0x90, 0xb2, 0x31, 0x7e, 0xa9, 0x2f, 0x24, 0x38, 0xca, 0x27, 0xeb, 0x4b,
	0x97, 0xe9, 0xf9, 0xaf, 0xc9, 0x8d, 0xa5, 0x3e, 0x5c, 0xc7, 0x27, 0x37, 0xb1, 0x21, 0x59, 0xbc,
	0x0c, 0x3b, 0x30, 0x99, 0x50, 0xbc, 0x96, 0x3c, 0xdf, 0x09, 0x18, 0xff, 0xd3, 0xe0, 0xf1, 0xa1,
	0x6f, 0x8a, 0xf8, 0xe3, 0x28, 0x1a, 0xd4, 0xba, 0x83, 0xe8, 0xfb, 0xb0, 0xd7, 0x9b, 0xe6, 0xe8,
	0x25, 0xec, 0x1d, 0xfa, 0x66, 0x20, 0xbc, 0x16, 0x36, 0xf7, 0x35, 0x2e, 0x58, 0x9b, 0xda, 0xf6,
	0x92, 0x36, 0x76, 0x29, 0x1b, 0xc3, 0xa8, 0x5d, 0xc9, 0x6a, 0x59, 0xfe, 0xf8, 0x31, 0xbb, 0x94,
	0xc5, 0x4d, 0x07, 0xfb, 0xa9, 0x17, 0xb0, 0xbd, 0x9c, 0xe6, 0x93, 0x15, 0xe3, 0xaf, 0x1a, 0xdc,
	0x99, 0xee, 0x31, 0x91, 0xe4, 0x6d, 0xd8, 0x9c, 0x1b, 0x56, 0x20, 0xca, 0x5b, 0xb0, 0x91, 0x25,
	0xcc, 0xb5, 0x4f, 0x9b, 0xf0, 0x28, 0x8b, 0xfa, 0x82, 0x39, 0xbc, 0xe5, 0x10, 0x1d, 0xb5, 0x24,
	0x0b, 0xce, 0x1a, 0xab, 0x12, 0x5e, 0x91, 0x0b, 0xe1, 0xe0, 0x4d, 0x22, 0xd4, 0x78, 0xb7, 0x6e,
	0xcf, 0x16, 0x1c, 0x0f, 0x46, 0xb5, 0x78, 0xf0, 0x7d, 0x38, 0x38, 0xe9, 0xf6, 0xdf, 0xcf, 0x37,
	0xc2, 0xf3, 0x7e, 0x3c, 0xa1, 0x82, 0x9a, 0x27, 0xda, 0x54, 0x58, 0xdc, 0xad, 0x2f, 0xca, 0xd0,
	0x3e, 0xec, 0x5e, 0x67, 0xd0, 0x38, 0x51, 0xd7, 0x24, 0x27, 0xf9, 0x32, 0x7e, 0xa7, 0x41, 0xb9,
	0x1d, 0x1d, 0xd3, 0x4e, 0x27, 0xea, 0x59, 0xf1, 0x59, 0xd8, 0x1d, 0xff, 0xdd, 0xfb, 0x0a, 0x76,
	0xda, 0xac, 0x9a, 0xfc, 0x58, 0xb1, 0x03, 0xcb, 0x73, 0x28, 0x5f, 0xf4, 0x8b, 0xaf, 0x98, 0xe6,
	0xb5, 0xdd, 0x71, 0xc9, 0x14, 0xc3, 0xb2, 0x55, 0x9d, 0x7c, 0x13, 0xfd, 0x78, 0x2d, 0xf9, 0x91,
	0xfb, 0xfa, 0xc7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52, 0x12, 0xec, 0xbd, 0xd7, 0x15, 0x00, 0x00,
}

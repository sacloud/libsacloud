syntax = "proto3";
package sacloud;
option go_package = "github.com/sacloud/libsacloud/v2/grpc/sacloud/types";

import "types/types.proto";

message ApplianceConnectedSwitch {
  int64 id = 1;
  types.Scope scope = 2;
}

// message AppliedAt {}

/*
message Archive {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  int64 displayOrder = 5;
  libsacloud.sacloud.types.v2.Availability availability = 6;
  libsacloud.sacloud.types.v2.Scope scope = 7;
  int64 sizeMB = 8;
  int64 migratedMB = 9;
  sint64 diskPlanID = 10;
  string diskPlanName = 11;
  string diskPlanStorageClass = 12;
  int64 sourceDiskID = 13;
  libsacloud.sacloud.types.v2.Availability sourceDiskAvailability = 14;
  int64 sourceArchiveID = 15;
  libsacloud.sacloud.types.v2.Availability sourceArchiveAvailability = 16;
  BundleInfo bundleInfo = 17;
  Storage storage = 18;
  int64 iconID = 19;
  Time createdAt = 20;
  Time modifiedAt = 21;
  int64 originalArchiveID = 22;
  SourceArchiveInfo sourceInfo = 23;
}
message ArchiveCreateBlankRequest {
  int64 sizeMB = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  sint64 iconID = 5;
}

message ArchiveCreateRequest {
  sint64 sourceDiskID = 1;
  sint64 sourceArchiveID = 2;
  string name = 3;
  string description = 4;
  repeated Tags tags = 5;
  sint64 iconID = 6;
}

message ArchiveFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Archive archives = 4;
}

message ArchiveOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message ArchiveUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
}

message AuthStatus {
  sint64 accountID = 1;
  string accountName = 2;
  string accountCode = 3;
  string accountClass = 4;
  string memberCode = 5;
  string memberClass = 6;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAuthClass authClass = 7;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAuthMethod authMethod = 8;
  bool isAPIKey = 9;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.ExternalPermission externalPermission = 10;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EOperationPenalty operationPenalty = 11;
  github.com/sacloud/libsacloud/v2/sacloud/types.EPermission permission = 12;
}

message AuthStatusOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message AutoBackup {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  sint64 iconID = 6;
  Time createdAt = 7;
  Time modifiedAt = 8;
  repeated EBackupSpanWeekday backupSpanWeekdays = 9;
  int64 maximumNumberOfArchives = 10;
  string settingsHash = 11;
  sint64 diskID = 12;
  sint64 accountID = 13;
  sint64 zoneID = 14;
  string zoneName = 15;
}

message AutoBackupCreateRequest {
  sint64 diskID = 1;
  repeated EBackupSpanWeekday backupSpanWeekdays = 2;
  int64 maximumNumberOfArchives = 3;
  string name = 4;
  string description = 5;
  repeated Tags tags = 6;
  sint64 iconID = 7;
}

message AutoBackupFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated AutoBackup autoBackups = 4;
}

message AutoBackupOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message AutoBackupUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  repeated EBackupSpanWeekday backupSpanWeekdays = 5;
  int64 maximumNumberOfArchives = 6;
  string settingsHash = 7;
}

message AutoBackupUpdateSettingsRequest {
  repeated EBackupSpanWeekday backupSpanWeekdays = 1;
  int64 maximumNumberOfArchives = 2;
  string settingsHash = 3;
}

message Bill {
  int64 id = 1;
  int64 amount = 2;
  Time date = 3;
  string memberID = 4;
  bool paid = 5;
  Time payLimit = 6;
  sint64 paymentClassID = 7;
}

message BillByContractResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Bill bills = 4;
}

message BillByContractYearMonthResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Bill bills = 4;
}

message BillByContractYearResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Bill bills = 4;
}

message BillDetail {
  int64 id = 1;
  int64 amount = 2;
  string description = 3;
  sint64 serviceClassID = 4;
  int64 usage = 5;
  string zone = 6;
  Time contractEndAt = 7;
}

message BillDetailCSV {
  int64 count = 1;
  Time responsedAt = 2;
  string filename = 3;
  string rawBody = 4;
  repeated string headerRow = 5;
  repeated string bodyRows = 6;
}

message BillDetailsResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated BillDetail billDetails = 4;
}

message BillOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message BillReadResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Bill bills = 4;
}

message Bridge {
  int64 id = 1;
  string name = 2;
  string description = 3;
  Time createdAt = 4;
  Region region = 5;
  repeated BridgeInfo bridgeInfo = 6;
  BridgeSwitchInfo switchInZone = 7;
}

message BridgeCreateRequest {
  string name = 1;
  string description = 2;
}

message BridgeFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Bridge bridges = 4;
}

message BridgeInfo {
  int64 id = 1;
  string name = 2;
  sint64 zoneID = 3;
  string zoneName = 4;
}

message BridgeOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message BridgeSwitchInfo {
  int64 id = 1;
  string name = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope scope = 3;
  int64 serverCount = 4;
  int64 applianceCount = 5;
}

message BridgeUpdateRequest {
  string name = 1;
  string description = 2;
}

message BundleInfo {
  int64 id = 1;
  string hostClass = 2;
  string serviceClass = 3;
}

message CDROM {
  int64 id = 1;
  string name = 2;
  string description = 3;
  int64 displayOrder = 4;
  repeated Tags tags = 5;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 6;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope scope = 7;
  Storage storage = 8;
  int64 sizeMB = 9;
  sint64 iconID = 10;
  Time createdAt = 11;
  Time modifiedAt = 12;
}

message CDROMCreateRequest {
  int64 sizeMB = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  sint64 iconID = 5;
}

message CDROMFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated CDROM cDROMs = 4;
}

message CDROMOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message CDROMUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
}

message CPUTimeActivity { repeated MonitorCPUTimeValue values = 1; }

message CertificateEndDate {}

message Client {
  string accessToken = 1;
  string accessTokenSecret = 2;
  string userAgent = 3;
  string acceptLanguage = 4;
  int64 retryMax = 5;
  time.Duration retryWaitMin = 6;
  time.Duration retryWaitMax = 7;
  Client hTTPClient = 8;
}

message ConnectedSwitch {
  int64 id = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope scope = 2;
}

message ConnectionActivity { repeated MonitorConnectionValue values = 1; }

message ContainerRegistry {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  sint64 iconID = 6;
  Time createdAt = 7;
  Time modifiedAt = 8;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EContainerRegistryAccessLevel accessLevel = 9;
  string virtualDomain = 10;
  string settingsHash = 11;
  string subDomainLabel = 12;
  string fQDN = 13;
}

message ContainerRegistryCreateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EContainerRegistryAccessLevel accessLevel = 5;
  string virtualDomain = 6;
  string subDomainLabel = 7;
}

message ContainerRegistryFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated ContainerRegistry containerRegistries = 4;
}

message ContainerRegistryOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message ContainerRegistryUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EContainerRegistryAccessLevel accessLevel = 5;
  string virtualDomain = 6;
  string settingsHash = 7;
}

message ContainerRegistryUpdateSettingsRequest {
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EContainerRegistryAccessLevel accessLevel = 1;
  string virtualDomain = 2;
  string settingsHash = 3;
}

message ContainerRegistryUser {
  string userName = 1;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EContainerRegistryPermission permission = 2;
}

message ContainerRegistryUserCreateRequest {
  string userName = 1;
  string password = 2;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EContainerRegistryPermission permission = 3;
}

message ContainerRegistryUserUpdateRequest {
  string password = 1;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EContainerRegistryPermission permission = 2;
}

message ContainerRegistryUsers { repeated ContainerRegistryUser users = 1; }

message ContractEndAt {}

message Coupon {
  int64 id = 1;
  string memberID = 2;
  sint64 contractID = 3;
  sint64 serviceClassID = 4;
  int64 discount = 5;
  Time appliedAt = 6;
  Time untilAt = 7;
}

message CouponFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Coupon coupons = 4;
}

message CouponOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message CreatedAt {}

message DNS {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  sint64 iconID = 6;
  Time createdAt = 7;
  Time modifiedAt = 8;
  repeated DNSRecord records = 9;
  string settingsHash = 10;
  string dNSZone = 11;
  repeated string dNSNameServers = 12;
}

message DNSCreateRequest {
  string name = 1;
  repeated DNSRecord records = 2;
  string description = 3;
  repeated Tags tags = 4;
  sint64 iconID = 5;
}

message DNSFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated DNS dNS = 4;
}

message DNSOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message DNSRecord {
  string name = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.EDNSRecordType type = 2;
  string rData = 3;
  int64 tTL = 4;
}

message DNSUpdateRequest {
  string description = 1;
  repeated Tags tags = 2;
  sint64 iconID = 3;
  repeated DNSRecord records = 4;
  string settingsHash = 5;
}

message DNSUpdateSettingsRequest {
  repeated DNSRecord records = 1;
  string settingsHash = 2;
}

message Database {
  int64 id = 1;
  string class = 2;
  string name = 3;
  string description = 4;
  repeated Tags tags = 5;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 6;
  sint64 iconID = 7;
  Time createdAt = 8;
  Time modifiedAt = 9;
  DatabaseSettingCommon commonSetting = 10;
  DatabaseSettingBackup backupSetting = 11;
  DatabaseReplicationSetting replicationSetting = 12;
  string settingsHash = 13;
  string instanceHostName = 14;
  string instanceHostInfoURL = 15;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EServerInstanceStatus instanceStatus = 16;
  Time instanceStatusChangedAt = 17;
  sint64 planID = 18;
  sint64 switchID = 19;
  DatabaseRemarkDBConfCommon conf = 20;
  string defaultRoute = 21;
  int64 networkMaskLen = 22;
  repeated string iPAddresses = 23;
  sint64 zoneID = 24;
  repeated InterfaceView interfaces = 25;
}

message DatabaseActivity { repeated MonitorDatabaseValue values = 1; }

message DatabaseBackupHistory {
  Time createdAt = 1;
  string availability = 2;
  Time recoveredAt = 3;
  int64 size = 4;
}

message DatabaseCreateRequest {
  sint64 planID = 1;
  sint64 switchID = 2;
  repeated string iPAddresses = 3;
  int64 networkMaskLen = 4;
  string defaultRoute = 5;
  DatabaseRemarkDBConfCommon conf = 6;
  sint64 sourceID = 7;
  DatabaseSettingCommon commonSetting = 8;
  DatabaseSettingBackup backupSetting = 9;
  DatabaseReplicationSetting replicationSetting = 10;
  string name = 11;
  string description = 12;
  repeated Tags tags = 13;
  sint64 iconID = 14;
}

message DatabaseFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Database databases = 4;
}

message DatabaseLog {
  string name = 1;
  string data = 2;
  int64 size = 3;
}

message DatabaseOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message DatabaseRemarkDBConfCommon {
  string databaseName = 1;
  string databaseVersion = 2;
  string databaseRevision = 3;
  string defaultUser = 4;
  string userPassword = 5;
}

message DatabaseReplicationSetting {
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EDatabaseReplicationModel model = 1;
  string iPAddress = 2;
  int64 port = 3;
  string user = 4;
  string password = 5;
  sint64 applianceID = 6;
}

message DatabaseSettingBackup {
  int64 rotate = 1;
  string time = 2;
  repeated EBackupSpanWeekday dayOfWeek = 3;
}

message DatabaseSettingCommon {
  github.com/sacloud/libsacloud/v2/sacloud/types.WebUI webUI = 1;
  int64 servicePort = 2;
  repeated string sourceNetwork = 3;
  string defaultUser = 4;
  string userPassword = 5;
  string replicaUser = 6;
  string replicaPassword = 7;
}

message DatabaseStatus {
  github.com/sacloud/libsacloud/v2/sacloud/types.EServerInstanceStatus status =
      1;
  bool isFatal = 2;
  DatabaseVersionInfo version = 3;
  repeated DatabaseLog logs = 4;
  repeated DatabaseBackupHistory backups = 5;
}

message DatabaseUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  DatabaseSettingCommon commonSetting = 5;
  DatabaseSettingBackup backupSetting = 6;
  DatabaseReplicationSetting replicationSetting = 7;
  string settingsHash = 8;
}

message DatabaseUpdateSettingsRequest {
  DatabaseSettingCommon commonSetting = 1;
  DatabaseSettingBackup backupSetting = 2;
  DatabaseReplicationSetting replicationSetting = 3;
  string settingsHash = 4;
}

message DatabaseVersionInfo {
  string lastModified = 1;
  string commitHash = 2;
  string status = 3;
  string tag = 4;
  string expire = 5;
}

message Date {}

message DeactivatedDate {}

message Disk {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  github.com/sacloud/libsacloud/v2/sacloud/types.EDiskConnection connection = 6;
  int64 connectionOrder = 7;
  int64 reinstallCount = 8;
  JobStatus jobStatus = 9;
  int64 sizeMB = 10;
  int64 migratedMB = 11;
  sint64 diskPlanID = 12;
  string diskPlanName = 13;
  string diskPlanStorageClass = 14;
  sint64 sourceDiskID = 15;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EAvailability sourceDiskAvailability = 16;
  sint64 sourceArchiveID = 17;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EAvailability sourceArchiveAvailability = 18;
  BundleInfo bundleInfo = 19;
  Storage storage = 20;
  sint64 serverID = 21;
  sint64 iconID = 22;
  Time createdAt = 23;
  Time modifiedAt = 24;
}

message DiskActivity { repeated MonitorDiskValue values = 1; }

message DiskCreateRequest {
  sint64 diskPlanID = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.EDiskConnection connection = 2;
  sint64 sourceDiskID = 3;
  sint64 sourceArchiveID = 4;
  sint64 serverID = 5;
  int64 sizeMB = 6;
  string name = 7;
  string description = 8;
  repeated Tags tags = 9;
  sint64 iconID = 10;
}

message DiskEditNote {
  int64 id = 1;
  map
  [string] interface {}
  variables = 2;
}

message DiskEditRequest {
  bool background = 1;
  string password = 2;
  DiskEditSSHKey sSHKey = 3;
  repeated DiskEditSSHKey sSHKeys = 4;
  bool disablePWAuth = 5;
  bool enableDHCP = 6;
  bool changePartitionUUID = 7;
  string hostName = 8;
  repeated DiskEditNote notes = 9;
  string userIPAddress = 10;
  DiskEditUserSubnet userSubnet = 11;
}

message DiskEditSSHKey {
  int64 id = 1;
  string publicKey = 2;
}

message DiskEditUserSubnet {
  string defaultRoute = 1;
  int64 networkMaskLen = 2;
}

message DiskFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Disk disks = 4;
}

message DiskInstallRequest {
  sint64 sourceDiskID = 1;
  sint64 sourceArchiveID = 2;
  int64 sizeMB = 3;
}

message DiskOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message DiskPlan {
  int64 id = 1;
  string name = 2;
  string storageClass = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 4;
  repeated DiskPlanSizeInfo size = 5;
}

message DiskPlanFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated DiskPlan diskPlans = 4;
}

message DiskPlanOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message DiskPlanSizeInfo {
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 1;
  int64 displaySize = 2;
  string displaySuffix = 3;
  int64 sizeMB = 4;
}

message DiskResizePartitionRequest { bool background = 1; }

message DiskUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EDiskConnection connection = 5;
}

message EjectCDROMRequest { int64 id = 1; }

message End {}

message FTPServer {
  string hostName = 1;
  string iPAddress = 2;
  string user = 3;
  string password = 4;
}

message FTPServerInfo {
  string hostName = 1;
  string iPAddress = 2;
}

message FindCondition {
  int64 count = 1;
  int64 from = 2;
  repeated SortKeys sort = 3;
  github.com/sacloud/libsacloud/v2/sacloud/search.Filter filter = 4;
  repeated string include = 5;
  repeated string exclude = 6;
}

message FreeDiskSizeActivity { repeated MonitorFreeDiskSizeValue values = 1; }

message GSLB {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  sint64 iconID = 6;
  Time createdAt = 7;
  Time modifiedAt = 8;
  string settingsHash = 9;
  string fQDN = 10;
  int64 delayLoop = 11;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag weighted = 12;
  GSLBHealthCheck healthCheck = 13;
  string sorryServer = 14;
  repeated GSLBServer destinationServers = 15;
}

message GSLBCreateRequest {
  GSLBHealthCheck healthCheck = 1;
  int64 delayLoop = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag weighted = 3;
  string sorryServer = 4;
  repeated GSLBServer destinationServers = 5;
  string name = 6;
  string description = 7;
  repeated Tags tags = 8;
  sint64 iconID = 9;
}

message GSLBFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated GSLB gSLBs = 4;
}

message GSLBHealthCheck {
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EGSLBHealthCheckProtocol protocol = 1;
  string hostHeader = 2;
  string path = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber responseCode = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber port = 5;
}

message GSLBOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message GSLBServer {
  string iPAddress = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag enabled = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber weight = 3;
}

message GSLBUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  GSLBHealthCheck healthCheck = 5;
  int64 delayLoop = 6;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag weighted = 7;
  string sorryServer = 8;
  repeated GSLBServer destinationServers = 9;
  string settingsHash = 10;
}

message GSLBUpdateSettingsRequest {
  GSLBHealthCheck healthCheck = 1;
  int64 delayLoop = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag weighted = 3;
  string sorryServer = 4;
  repeated GSLBServer destinationServers = 5;
  string settingsHash = 6;
}

message IPAddress {
  string hostName = 1;
  string iPAddress = 2;
  sint64 interfaceID = 3;
  sint64 subnetID = 4;
}

message IPAddressListResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated IPAddress iPAddress = 4;
}

message IPAddressOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message IPv6Addr {
  string iPv6Addr = 1;
  string hostName = 2;
  sint64 iPv6NetID = 3;
  sint64 switchID = 4;
  sint64 interfaceID = 5;
}

message IPv6AddrCreateRequest {
  string iPv6Addr = 1;
  string hostName = 2;
}

message IPv6AddrFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated IPv6Addr iPv6Addrs = 4;
}

message IPv6AddrOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message IPv6AddrUpdateRequest { string hostName = 1; }

message IPv6Net {
  int64 id = 1;
  sint64 serviceID = 2;
  string iPv6Prefix = 3;
  int64 iPv6PrefixLen = 4;
  string iPv6PrefixTail = 5;
  string serviceClass = 6;
  sint64 iPv6TableID = 7;
  int64 namedIPv6AddrCount = 8;
  Time createdAt = 9;
  sint64 switchID = 10;
}

message IPv6NetInfo {
  int64 id = 1;
  string iPv6Prefix = 2;
  int64 iPv6PrefixLen = 3;
}

message IPv6NetListResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated IPv6Net iPv6Nets = 4;
}

message IPv6NetOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message Icon {
  int64 id = 1;
  string name = 2;
  repeated Tags tags = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope scope = 5;
  string uRL = 6;
  Time createdAt = 7;
  Time modifiedAt = 8;
}

message IconCreateRequest {
  string name = 1;
  repeated Tags tags = 2;
  string image = 3;
}

message IconFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Icon icons = 4;
}

message IconOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message IconUpdateRequest {
  string name = 1;
  repeated Tags tags = 2;
}

message InsertCDROMRequest { int64 id = 1; }

message InstanceStatusChangedAt {}

message Interface {
  int64 id = 1;
  string mACAddress = 2;
  string iPAddress = 3;
  string userIPAddress = 4;
  string hostName = 5;
  sint64 switchID = 6;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope switchScope = 7;
  sint64 packetFilterID = 8;
  sint64 serverID = 9;
  Time createdAt = 10;
}

message InterfaceActivity { repeated MonitorInterfaceValue values = 1; }

message InterfaceCreateRequest { sint64 serverID = 1; }

message InterfaceFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Interface interfaces = 4;
}

message InterfaceOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message InterfaceUpdateRequest { string userIPAddress = 1; }

message InterfaceView {
  int64 id = 1;
  string mACAddress = 2;
  string iPAddress = 3;
  string userIPAddress = 4;
  string hostName = 5;
  sint64 switchID = 6;
  string switchName = 7;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope switchScope = 8;
  string userSubnetDefaultRoute = 9;
  int64 userSubnetNetworkMaskLen = 10;
  string subnetDefaultRoute = 11;
  int64 subnetNetworkMaskLen = 12;
  string subnetNetworkAddress = 13;
  int64 subnetBandWidthMbps = 14;
  sint64 packetFilterID = 15;
  string packetFilterName = 16;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringNumber packetFilterRequiredHostVersion = 17;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EUpstreamNetworkType upstreamType = 18;
}

message Internet {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  sint64 iconID = 5;
  Time createdAt = 6;
  int64 bandWidthMbps = 7;
  int64 networkMaskLen = 8;
  SwitchInfo switch = 9;
}

message InternetAddSubnetRequest {
  int64 networkMaskLen = 1;
  string nextHop = 2;
}

message InternetCreateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  int64 networkMaskLen = 5;
  int64 bandWidthMbps = 6;
}

message InternetFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Internet internet = 4;
}

message InternetOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message InternetPlan {
  int64 id = 1;
  string name = 2;
  int64 bandWidthMbps = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 4;
}

message InternetPlanFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated InternetPlan internetPlans = 4;
}

message InternetPlanOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message InternetSubnet {
  int64 id = 1;
  string defaultRoute = 2;
  string nextHop = 3;
  string staticRoute = 4;
  string networkAddress = 5;
  int64 networkMaskLen = 6;
}

message InternetSubnetOperationResult {
  int64 id = 1;
  string defaultRoute = 2;
  string nextHop = 3;
  string staticRoute = 4;
  string networkAddress = 5;
  int64 networkMaskLen = 6;
  repeated string iPAddresses = 7;
}

message InternetUpdateBandWidthRequest { int64 bandWidthMbps = 1; }

message InternetUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
}

message InternetUpdateSubnetRequest { string nextHop = 1; }

message JobConfigError {
  string errorCode = 1;
  string errorMsg = 2;
  string status = 3;
}

message JobStatus {
  string status = 1;
  JobConfigError configError = 2;
}

message LastCheckedAt {}

message LastHealthChangedAt {}

message License {
  int64 id = 1;
  string name = 2;
  sint64 licenseInfoID = 3;
  string licenseInfoName = 4;
  Time createdAt = 5;
  Time modifiedAt = 6;
}

message LicenseCreateRequest {
  string name = 1;
  sint64 licenseInfoID = 2;
}

message LicenseFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated License licenses = 4;
}

message LicenseInfo {
  int64 id = 1;
  string name = 2;
  Time createdAt = 3;
  Time modifiedAt = 4;
  string termsOfUse = 5;
}

message LicenseInfoFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated LicenseInfo licenseInfo = 4;
}

message LicenseInfoOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message LicenseOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message LicenseUpdateRequest { string name = 1; }

message LinkActivity { repeated MonitorLinkValue values = 1; }

message LoadBalancer {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  string class = 6;
  sint64 iconID = 7;
  Time createdAt = 8;
  Time modifiedAt = 9;
  string instanceHostName = 10;
  string instanceHostInfoURL = 11;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EServerInstanceStatus instanceStatus = 12;
  Time instanceStatusChangedAt = 13;
  sint64 planID = 14;
  sint64 switchID = 15;
  string defaultRoute = 16;
  int64 networkMaskLen = 17;
  repeated string iPAddresses = 18;
  sint64 zoneID = 19;
  int64 vRID = 20;
  repeated LoadBalancerVirtualIPAddress virtualIPAddresses = 21;
  string settingsHash = 22;
  repeated InterfaceView interfaces = 23;
}

message LoadBalancerCreateRequest {
  sint64 switchID = 1;
  sint64 planID = 2;
  int64 vRID = 3;
  repeated string iPAddresses = 4;
  int64 networkMaskLen = 5;
  string defaultRoute = 6;
  string name = 7;
  string description = 8;
  repeated Tags tags = 9;
  sint64 iconID = 10;
  repeated LoadBalancerVirtualIPAddress virtualIPAddresses = 11;
}

message LoadBalancerFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated LoadBalancer loadBalancers = 4;
}

message LoadBalancerOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message LoadBalancerServer {
  string iPAddress = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber port = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag enabled = 3;
  LoadBalancerServerHealthCheck healthCheck = 4;
}

message LoadBalancerServerHealthCheck {
  github.com/sacloud/libsacloud/v2/sacloud/
      types.ELoadBalancerHealthCheckProtocol protocol = 1;
  string path = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber responseCode = 3;
}

message LoadBalancerServerStatus {
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber activeConn = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.EServerInstanceStatus status =
      2;
  string iPAddress = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber port = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber cPS = 5;
}

message LoadBalancerStatus {
  string virtualIPAddress = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber port = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber cPS = 3;
  repeated LoadBalancerServerStatus servers = 4;
}

message LoadBalancerStatusResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated LoadBalancerStatus status = 4;
}

message LoadBalancerUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  repeated LoadBalancerVirtualIPAddress virtualIPAddresses = 5;
  string settingsHash = 6;
}

message LoadBalancerUpdateSettingsRequest {
  repeated LoadBalancerVirtualIPAddress virtualIPAddresses = 1;
  string settingsHash = 2;
}

message LoadBalancerVirtualIPAddress {
  string virtualIPAddress = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber port = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber delayLoop = 3;
  string sorryServer = 4;
  string description = 5;
  repeated LoadBalancerServer servers = 6;
}

message LocalRouter {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  sint64 iconID = 6;
  Time createdAt = 7;
  Time modifiedAt = 8;
  LocalRouterSwitch switch = 9;
  LocalRouterInterface interface = 10;
  repeated LocalRouterPeer peers = 11;
  repeated LocalRouterStaticRoute staticRoutes = 12;
  string settingsHash = 13;
  repeated string secretKeys = 14;
}

message LocalRouterActivity { repeated MonitorLocalRouterValue values = 1; }

message LocalRouterCreateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
}

message LocalRouterFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated LocalRouter localRouters = 4;
}

message LocalRouterHealth { repeated LocalRouterHealthPeer peers = 1; }

message LocalRouterHealthPeer {
  int64 id = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.EServerInstanceStatus status =
      2;
  repeated string routes = 3;
}

message LocalRouterInterface {
  string virtualIPAddress = 1;
  repeated string iPAddress = 2;
  int64 networkMaskLen = 3;
  int64 vRID = 4;
}

message LocalRouterOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message LocalRouterPeer {
  int64 id = 1;
  string secretKey = 2;
  bool enabled = 3;
  string description = 4;
}

message LocalRouterStaticRoute {
  string prefix = 1;
  string nextHop = 2;
}

message LocalRouterSwitch {
  string code = 1;
  string category = 2;
  string zoneID = 3;
}

message LocalRouterUpdateRequest {
  LocalRouterSwitch switch = 1;
  LocalRouterInterface interface = 2;
  repeated LocalRouterPeer peers = 3;
  repeated LocalRouterStaticRoute staticRoutes = 4;
  string settingsHash = 5;
  string name = 6;
  string description = 7;
  repeated Tags tags = 8;
  sint64 iconID = 9;
}

message LocalRouterUpdateSettingsRequest {
  LocalRouterSwitch switch = 1;
  LocalRouterInterface interface = 2;
  repeated LocalRouterPeer peers = 3;
  repeated LocalRouterStaticRoute staticRoutes = 4;
  string settingsHash = 5;
}

message MobileGateway {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  string class = 6;
  sint64 iconID = 7;
  Time createdAt = 8;
  string instanceHostName = 9;
  string instanceHostInfoURL = 10;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EServerInstanceStatus instanceStatus = 11;
  Time instanceStatusChangedAt = 12;
  repeated MobileGatewayInterface interfaces = 13;
  sint64 zoneID = 14;
  MobileGatewaySetting settings = 15;
  string settingsHash = 16;
}

message MobileGatewayAddSIMRequest { string sIMID = 1; }

message MobileGatewayCreateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  MobileGatewaySettingCreate settings = 5;
}

message MobileGatewayDNSSetting {
  string dNS1 = 1;
  string dNS2 = 2;
}

message MobileGatewayFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated MobileGateway mobileGateways = 4;
}

message MobileGatewayInterface {
  int64 id = 1;
  string mACAddress = 2;
  string iPAddress = 3;
  string userIPAddress = 4;
  string hostName = 5;
  sint64 switchID = 6;
  string switchName = 7;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope switchScope = 8;
  string userSubnetDefaultRoute = 9;
  int64 userSubnetNetworkMaskLen = 10;
  string subnetDefaultRoute = 11;
  int64 subnetNetworkMaskLen = 12;
  string subnetNetworkAddress = 13;
  int64 subnetBandWidthMbps = 14;
  sint64 packetFilterID = 15;
  string packetFilterName = 16;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringNumber packetFilterRequiredHostVersion = 17;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EUpstreamNetworkType upstreamType = 18;
  int64 index = 19;
}

message MobileGatewayInterfaceSetting {
  repeated string iPAddress = 1;
  int64 networkMaskLen = 2;
  int64 index = 3;
}

message MobileGatewayOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message MobileGatewaySIMInfo {
  string iCCID = 1;
  repeated string iMSI = 2;
  string ip = 3;
  string sessionStatus = 4;
  bool iMEILock = 5;
  bool registered = 6;
  bool activated = 7;
  string resourceID = 8;
  Time registeredDate = 9;
  Time activatedDate = 10;
  Time deactivatedDate = 11;
  string sIMGroupID = 12;
  SIMTrafficBytes trafficBytesOfCurrentMonth = 13;
  string connectedIMEI = 14;
}

message MobileGatewaySIMLogs {
  Time date = 1;
  string sessionStatus = 2;
  string resourceID = 3;
  string iMEI = 4;
  string iMSI = 5;
}

message MobileGatewaySIMRoute {
  string resourceID = 1;
  string prefix = 2;
  string iCCID = 3;
}

message MobileGatewaySIMRouteParam {
  string resourceID = 1;
  string prefix = 2;
}

message MobileGatewaySetting {
  repeated MobileGatewayInterfaceSetting interfaces = 1;
  repeated MobileGatewayStaticRoute staticRoute = 2;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringFlag internetConnectionEnabled = 3;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringFlag interDeviceCommunicationEnabled = 4;
}

message MobileGatewaySettingCreate {
  repeated MobileGatewayStaticRoute staticRoute = 1;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringFlag internetConnectionEnabled = 2;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringFlag interDeviceCommunicationEnabled = 3;
}

message MobileGatewayStaticRoute {
  string prefix = 1;
  string nextHop = 2;
}

message MobileGatewayTrafficControl {
  int64 trafficQuotaInMB = 1;
  int64 bandWidthLimitInKbps = 2;
  bool emailNotifyEnabled = 3;
  bool slackNotifyEnabled = 4;
  string slackNotifyWebhooksURL = 5;
  bool autoTrafficShaping = 6;
}

message MobileGatewayTrafficStatus {
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber uplinkBytes = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber downlinkBytes = 2;
  bool trafficShaping = 3;
}

message MobileGatewayUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  MobileGatewaySetting settings = 5;
  string settingsHash = 6;
}

message MobileGatewayUpdateSettingsRequest {
  MobileGatewaySetting settings = 1;
  string settingsHash = 2;
}

message ModifiedAt {}

message MonitorCPUTimeValue {
  Time time = 1;
  double cPUTime = 2;
}

message MonitorCondition {
  Time start = 1;
  Time end = 2;
}

message MonitorConnectionValue {
  Time time = 1;
  double activeConnections = 2;
  double connectionsPerSec = 3;
}

message MonitorDatabaseValue {
  Time time = 1;
  double totalMemorySize = 2;
  double usedMemorySize = 3;
  double totalDisk1Size = 4;
  double usedDisk1Size = 5;
  double totalDisk2Size = 6;
  double usedDisk2Size = 7;
  double binlogUsedSizeKiB = 8;
  double delayTimeSec = 9;
}

message MonitorDiskValue {
  Time time = 1;
  double read = 2;
  double write = 3;
}

message MonitorFreeDiskSizeValue {
  Time time = 1;
  double freeDiskSize = 2;
}

message MonitorInterfaceValue {
  Time time = 1;
  double receive = 2;
  double send = 3;
}

message MonitorLinkValue {
  Time time = 1;
  double uplinkBPS = 2;
  double downlinkBPS = 3;
}

message MonitorLocalRouterValue {
  Time time = 1;
  double receiveBytesPerSec = 2;
  double sendBytesPerSec = 3;
}

message MonitorResponseTimeSecValue {
  Time time = 1;
  double responseTimeSec = 2;
}

message MonitorRouterValue {
  Time time = 1;
  double in = 2;
  double out = 3;
}

message NFS {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  string class = 6;
  string instanceHostName = 7;
  string instanceHostInfoURL = 8;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EServerInstanceStatus instanceStatus = 9;
  Time instanceStatusChangedAt = 10;
  repeated InterfaceView interfaces = 11;
  sint64 planID = 12;
  sint64 switchID = 13;
  string defaultRoute = 14;
  int64 networkMaskLen = 15;
  repeated string iPAddresses = 16;
  sint64 zoneID = 17;
  sint64 iconID = 18;
  Time createdAt = 19;
  Time modifiedAt = 20;
  string switchName = 21;
}

message NFSCreateRequest {
  sint64 switchID = 1;
  sint64 planID = 2;
  repeated string iPAddresses = 3;
  int64 networkMaskLen = 4;
  string defaultRoute = 5;
  string name = 6;
  string description = 7;
  repeated Tags tags = 8;
  sint64 iconID = 9;
}

message NFSFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated NFS nFS = 4;
}

message NFSOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message NFSUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
}

message Note {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope scope = 6;
  string class = 7;
  string content = 8;
  sint64 iconID = 9;
  Time createdAt = 10;
  Time modifiedAt = 11;
}

message NoteCreateRequest {
  string name = 1;
  repeated Tags tags = 2;
  sint64 iconID = 3;
  string class = 4;
  string content = 5;
}

message NoteFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Note notes = 4;
}

message NoteOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message NoteUpdateRequest {
  string name = 1;
  repeated Tags tags = 2;
  sint64 iconID = 3;
  string class = 4;
  string content = 5;
}

message OpenFTPRequest { bool changePassword = 1; }

message PacketFilter {
  int64 id = 1;
  string name = 2;
  string description = 3;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringNumber requiredHostVersion = 4;
  repeated PacketFilterExpression expression = 5;
  string expressionHash = 6;
  Time createdAt = 7;
}

message PacketFilterCreateRequest {
  string name = 1;
  string description = 2;
  repeated PacketFilterExpression expression = 3;
}

message PacketFilterExpression {
  github.com/sacloud/libsacloud/v2/sacloud/types.Protocol protocol = 1;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.PacketFilterNetwork sourceNetwork = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.PacketFilterPort sourcePort =
      3;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.PacketFilterPort destinationPort = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.Action action = 5;
  string description = 6;
}

message PacketFilterFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated PacketFilter packetFilters = 4;
}

message PacketFilterOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message PacketFilterUpdateRequest {
  string name = 1;
  string description = 2;
  repeated PacketFilterExpression expression = 3;
}

message PayLimit {}

message Price {
  int64 base = 1;
  int64 daily = 2;
  int64 hourly = 3;
  int64 monthly = 4;
  string zone = 5;
}

message PrivateHost {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  sint64 iconID = 5;
  Time createdAt = 6;
  sint64 planID = 7;
  string planName = 8;
  string planClass = 9;
  int64 cPU = 10;
  int64 memoryMB = 11;
  int64 assignedCPU = 12;
  int64 assignedMemoryMB = 13;
  string hostName = 14;
}

message PrivateHostCreateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  sint64 planID = 5;
}

message PrivateHostFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated PrivateHost privateHosts = 4;
}

message PrivateHostOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message PrivateHostPlan {
  int64 id = 1;
  string name = 2;
  string class = 3;
  int64 cPU = 4;
  int64 memoryMB = 5;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 6;
}

message PrivateHostPlanFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated PrivateHostPlan privateHostPlans = 4;
}

message PrivateHostPlanOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message PrivateHostUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
}

message ProxyLB {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  sint64 iconID = 6;
  Time createdAt = 7;
  Time modifiedAt = 8;
  github.com/sacloud/libsacloud/v2/sacloud/types.EProxyLBPlan plan = 9;
  ProxyLBHealthCheck healthCheck = 10;
  ProxyLBSorryServer sorryServer = 11;
  repeated ProxyLBBindPort bindPorts = 12;
  repeated ProxyLBServer servers = 13;
  repeated ProxyLBRule rules = 14;
  ProxyLBACMESetting letsEncrypt = 15;
  ProxyLBStickySession stickySession = 16;
  ProxyLBTimeout timeout = 17;
  string settingsHash = 18;
  bool useVIPFailover = 19;
  github.com/sacloud/libsacloud/v2/sacloud/types.EProxyLBRegion region = 20;
  repeated string proxyNetworks = 21;
  string fQDN = 22;
  string virtualIPAddress = 23;
}

message ProxyLBACMESetting {
  string commonName = 1;
  bool enabled = 2;
}

message ProxyLBAdditionalCert {
  string serverCertificate = 1;
  string intermediateCertificate = 2;
  string privateKey = 3;
  Time certificateEndDate = 4;
  string certificateCommonName = 5;
}

message ProxyLBBindPort {
  github.com/sacloud/libsacloud/v2/sacloud/types.EProxyLBProxyMode proxyMode =
      1;
  int64 port = 2;
  bool redirectToHTTPS = 3;
  bool supportHTTP2 = 4;
  repeated ProxyLBResponseHeader addResponseHeader = 5;
}

message ProxyLBCertificates {
  ProxyLBPrimaryCert primaryCert = 1;
  repeated ProxyLBAdditionalCert additionalCerts = 2;
}

message ProxyLBChangePlanRequest {
  github.com/sacloud/libsacloud/v2/sacloud/types.EProxyLBPlan plan = 1;
}

message ProxyLBCreateRequest {
  github.com/sacloud/libsacloud/v2/sacloud/types.EProxyLBPlan plan = 1;
  ProxyLBHealthCheck healthCheck = 2;
  ProxyLBSorryServer sorryServer = 3;
  repeated ProxyLBBindPort bindPorts = 4;
  repeated ProxyLBServer servers = 5;
  repeated ProxyLBRule rules = 6;
  ProxyLBACMESetting letsEncrypt = 7;
  ProxyLBStickySession stickySession = 8;
  ProxyLBTimeout timeout = 9;
  bool useVIPFailover = 10;
  github.com/sacloud/libsacloud/v2/sacloud/types.EProxyLBRegion region = 11;
  string name = 12;
  string description = 13;
  repeated Tags tags = 14;
  sint64 iconID = 15;
}

message ProxyLBFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated ProxyLB proxyLBs = 4;
}

message ProxyLBHealth {
  int64 activeConn = 1;
  int64 cPS = 2;
  string currentVIP = 3;
  repeated LoadBalancerServerStatus servers = 4;
}

message ProxyLBHealthCheck {
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EProxyLBHealthCheckProtocol protocol = 1;
  string path = 2;
  string host = 3;
  int64 delayLoop = 4;
}

message ProxyLBOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message ProxyLBPrimaryCert {
  string serverCertificate = 1;
  string intermediateCertificate = 2;
  string privateKey = 3;
  Time certificateEndDate = 4;
  string certificateCommonName = 5;
}

message ProxyLBResponseHeader {
  string header = 1;
  string value = 2;
}

message ProxyLBRule {
  string host = 1;
  string path = 2;
  string serverGroup = 3;
}

message ProxyLBServer {
  string iPAddress = 1;
  int64 port = 2;
  string serverGroup = 3;
  bool enabled = 4;
}

message ProxyLBSetCertificatesRequest {
  ProxyLBPrimaryCert primaryCerts = 1;
  repeated ProxyLBAdditionalCert additionalCerts = 2;
}

message ProxyLBSorryServer {
  string iPAddress = 1;
  int64 port = 2;
}

message ProxyLBStickySession {
  string method = 1;
  bool enabled = 2;
}

message ProxyLBTimeout { int64 inactiveSec = 1; }

message ProxyLBUpdateRequest {
  ProxyLBHealthCheck healthCheck = 1;
  ProxyLBSorryServer sorryServer = 2;
  repeated ProxyLBBindPort bindPorts = 3;
  repeated ProxyLBServer servers = 4;
  repeated ProxyLBRule rules = 5;
  ProxyLBACMESetting letsEncrypt = 6;
  ProxyLBStickySession stickySession = 7;
  ProxyLBTimeout timeout = 8;
  string settingsHash = 9;
  string name = 10;
  string description = 11;
  repeated Tags tags = 12;
  sint64 iconID = 13;
}

message ProxyLBUpdateSettingsRequest {
  ProxyLBHealthCheck healthCheck = 1;
  ProxyLBSorryServer sorryServer = 2;
  repeated ProxyLBBindPort bindPorts = 3;
  repeated ProxyLBServer servers = 4;
  repeated ProxyLBRule rules = 5;
  ProxyLBACMESetting letsEncrypt = 6;
  ProxyLBStickySession stickySession = 7;
  ProxyLBTimeout timeout = 8;
  string settingsHash = 9;
}

message RateLimitRoundTripper {
  net/http.RoundTripper transport = 1;
  int64 rateLimitPerSec = 2;
}

message RecoveredAt {}

message Region {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated string nameServers = 4;
}

message RegionFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Region regions = 4;
}

message RegionOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message RegisteredDate {}

message ResponseTimeSecActivity {
  repeated MonitorResponseTimeSecValue values = 1;
}

message ResponsedAt {}

message RouterActivity { repeated MonitorRouterValue values = 1; }

message SIM {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  string class = 6;
  string iCCID = 7;
  SIMInfo info = 8;
  sint64 iconID = 9;
  Time createdAt = 10;
  Time modifiedAt = 11;
}

message SIMAssignIPRequest { string ip = 1; }

message SIMCreateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  string iCCID = 5;
  string passCode = 6;
}

message SIMFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated SIM sIMs = 4;
}

message SIMIMEILockRequest { string iMEI = 1; }

message SIMInfo {
  string iCCID = 1;
  repeated string iMSI = 2;
  string ip = 3;
  string sessionStatus = 4;
  bool iMEILock = 5;
  bool registered = 6;
  bool activated = 7;
  string resourceID = 8;
  Time registeredDate = 9;
  Time activatedDate = 10;
  Time deactivatedDate = 11;
  string sIMGroupID = 12;
  SIMTrafficBytes trafficBytesOfCurrentMonth = 13;
  string connectedIMEI = 14;
}

message SIMLog {
  Time date = 1;
  string sessionStatus = 2;
  string resourceID = 3;
  string iMEI = 4;
  string iMSI = 5;
}

message SIMLogsResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated SIMLog logs = 4;
}

message SIMNetworkOperatorConfig {
  bool allow = 1;
  string countryCode = 2;
  string name = 3;
}

message SIMOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message SIMTrafficBytes {
  int64 uplinkBytes = 1;
  int64 downlinkBytes = 2;
}

message SIMUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
}

message SSHKey {
  int64 id = 1;
  string name = 2;
  string description = 3;
  Time createdAt = 4;
  string publicKey = 5;
  string fingerprint = 6;
}

message SSHKeyCreateRequest {
  string name = 1;
  string description = 2;
  string publicKey = 3;
}

message SSHKeyFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated SSHKey sSHKeys = 4;
}

message SSHKeyGenerateRequest {
  string name = 1;
  string description = 2;
  string passPhrase = 3;
}

message SSHKeyGenerated {
  int64 id = 1;
  string name = 2;
  string description = 3;
  Time createdAt = 4;
  string publicKey = 5;
  string fingerprint = 6;
  string privateKey = 7;
}

message SSHKeyOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message SSHKeyUpdateRequest {
  string name = 1;
  string description = 2;
}

message SendKeyRequest {
  string key = 1;
  repeated string keys = 2;
}

message Server {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  string hostName = 6;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EInterfaceDriver interfaceDriver = 7;
  sint64 serverPlanID = 8;
  string serverPlanName = 9;
  int64 cPU = 10;
  int64 memoryMB = 11;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.ECommitment serverPlanCommitment = 12;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EPlanGeneration serverPlanGeneration = 13;
  ZoneInfo zone = 14;
  string instanceHostName = 15;
  string instanceHostInfoURL = 16;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EServerInstanceStatus instanceStatus = 17;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EServerInstanceStatus instanceBeforeStatus = 18;
  Time instanceStatusChangedAt = 19;
  string instanceWarnings = 20;
  int64 instanceWarningsValue = 21;
  repeated ServerConnectedDisk disks = 22;
  repeated InterfaceView interfaces = 23;
  sint64 cDROMID = 24;
  sint64 privateHostID = 25;
  string privateHostName = 26;
  BundleInfo bundleInfo = 27;
  sint64 iconID = 28;
  Time createdAt = 29;
  Time modifiedAt = 30;
}

message ServerChangePlanRequest {
  int64 cPU = 1;
  int64 memoryMB = 2;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EPlanGeneration serverPlanGeneration = 3;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.ECommitment serverPlanCommitment = 4;
}

message ServerConnectedDisk {
  int64 id = 1;
  string name = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.EDiskConnection connection = 4;
  int64 connectionOrder = 5;
  int64 reinstallCount = 6;
  int64 sizeMB = 7;
  sint64 diskPlanID = 8;
  Storage storage = 9;
}

message ServerCreateRequest {
  int64 cPU = 1;
  int64 memoryMB = 2;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.ECommitment serverPlanCommitment = 3;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EPlanGeneration serverPlanGeneration = 4;
  repeated ConnectedSwitch connectedSwitches = 5;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EInterfaceDriver interfaceDriver = 6;
  string name = 7;
  string description = 8;
  repeated Tags tags = 9;
  sint64 iconID = 10;
  bool waitDiskMigration = 11;
  sint64 privateHostID = 12;
}

message ServerDeleteWithDisksRequest { repeated ID iDs = 1; }

message ServerFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Server servers = 4;
}

message ServerOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message ServerPlan {
  int64 id = 1;
  string name = 2;
  int64 cPU = 3;
  int64 memoryMB = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.ECommitment commitment = 5;
  github.com/sacloud/libsacloud/v2/sacloud/types.EPlanGeneration generation = 6;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 7;
}

message ServerPlanFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated ServerPlan serverPlans = 4;
}

message ServerPlanOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message ServerUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  sint64 privateHostID = 5;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EInterfaceDriver interfaceDriver = 6;
}

message ServiceClass {
  int64 id = 1;
  string serviceClassName = 2;
  string serviceClassPath = 3;
  string displayName = 4;
  bool isPublic = 5;
  Price price = 6;
}

message ServiceClassFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated ServiceClass serviceClasses = 4;
}

message ServiceClassOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message ShutdownOption { bool force = 1; }

message SimpleMonitor {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  sint64 iconID = 6;
  Time createdAt = 7;
  Time modifiedAt = 8;
  string class = 9;
  string target = 10;
  int64 delayLoop = 11;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag enabled = 12;
  SimpleMonitorHealthCheck healthCheck = 13;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifyEmailEnabled =
      14;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifyEmailHTML =
      15;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifySlackEnabled =
      16;
  string slackWebhooksURL = 17;
  int64 notifyInterval = 18;
  string settingsHash = 19;
}

message SimpleMonitorCreateRequest {
  string target = 1;
  int64 delayLoop = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag enabled = 3;
  SimpleMonitorHealthCheck healthCheck = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifyEmailEnabled =
      5;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifyEmailHTML = 6;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifySlackEnabled =
      7;
  string slackWebhooksURL = 8;
  int64 notifyInterval = 9;
  string description = 10;
  repeated Tags tags = 11;
  sint64 iconID = 12;
}

message SimpleMonitorFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated SimpleMonitor simpleMonitors = 4;
}

message SimpleMonitorHealthCheck {
  github.com/sacloud/libsacloud/v2/sacloud/
      types.ESimpleMonitorProtocol protocol = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber port = 2;
  string path = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber status = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag sNI = 5;
  string host = 6;
  string basicAuthUsername = 7;
  string basicAuthPassword = 8;
  string qName = 9;
  string expectedData = 10;
  string community = 11;
  string sNMPVersion = 12;
  string oID = 13;
  int64 remainingDays = 14;
}

message SimpleMonitorHealthStatus {
  Time lastCheckedAt = 1;
  Time lastHealthChangedAt = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.ESimpleMonitorHealth health =
      3;
}

message SimpleMonitorOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message SimpleMonitorUpdateRequest {
  string description = 1;
  repeated Tags tags = 2;
  sint64 iconID = 3;
  int64 delayLoop = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag enabled = 5;
  SimpleMonitorHealthCheck healthCheck = 6;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifyEmailEnabled =
      7;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifyEmailHTML = 8;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifySlackEnabled =
      9;
  string slackWebhooksURL = 10;
  int64 notifyInterval = 11;
  string settingsHash = 12;
}

message SimpleMonitorUpdateSettingsRequest {
  int64 delayLoop = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag enabled = 2;
  SimpleMonitorHealthCheck healthCheck = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifyEmailEnabled =
      4;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifyEmailHTML = 5;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag notifySlackEnabled =
      6;
  string slackWebhooksURL = 7;
  int64 notifyInterval = 8;
  string settingsHash = 9;
}

message SourceArchiveInfo {
  int64 id = 1;
  sint64 accountID = 2;
  sint64 zoneID = 3;
  string zoneName = 4;
}

message Start {}

message StatePollingWaiter {
  int64 notFoundRetry = 1;
  github.com/sacloud/libsacloud/v2/sacloud.StateReadFunc readFunc = 2;
  repeated EAvailability targetAvailability = 3;
  repeated EAvailability pendingAvailability = 4;
  repeated EServerInstanceStatus targetInstanceStatus = 5;
  repeated EServerInstanceStatus pendingInstanceStatus = 6;
  github.com/sacloud/libsacloud/v2/sacloud.StateCheckFunc stateCheckFunc = 7;
  time.Duration timeout = 8;
  time.Duration pollingInterval = 9;
}

message Storage {
  int64 id = 1;
  string name = 2;
  string class = 3;
  int64 generation = 4;
}

message Subnet {
  int64 id = 1;
  sint64 switchID = 2;
  sint64 internetID = 3;
  string defaultRoute = 4;
  string nextHop = 5;
  string staticRoute = 6;
  string networkAddress = 7;
  int64 networkMaskLen = 8;
  repeated SubnetIPAddress iPAddresses = 9;
}

message SubnetFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Subnet subnets = 4;
}

message SubnetIPAddress {
  string hostName = 1;
  string iPAddress = 2;
}

message SubnetOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message Switch {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  sint64 iconID = 5;
  Time createdAt = 6;
  Time modifiedAt = 7;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope scope = 8;
  int64 serverCount = 9;
  int64 networkMaskLen = 10;
  string defaultRoute = 11;
  repeated SwitchSubnet subnets = 12;
  sint64 bridgeID = 13;
  sint64 hybridConnectionID = 14;
}

message SwitchCreateRequest {
  string name = 1;
  int64 networkMaskLen = 2;
  string defaultRoute = 3;
  string description = 4;
  repeated Tags tags = 5;
  sint64 iconID = 6;
}

message SwitchFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Switch switches = 4;
}

message SwitchGetServersResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Server servers = 4;
}

message SwitchInfo {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope scope = 5;
  repeated InternetSubnet subnets = 6;
  repeated IPv6NetInfo iPv6Nets = 7;
}

message SwitchOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message SwitchSubnet {
  int64 id = 1;
  string defaultRoute = 2;
  string nextHop = 3;
  string staticRoute = 4;
  string networkAddress = 5;
  int64 networkMaskLen = 6;
  Internet internet = 7;
  string assignedIPAddressMax = 8;
  string assignedIPAddressMin = 9;
}

message SwitchUpdateRequest {
  string name = 1;
  int64 networkMaskLen = 2;
  string defaultRoute = 3;
  string description = 4;
  repeated Tags tags = 5;
  sint64 iconID = 6;
}

message Time {}

message TracingRoundTripper { net/http.RoundTripper transport = 1; }

message UnexpectedAvailabilityError { error err = 1; }

message UnexpectedInstanceStatusError { error err = 1; }

message UntilAt {}

message UpdatedAt {}

message VNCProxy {
  string hostName = 1;
  string iPAddress = 2;
}

message VNCProxyInfo {
  string status = 1;
  string host = 2;
  string iOServerHost = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber port = 4;
  string password = 5;
  string vNCFile = 6;
}

message VPCRouter {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Tags tags = 4;
  github.com/sacloud/libsacloud/v2/sacloud/types.EAvailability availability = 5;
  string class = 6;
  sint64 iconID = 7;
  Time createdAt = 8;
  sint64 planID = 9;
  VPCRouterSetting settings = 10;
  string settingsHash = 11;
  string instanceHostName = 12;
  string instanceHostInfoURL = 13;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EServerInstanceStatus instanceStatus = 14;
  Time instanceStatusChangedAt = 15;
  repeated VPCRouterInterface interfaces = 16;
  sint64 zoneID = 17;
}

message VPCRouterCreateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  sint64 planID = 5;
  ApplianceConnectedSwitch switch = 6;
  repeated string iPAddresses = 7;
  VPCRouterSetting settings = 8;
}

message VPCRouterDHCPServer {
  string interface = 1;
  string rangeStart = 2;
  string rangeStop = 3;
  repeated string dNSServers = 4;
}

message VPCRouterDHCPServerLease {
  string iPAddress = 1;
  string mACAddress = 2;
}

message VPCRouterDHCPStaticMapping {
  string mACAddress = 1;
  string iPAddress = 2;
}

message VPCRouterFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated VPCRouter vPCRouters = 4;
}

message VPCRouterFirewall {
  repeated VPCRouterFirewallRule send = 1;
  repeated VPCRouterFirewallRule receive = 2;
  int64 index = 3;
}

message VPCRouterFirewallRule {
  github.com/sacloud/libsacloud/v2/sacloud/types.Protocol protocol = 1;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.VPCFirewallNetwork sourceNetwork = 2;
  github.com/sacloud/libsacloud/v2/sacloud/types.VPCFirewallPort sourcePort = 3;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.VPCFirewallNetwork destinationNetwork = 4;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.VPCFirewallPort destinationPort = 5;
  github.com/sacloud/libsacloud/v2/sacloud/types.Action action = 6;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag logging = 7;
  string description = 8;
}

message VPCRouterInterface {
  int64 id = 1;
  string mACAddress = 2;
  string iPAddress = 3;
  string userIPAddress = 4;
  string hostName = 5;
  sint64 switchID = 6;
  string switchName = 7;
  github.com/sacloud/libsacloud/v2/sacloud/types.EScope switchScope = 8;
  string userSubnetDefaultRoute = 9;
  int64 userSubnetNetworkMaskLen = 10;
  string subnetDefaultRoute = 11;
  int64 subnetNetworkMaskLen = 12;
  string subnetNetworkAddress = 13;
  int64 subnetBandWidthMbps = 14;
  sint64 packetFilterID = 15;
  string packetFilterName = 16;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringNumber packetFilterRequiredHostVersion = 17;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EUpstreamNetworkType upstreamType = 18;
  int64 index = 19;
}

message VPCRouterInterfaceSetting {
  repeated string iPAddress = 1;
  string virtualIPAddress = 2;
  repeated string iPAliases = 3;
  int64 networkMaskLen = 4;
  int64 index = 5;
}

message VPCRouterL2TPIPsecServer {
  string rangeStart = 1;
  string rangeStop = 2;
  string preSharedSecret = 3;
}

message VPCRouterL2TPIPsecServerSession {
  string user = 1;
  string iPAddress = 2;
  int64 timeSec = 3;
}

message VPCRouterOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message VPCRouterPPTPServer {
  string rangeStart = 1;
  string rangeStop = 2;
}

message VPCRouterPPTPServerSession {
  string user = 1;
  string iPAddress = 2;
  int64 timeSec = 3;
}

message VPCRouterPortForwarding {
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EVPCRouterPortForwardingProtocol protocol = 1;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber globalPort = 2;
  string privateAddress = 3;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringNumber privatePort = 4;
  string description = 5;
}

message VPCRouterRemoteAccessUser {
  string userName = 1;
  string password = 2;
}

message VPCRouterSetting {
  int64 vRID = 1;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringFlag internetConnectionEnabled = 2;
  repeated VPCRouterInterfaceSetting interfaces = 3;
  repeated VPCRouterStaticNAT staticNAT = 4;
  repeated VPCRouterPortForwarding portForwarding = 5;
  repeated VPCRouterFirewall firewall = 6;
  repeated VPCRouterDHCPServer dHCPServer = 7;
  repeated VPCRouterDHCPStaticMapping dHCPStaticMapping = 8;
  VPCRouterPPTPServer pPTPServer = 9;
  github.com/sacloud/libsacloud/v2/sacloud/types.StringFlag pPTPServerEnabled =
      10;
  VPCRouterL2TPIPsecServer l2TPIPsecServer = 11;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.StringFlag l2TPIPsecServerEnabled = 12;
  repeated VPCRouterRemoteAccessUser remoteAccessUsers = 13;
  repeated VPCRouterSiteToSiteIPsecVPN siteToSiteIPsecVPN = 14;
  repeated VPCRouterStaticRoute staticRoute = 15;
  string syslogHost = 16;
}

message VPCRouterSiteToSiteIPsecVPN {
  string peer = 1;
  string preSharedSecret = 2;
  string remoteID = 3;
  repeated string routes = 4;
  repeated string localPrefix = 5;
}

message VPCRouterSiteToSiteIPsecVPNPeer {
  string status = 1;
  string peer = 2;
}

message VPCRouterStaticNAT {
  string globalAddress = 1;
  string privateAddress = 2;
  string description = 3;
}

message VPCRouterStaticRoute {
  string prefix = 1;
  string nextHop = 2;
}

message VPCRouterStatus {
  repeated string firewallReceiveLogs = 1;
  repeated string firewallSendLogs = 2;
  repeated string vPNLogs = 3;
  int64 sessionCount = 4;
  repeated VPCRouterDHCPServerLease dHCPServerLeases = 5;
  repeated VPCRouterL2TPIPsecServerSession l2TPIPsecServerSessions = 6;
  repeated VPCRouterPPTPServerSession pPTPServerSessions = 7;
  repeated VPCRouterSiteToSiteIPsecVPNPeer siteToSiteIPsecVPNPeers = 8;
}

message VPCRouterUpdateRequest {
  string name = 1;
  string description = 2;
  repeated Tags tags = 3;
  sint64 iconID = 4;
  VPCRouterSetting settings = 5;
  string settingsHash = 6;
}

message VPCRouterUpdateSettingsRequest {
  VPCRouterSetting settings = 1;
  string settingsHash = 2;
}

message WebAccel {
  int64 id = 1;
  string name = 2;
  github.com/sacloud/libsacloud/v2/sacloud/
      types.EWebAccelDomainType domainType = 3;
  string domain = 4;
  string subdomain = 5;
  string aSCIIDomain = 6;
  string origin = 7;
  string hostHeader = 8;
  github.com/sacloud/libsacloud/v2/sacloud/types.EWebAccelStatus status = 9;
  bool hasCertificate = 10;
  bool hasOldCertificate = 11;
  int64 gibSentInLastWeek = 12;
  int64 certValidNotBefore = 13;
  int64 certValidNotAfter = 14;
  Time createdAt = 15;
}

message WebAccelCertIssuer {
  string country = 1;
  string organization = 2;
  string organizationalUnit = 3;
  string commonName = 4;
}

message WebAccelCertRequest {
  string certificateChain = 1;
  string key = 2;
}

message WebAccelCertSubject {
  string country = 1;
  string organization = 2;
  string organizationalUnit = 3;
  string locality = 4;
  string province = 5;
  string streetAddress = 6;
  string postalCode = 7;
  string serialNumber = 8;
  string commonName = 9;
}

message WebAccelCerts {
  WebAccelCurrentCert current = 1;
  repeated WebAccelOldCerts old = 2;
}

message WebAccelCurrentCert {
  int64 id = 1;
  sint64 siteID = 2;
  string certificateChain = 3;
  string key = 4;
  Time createdAt = 5;
  Time updatedAt = 6;
  string serialNumber = 7;
  int64 notBefore = 8;
  int64 notAfter = 9;
  WebAccelCertIssuer issuer = 10;
  WebAccelCertSubject subject = 11;
  repeated string dNSNames = 12;
  string sHA256Fingerprint = 13;
}

message WebAccelDeleteAllCacheRequest { string domain = 1; }

message WebAccelDeleteCacheRequest { repeated string uRL = 1; }

message WebAccelDeleteCacheResult {
  string uRL = 1;
  int64 status = 2;
  string result = 3;
}

message WebAccelListResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated WebAccel webAccels = 4;
}

message WebAccelOldCerts {
  int64 id = 1;
  sint64 siteID = 2;
  string certificateChain = 3;
  string key = 4;
  Time createdAt = 5;
  Time updatedAt = 6;
  string serialNumber = 7;
  int64 notBefore = 8;
  int64 notAfter = 9;
  WebAccelCertIssuer issuer = 10;
  WebAccelCertSubject subject = 11;
  repeated string dNSNames = 12;
  string sHA256Fingerprint = 13;
}

message WebAccelOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}

message Zone {
  int64 id = 1;
  string name = 2;
  string description = 3;
  int64 displayOrder = 4;
  bool isDummy = 5;
  VNCProxy vNCProxy = 6;
  FTPServerInfo fTPServer = 7;
  Region region = 8;
}

message ZoneFindResult {
  int64 total = 1;
  int64 from = 2;
  int64 count = 3;
  repeated Zone zones = 4;
}

message ZoneInfo {
  int64 id = 1;
  string name = 2;
  string displayName = 3;
  bool isDummy = 4;
  VNCProxy vNCProxy = 5;
  FTPServerInfo fTPServer = 6;
  Region region = 7;
}

message ZoneOp {
  github.com/sacloud/libsacloud/v2/sacloud.APICaller client = 1;
  string pathSuffix = 2;
  string pathName = 3;
}
*/
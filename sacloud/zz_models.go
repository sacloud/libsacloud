// generated by 'github.com/sacloud/libsacloud/internal/tools/gen-api-models'; DO NOT EDIT

package sacloud

import (
	"time"

	"github.com/sacloud/libsacloud/v2/sacloud/accessor"
	"github.com/sacloud/libsacloud/v2/sacloud/search"
	"github.com/sacloud/libsacloud/v2/sacloud/types"
	"gopkg.in/go-playground/validator.v9"
)

/*************************************************
* Archive
*************************************************/

// Archive represents API parameter/response structure
type Archive struct {
	ID                        types.ID
	Name                      string `validate:"required"`
	Description               string `validate:"min=0,max=512"`
	Tags                      types.Tags
	DisplayOrder              int64
	Availability              types.EAvailability
	Scope                     types.EScope
	SizeMB                    int
	MigratedMB                int
	DiskPlanID                types.ID            `mapconv:"Plan.ID"`
	DiskPlanName              string              `mapconv:"Plan.Name"`
	DiskPlanStorageClass      string              `mapconv:"Plan.StorageClass"`
	SourceDiskID              types.ID            `mapconv:"SourceDisk.ID,omitempty"`
	SourceDiskAvailability    types.EAvailability `mapconv:"SourceDisk.Availability,omitempty"`
	SourceArchiveID           types.ID            `mapconv:"SourceArchive.ID,omitempty"`
	SourceArchiveAvailability types.EAvailability `mapconv:"SourceArchive.Availability,omitempty"`
	BundleInfo                *BundleInfo         `json:",omitempty" mapconv:",omitempty,recursive"`
	Storage                   *Storage            `json:",omitempty" mapconv:",omitempty,recursive"`
	IconID                    types.ID            `mapconv:"Icon.ID"`
	CreatedAt                 time.Time
	ModifiedAt                time.Time
	OriginalArchiveID         types.ID           `mapconv:"OriginalArchive.ID,omitempty"`
	SourceInfo                *SourceArchiveInfo `mapconv:",omitempty,recursive"`
}

// Validate validates by field tags
func (o *Archive) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Archive) setDefaults() interface{} {
	return &struct {
		ID                        types.ID
		Name                      string `validate:"required"`
		Description               string `validate:"min=0,max=512"`
		Tags                      types.Tags
		DisplayOrder              int64
		Availability              types.EAvailability
		Scope                     types.EScope
		SizeMB                    int
		MigratedMB                int
		DiskPlanID                types.ID            `mapconv:"Plan.ID"`
		DiskPlanName              string              `mapconv:"Plan.Name"`
		DiskPlanStorageClass      string              `mapconv:"Plan.StorageClass"`
		SourceDiskID              types.ID            `mapconv:"SourceDisk.ID,omitempty"`
		SourceDiskAvailability    types.EAvailability `mapconv:"SourceDisk.Availability,omitempty"`
		SourceArchiveID           types.ID            `mapconv:"SourceArchive.ID,omitempty"`
		SourceArchiveAvailability types.EAvailability `mapconv:"SourceArchive.Availability,omitempty"`
		BundleInfo                *BundleInfo         `json:",omitempty" mapconv:",omitempty,recursive"`
		Storage                   *Storage            `json:",omitempty" mapconv:",omitempty,recursive"`
		IconID                    types.ID            `mapconv:"Icon.ID"`
		CreatedAt                 time.Time
		ModifiedAt                time.Time
		OriginalArchiveID         types.ID           `mapconv:"OriginalArchive.ID,omitempty"`
		SourceInfo                *SourceArchiveInfo `mapconv:",omitempty,recursive"`
	}{
		ID:                        o.ID,
		Name:                      o.Name,
		Description:               o.Description,
		Tags:                      o.Tags,
		DisplayOrder:              o.DisplayOrder,
		Availability:              o.Availability,
		Scope:                     o.Scope,
		SizeMB:                    o.SizeMB,
		MigratedMB:                o.MigratedMB,
		DiskPlanID:                o.DiskPlanID,
		DiskPlanName:              o.DiskPlanName,
		DiskPlanStorageClass:      o.DiskPlanStorageClass,
		SourceDiskID:              o.SourceDiskID,
		SourceDiskAvailability:    o.SourceDiskAvailability,
		SourceArchiveID:           o.SourceArchiveID,
		SourceArchiveAvailability: o.SourceArchiveAvailability,
		BundleInfo:                o.BundleInfo,
		Storage:                   o.Storage,
		IconID:                    o.IconID,
		CreatedAt:                 o.CreatedAt,
		ModifiedAt:                o.ModifiedAt,
		OriginalArchiveID:         o.OriginalArchiveID,
		SourceInfo:                o.SourceInfo,
	}
}

// GetID returns value of ID
func (o *Archive) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Archive) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Archive) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Archive) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Archive) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Archive) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Archive) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Archive) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Archive) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Archive) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Archive) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Archive) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *Archive) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *Archive) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *Archive) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *Archive) ClearTags() {
	accessor.ClearTags(o)
}

// GetDisplayOrder returns value of DisplayOrder
func (o *Archive) GetDisplayOrder() int64 {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *Archive) SetDisplayOrder(v int64) {
	o.DisplayOrder = v
}

// GetAvailability returns value of Availability
func (o *Archive) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Archive) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *Archive) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *Archive) SetScope(v types.EScope) {
	o.Scope = v
}

// GetSizeMB returns value of SizeMB
func (o *Archive) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *Archive) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB .
func (o *Archive) GetSizeGB() int {
	return accessor.GetSizeGB(o)
}

// SetSizeGB .
func (o *Archive) SetSizeGB(size int) {
	accessor.SetSizeGB(o, size)
}

// GetMigratedMB returns value of MigratedMB
func (o *Archive) GetMigratedMB() int {
	return o.MigratedMB
}

// SetMigratedMB sets value to MigratedMB
func (o *Archive) SetMigratedMB(v int) {
	o.MigratedMB = v
}

// GetMigratedGB .
func (o *Archive) GetMigratedGB() int {
	return accessor.GetMigratedGB(o)
}

// GetDiskPlanID returns value of DiskPlanID
func (o *Archive) GetDiskPlanID() types.ID {
	return o.DiskPlanID
}

// SetDiskPlanID sets value to DiskPlanID
func (o *Archive) SetDiskPlanID(v types.ID) {
	o.DiskPlanID = v
}

// GetDiskPlanName returns value of DiskPlanName
func (o *Archive) GetDiskPlanName() string {
	return o.DiskPlanName
}

// SetDiskPlanName sets value to DiskPlanName
func (o *Archive) SetDiskPlanName(v string) {
	o.DiskPlanName = v
}

// GetDiskPlanStorageClass returns value of DiskPlanStorageClass
func (o *Archive) GetDiskPlanStorageClass() string {
	return o.DiskPlanStorageClass
}

// SetDiskPlanStorageClass sets value to DiskPlanStorageClass
func (o *Archive) SetDiskPlanStorageClass(v string) {
	o.DiskPlanStorageClass = v
}

// GetSourceDiskID returns value of SourceDiskID
func (o *Archive) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *Archive) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceDiskAvailability returns value of SourceDiskAvailability
func (o *Archive) GetSourceDiskAvailability() types.EAvailability {
	return o.SourceDiskAvailability
}

// SetSourceDiskAvailability sets value to SourceDiskAvailability
func (o *Archive) SetSourceDiskAvailability(v types.EAvailability) {
	o.SourceDiskAvailability = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *Archive) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *Archive) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetSourceArchiveAvailability returns value of SourceArchiveAvailability
func (o *Archive) GetSourceArchiveAvailability() types.EAvailability {
	return o.SourceArchiveAvailability
}

// SetSourceArchiveAvailability sets value to SourceArchiveAvailability
func (o *Archive) SetSourceArchiveAvailability(v types.EAvailability) {
	o.SourceArchiveAvailability = v
}

// GetBundleInfo returns value of BundleInfo
func (o *Archive) GetBundleInfo() *BundleInfo {
	return o.BundleInfo
}

// SetBundleInfo sets value to BundleInfo
func (o *Archive) SetBundleInfo(v *BundleInfo) {
	o.BundleInfo = v
}

// GetStorage returns value of Storage
func (o *Archive) GetStorage() *Storage {
	return o.Storage
}

// SetStorage sets value to Storage
func (o *Archive) SetStorage(v *Storage) {
	o.Storage = v
}

// GetIconID returns value of IconID
func (o *Archive) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *Archive) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Archive) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Archive) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Archive) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Archive) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetOriginalArchiveID returns value of OriginalArchiveID
func (o *Archive) GetOriginalArchiveID() types.ID {
	return o.OriginalArchiveID
}

// SetOriginalArchiveID sets value to OriginalArchiveID
func (o *Archive) SetOriginalArchiveID(v types.ID) {
	o.OriginalArchiveID = v
}

// GetSourceInfo returns value of SourceInfo
func (o *Archive) GetSourceInfo() *SourceArchiveInfo {
	return o.SourceInfo
}

// SetSourceInfo sets value to SourceInfo
func (o *Archive) SetSourceInfo(v *SourceArchiveInfo) {
	o.SourceInfo = v
}

/*************************************************
* BundleInfo
*************************************************/

// BundleInfo represents API parameter/response structure
type BundleInfo struct {
	ID           types.ID
	HostClass    string `json:",omitempty" mapconv:",omitempty"`
	ServiceClass string `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *BundleInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *BundleInfo) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		HostClass    string `json:",omitempty" mapconv:",omitempty"`
		ServiceClass string `json:",omitempty" mapconv:",omitempty"`
	}{
		ID:           o.ID,
		HostClass:    o.HostClass,
		ServiceClass: o.ServiceClass,
	}
}

// GetID returns value of ID
func (o *BundleInfo) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *BundleInfo) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *BundleInfo) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *BundleInfo) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *BundleInfo) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *BundleInfo) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetHostClass returns value of HostClass
func (o *BundleInfo) GetHostClass() string {
	return o.HostClass
}

// SetHostClass sets value to HostClass
func (o *BundleInfo) SetHostClass(v string) {
	o.HostClass = v
}

// GetServiceClass returns value of ServiceClass
func (o *BundleInfo) GetServiceClass() string {
	return o.ServiceClass
}

// SetServiceClass sets value to ServiceClass
func (o *BundleInfo) SetServiceClass(v string) {
	o.ServiceClass = v
}

/*************************************************
* Storage
*************************************************/

// Storage represents API parameter/response structure
type Storage struct {
	ID         types.ID
	Name       string `validate:"required"`
	Class      string `json:",omitempty" mapconv:",omitempty"`
	Generation int    `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *Storage) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Storage) setDefaults() interface{} {
	return &struct {
		ID         types.ID
		Name       string `validate:"required"`
		Class      string `json:",omitempty" mapconv:",omitempty"`
		Generation int    `json:",omitempty" mapconv:",omitempty"`
	}{
		ID:         o.ID,
		Name:       o.Name,
		Class:      o.Class,
		Generation: o.Generation,
	}
}

// GetID returns value of ID
func (o *Storage) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Storage) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Storage) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Storage) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Storage) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Storage) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Storage) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Storage) SetName(v string) {
	o.Name = v
}

// GetClass returns value of Class
func (o *Storage) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *Storage) SetClass(v string) {
	o.Class = v
}

// GetGeneration returns value of Generation
func (o *Storage) GetGeneration() int {
	return o.Generation
}

// SetGeneration sets value to Generation
func (o *Storage) SetGeneration(v int) {
	o.Generation = v
}

/*************************************************
* SourceArchiveInfo
*************************************************/

// SourceArchiveInfo represents API parameter/response structure
type SourceArchiveInfo struct {
	ID        types.ID `mapconv:"ArchiveUnderZone.ID"`
	AccountID types.ID `mapconv:"ArchiveUnderZone.Account.ID"`
	ZoneID    types.ID `mapconv:"ArchiveUnderZone.Zone.ID"`
	ZoneName  string   `mapconv:"ArchiveUnderZone.Zone.Name"`
}

// Validate validates by field tags
func (o *SourceArchiveInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SourceArchiveInfo) setDefaults() interface{} {
	return &struct {
		ID        types.ID `mapconv:"ArchiveUnderZone.ID"`
		AccountID types.ID `mapconv:"ArchiveUnderZone.Account.ID"`
		ZoneID    types.ID `mapconv:"ArchiveUnderZone.Zone.ID"`
		ZoneName  string   `mapconv:"ArchiveUnderZone.Zone.Name"`
	}{
		ID:        o.ID,
		AccountID: o.AccountID,
		ZoneID:    o.ZoneID,
		ZoneName:  o.ZoneName,
	}
}

// GetID returns value of ID
func (o *SourceArchiveInfo) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *SourceArchiveInfo) SetID(v types.ID) {
	o.ID = v
}

// GetAccountID returns value of AccountID
func (o *SourceArchiveInfo) GetAccountID() types.ID {
	return o.AccountID
}

// SetAccountID sets value to AccountID
func (o *SourceArchiveInfo) SetAccountID(v types.ID) {
	o.AccountID = v
}

// GetZoneID returns value of ZoneID
func (o *SourceArchiveInfo) GetZoneID() types.ID {
	return o.ZoneID
}

// SetZoneID sets value to ZoneID
func (o *SourceArchiveInfo) SetZoneID(v types.ID) {
	o.ZoneID = v
}

// GetZoneName returns value of ZoneName
func (o *SourceArchiveInfo) GetZoneName() string {
	return o.ZoneName
}

// SetZoneName sets value to ZoneName
func (o *SourceArchiveInfo) SetZoneName(v string) {
	o.ZoneName = v
}

/*************************************************
* FindCondition
*************************************************/

// FindCondition represents API parameter/response structure
type FindCondition struct {
	Count   int             `mapconv:",omitempty"`
	From    int             `mapconv:",omitempty"`
	Sort    search.SortKeys `mapconv:",omitempty"`
	Filter  search.Filter   `mapconv:",omitempty"`
	Include []string        `mapconv:",omitempty"`
	Exclude []string        `mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *FindCondition) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *FindCondition) setDefaults() interface{} {
	return &struct {
		Count   int             `mapconv:",omitempty"`
		From    int             `mapconv:",omitempty"`
		Sort    search.SortKeys `mapconv:",omitempty"`
		Filter  search.Filter   `mapconv:",omitempty"`
		Include []string        `mapconv:",omitempty"`
		Exclude []string        `mapconv:",omitempty"`
	}{
		Count:   o.Count,
		From:    o.From,
		Sort:    o.Sort,
		Filter:  o.Filter,
		Include: o.Include,
		Exclude: o.Exclude,
	}
}

// ClearFilter フィルタのクリア
func (o *FindCondition) ClearFilter() {
	accessor.ClearFilter(o)
}

// GetCount returns value of Count
func (o *FindCondition) GetCount() int {
	return o.Count
}

// SetCount sets value to Count
func (o *FindCondition) SetCount(v int) {
	o.Count = v
}

// GetFrom returns value of From
func (o *FindCondition) GetFrom() int {
	return o.From
}

// SetFrom sets value to From
func (o *FindCondition) SetFrom(v int) {
	o.From = v
}

// GetSort returns value of Sort
func (o *FindCondition) GetSort() search.SortKeys {
	return o.Sort
}

// SetSort sets value to Sort
func (o *FindCondition) SetSort(v search.SortKeys) {
	o.Sort = v
}

// GetFilter returns value of Filter
func (o *FindCondition) GetFilter() search.Filter {
	return o.Filter
}

// SetFilter sets value to Filter
func (o *FindCondition) SetFilter(v search.Filter) {
	o.Filter = v
}

// GetInclude returns value of Include
func (o *FindCondition) GetInclude() []string {
	return o.Include
}

// SetInclude sets value to Include
func (o *FindCondition) SetInclude(v []string) {
	o.Include = v
}

// GetExclude returns value of Exclude
func (o *FindCondition) GetExclude() []string {
	return o.Exclude
}

// SetExclude sets value to Exclude
func (o *FindCondition) SetExclude(v []string) {
	o.Exclude = v
}

/*************************************************
* ArchiveCreateRequest
*************************************************/

// ArchiveCreateRequest represents API parameter/response structure
type ArchiveCreateRequest struct {
	SourceDiskID    types.ID `mapconv:"SourceDisk.ID,omitempty"`
	SourceArchiveID types.ID `mapconv:"SourceArchive.ID,omitempty"`
	Name            string   `validate:"required"`
	Description     string   `validate:"min=0,max=512"`
	Tags            types.Tags
	IconID          types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ArchiveCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ArchiveCreateRequest) setDefaults() interface{} {
	return &struct {
		SourceDiskID    types.ID `mapconv:"SourceDisk.ID,omitempty"`
		SourceArchiveID types.ID `mapconv:"SourceArchive.ID,omitempty"`
		Name            string   `validate:"required"`
		Description     string   `validate:"min=0,max=512"`
		Tags            types.Tags
		IconID          types.ID `mapconv:"Icon.ID"`
	}{
		SourceDiskID:    o.SourceDiskID,
		SourceArchiveID: o.SourceArchiveID,
		Name:            o.Name,
		Description:     o.Description,
		Tags:            o.Tags,
		IconID:          o.IconID,
	}
}

// GetSourceDiskID returns value of SourceDiskID
func (o *ArchiveCreateRequest) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *ArchiveCreateRequest) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *ArchiveCreateRequest) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *ArchiveCreateRequest) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetName returns value of Name
func (o *ArchiveCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ArchiveCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ArchiveCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ArchiveCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ArchiveCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ArchiveCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *ArchiveCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *ArchiveCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *ArchiveCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *ArchiveCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *ArchiveCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ArchiveCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* FTPServer
*************************************************/

// FTPServer represents API parameter/response structure
type FTPServer struct {
	HostName  string
	IPAddress string
	User      string
	Password  string
}

// Validate validates by field tags
func (o *FTPServer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *FTPServer) setDefaults() interface{} {
	return &struct {
		HostName  string
		IPAddress string
		User      string
		Password  string
	}{
		HostName:  o.HostName,
		IPAddress: o.IPAddress,
		User:      o.User,
		Password:  o.Password,
	}
}

// GetHostName returns value of HostName
func (o *FTPServer) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *FTPServer) SetHostName(v string) {
	o.HostName = v
}

// GetIPAddress returns value of IPAddress
func (o *FTPServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *FTPServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetUser returns value of User
func (o *FTPServer) GetUser() string {
	return o.User
}

// SetUser sets value to User
func (o *FTPServer) SetUser(v string) {
	o.User = v
}

// GetPassword returns value of Password
func (o *FTPServer) GetPassword() string {
	return o.Password
}

// SetPassword sets value to Password
func (o *FTPServer) SetPassword(v string) {
	o.Password = v
}

/*************************************************
* ArchiveCreateBlankRequest
*************************************************/

// ArchiveCreateBlankRequest represents API parameter/response structure
type ArchiveCreateBlankRequest struct {
	SizeMB      int
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ArchiveCreateBlankRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ArchiveCreateBlankRequest) setDefaults() interface{} {
	return &struct {
		SizeMB      int
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		SizeMB:      o.SizeMB,
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetSizeMB returns value of SizeMB
func (o *ArchiveCreateBlankRequest) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *ArchiveCreateBlankRequest) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB .
func (o *ArchiveCreateBlankRequest) GetSizeGB() int {
	return accessor.GetSizeGB(o)
}

// SetSizeGB .
func (o *ArchiveCreateBlankRequest) SetSizeGB(size int) {
	accessor.SetSizeGB(o, size)
}

// GetName returns value of Name
func (o *ArchiveCreateBlankRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ArchiveCreateBlankRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ArchiveCreateBlankRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ArchiveCreateBlankRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ArchiveCreateBlankRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ArchiveCreateBlankRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *ArchiveCreateBlankRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *ArchiveCreateBlankRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *ArchiveCreateBlankRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *ArchiveCreateBlankRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *ArchiveCreateBlankRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ArchiveCreateBlankRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* ArchiveUpdateRequest
*************************************************/

// ArchiveUpdateRequest represents API parameter/response structure
type ArchiveUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ArchiveUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ArchiveUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetName returns value of Name
func (o *ArchiveUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ArchiveUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ArchiveUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ArchiveUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ArchiveUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ArchiveUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *ArchiveUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *ArchiveUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *ArchiveUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *ArchiveUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *ArchiveUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ArchiveUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* OpenFTPRequest
*************************************************/

// OpenFTPRequest represents API parameter/response structure
type OpenFTPRequest struct {
	ChangePassword bool
}

// Validate validates by field tags
func (o *OpenFTPRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *OpenFTPRequest) setDefaults() interface{} {
	return &struct {
		ChangePassword bool
	}{
		ChangePassword: o.ChangePassword,
	}
}

// GetChangePassword returns value of ChangePassword
func (o *OpenFTPRequest) GetChangePassword() bool {
	return o.ChangePassword
}

// SetChangePassword sets value to ChangePassword
func (o *OpenFTPRequest) SetChangePassword(v bool) {
	o.ChangePassword = v
}

/*************************************************
* AuthStatus
*************************************************/

// AuthStatus represents API parameter/response structure
type AuthStatus struct {
	AccountID          types.ID `mapconv:"Account.ID"`
	AccountName        string   `mapconv:"Account.Name"`
	AccountCode        string   `mapconv:"Account.Code"`
	AccountClass       string   `mapconv:"Account.Class"`
	MemberCode         string   `mapconv:"Member.Code"`
	MemberClass        string   `mapconv:"Member.Class"`
	AuthClass          types.EAuthClass
	AuthMethod         types.EAuthMethod
	IsAPIKey           bool
	ExternalPermission types.ExternalPermission
	OperationPenalty   types.EOperationPenalty
	Permission         types.EPermission
}

// Validate validates by field tags
func (o *AuthStatus) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *AuthStatus) setDefaults() interface{} {
	return &struct {
		AccountID          types.ID `mapconv:"Account.ID"`
		AccountName        string   `mapconv:"Account.Name"`
		AccountCode        string   `mapconv:"Account.Code"`
		AccountClass       string   `mapconv:"Account.Class"`
		MemberCode         string   `mapconv:"Member.Code"`
		MemberClass        string   `mapconv:"Member.Class"`
		AuthClass          types.EAuthClass
		AuthMethod         types.EAuthMethod
		IsAPIKey           bool
		ExternalPermission types.ExternalPermission
		OperationPenalty   types.EOperationPenalty
		Permission         types.EPermission
	}{
		AccountID:          o.AccountID,
		AccountName:        o.AccountName,
		AccountCode:        o.AccountCode,
		AccountClass:       o.AccountClass,
		MemberCode:         o.MemberCode,
		MemberClass:        o.MemberClass,
		AuthClass:          o.AuthClass,
		AuthMethod:         o.AuthMethod,
		IsAPIKey:           o.IsAPIKey,
		ExternalPermission: o.ExternalPermission,
		OperationPenalty:   o.OperationPenalty,
		Permission:         o.Permission,
	}
}

// GetAccountID returns value of AccountID
func (o *AuthStatus) GetAccountID() types.ID {
	return o.AccountID
}

// SetAccountID sets value to AccountID
func (o *AuthStatus) SetAccountID(v types.ID) {
	o.AccountID = v
}

// GetAccountName returns value of AccountName
func (o *AuthStatus) GetAccountName() string {
	return o.AccountName
}

// SetAccountName sets value to AccountName
func (o *AuthStatus) SetAccountName(v string) {
	o.AccountName = v
}

// GetAccountCode returns value of AccountCode
func (o *AuthStatus) GetAccountCode() string {
	return o.AccountCode
}

// SetAccountCode sets value to AccountCode
func (o *AuthStatus) SetAccountCode(v string) {
	o.AccountCode = v
}

// GetAccountClass returns value of AccountClass
func (o *AuthStatus) GetAccountClass() string {
	return o.AccountClass
}

// SetAccountClass sets value to AccountClass
func (o *AuthStatus) SetAccountClass(v string) {
	o.AccountClass = v
}

// GetMemberCode returns value of MemberCode
func (o *AuthStatus) GetMemberCode() string {
	return o.MemberCode
}

// SetMemberCode sets value to MemberCode
func (o *AuthStatus) SetMemberCode(v string) {
	o.MemberCode = v
}

// GetMemberClass returns value of MemberClass
func (o *AuthStatus) GetMemberClass() string {
	return o.MemberClass
}

// SetMemberClass sets value to MemberClass
func (o *AuthStatus) SetMemberClass(v string) {
	o.MemberClass = v
}

// GetAuthClass returns value of AuthClass
func (o *AuthStatus) GetAuthClass() types.EAuthClass {
	return o.AuthClass
}

// SetAuthClass sets value to AuthClass
func (o *AuthStatus) SetAuthClass(v types.EAuthClass) {
	o.AuthClass = v
}

// GetAuthMethod returns value of AuthMethod
func (o *AuthStatus) GetAuthMethod() types.EAuthMethod {
	return o.AuthMethod
}

// SetAuthMethod sets value to AuthMethod
func (o *AuthStatus) SetAuthMethod(v types.EAuthMethod) {
	o.AuthMethod = v
}

// GetIsAPIKey returns value of IsAPIKey
func (o *AuthStatus) GetIsAPIKey() bool {
	return o.IsAPIKey
}

// SetIsAPIKey sets value to IsAPIKey
func (o *AuthStatus) SetIsAPIKey(v bool) {
	o.IsAPIKey = v
}

// GetExternalPermission returns value of ExternalPermission
func (o *AuthStatus) GetExternalPermission() types.ExternalPermission {
	return o.ExternalPermission
}

// SetExternalPermission sets value to ExternalPermission
func (o *AuthStatus) SetExternalPermission(v types.ExternalPermission) {
	o.ExternalPermission = v
}

// GetOperationPenalty returns value of OperationPenalty
func (o *AuthStatus) GetOperationPenalty() types.EOperationPenalty {
	return o.OperationPenalty
}

// SetOperationPenalty sets value to OperationPenalty
func (o *AuthStatus) SetOperationPenalty(v types.EOperationPenalty) {
	o.OperationPenalty = v
}

// GetPermission returns value of Permission
func (o *AuthStatus) GetPermission() types.EPermission {
	return o.Permission
}

// SetPermission sets value to Permission
func (o *AuthStatus) SetPermission(v types.EPermission) {
	o.Permission = v
}

/*************************************************
* AutoBackup
*************************************************/

// AutoBackup represents API parameter/response structure
type AutoBackup struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    types.Tags
	Availability            types.EAvailability
	IconID                  types.ID `mapconv:"Icon.ID"`
	CreatedAt               time.Time
	ModifiedAt              time.Time
	BackupSpanWeekdays      []types.EBackupSpanWeekday `mapconv:"Settings.Autobackup.BackupSpanWeekdays"`
	MaximumNumberOfArchives int                        `mapconv:"Settings.Autobackup.MaximumNumberOfArchives"`
	SettingsHash            string
	DiskID                  types.ID `mapconv:"Status.DiskId"`
	AccountID               types.ID `mapconv:"Status.AccountId"`
	ZoneID                  types.ID `mapconv:"Status.ZoneId"`
	ZoneName                string   `mapconv:"Status.ZoneName"`
}

// Validate validates by field tags
func (o *AutoBackup) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *AutoBackup) setDefaults() interface{} {
	return &struct {
		ID                      types.ID
		Name                    string `validate:"required"`
		Description             string `validate:"min=0,max=512"`
		Tags                    types.Tags
		Availability            types.EAvailability
		IconID                  types.ID `mapconv:"Icon.ID"`
		CreatedAt               time.Time
		ModifiedAt              time.Time
		BackupSpanWeekdays      []types.EBackupSpanWeekday `mapconv:"Settings.Autobackup.BackupSpanWeekdays"`
		MaximumNumberOfArchives int                        `mapconv:"Settings.Autobackup.MaximumNumberOfArchives"`
		SettingsHash            string
		DiskID                  types.ID `mapconv:"Status.DiskId"`
		AccountID               types.ID `mapconv:"Status.AccountId"`
		ZoneID                  types.ID `mapconv:"Status.ZoneId"`
		ZoneName                string   `mapconv:"Status.ZoneName"`
	}{
		ID:                      o.ID,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		Availability:            o.Availability,
		IconID:                  o.IconID,
		CreatedAt:               o.CreatedAt,
		ModifiedAt:              o.ModifiedAt,
		BackupSpanWeekdays:      o.BackupSpanWeekdays,
		MaximumNumberOfArchives: o.MaximumNumberOfArchives,
		SettingsHash:            o.SettingsHash,
		DiskID:                  o.DiskID,
		AccountID:               o.AccountID,
		ZoneID:                  o.ZoneID,
		ZoneName:                o.ZoneName,
	}
}

// GetID returns value of ID
func (o *AutoBackup) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *AutoBackup) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *AutoBackup) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *AutoBackup) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *AutoBackup) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *AutoBackup) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *AutoBackup) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *AutoBackup) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *AutoBackup) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *AutoBackup) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *AutoBackup) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *AutoBackup) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *AutoBackup) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *AutoBackup) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *AutoBackup) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *AutoBackup) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *AutoBackup) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *AutoBackup) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetIconID returns value of IconID
func (o *AutoBackup) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *AutoBackup) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *AutoBackup) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *AutoBackup) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *AutoBackup) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *AutoBackup) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetBackupSpanWeekdays returns value of BackupSpanWeekdays
func (o *AutoBackup) GetBackupSpanWeekdays() []types.EBackupSpanWeekday {
	return o.BackupSpanWeekdays
}

// SetBackupSpanWeekdays sets value to BackupSpanWeekdays
func (o *AutoBackup) SetBackupSpanWeekdays(v []types.EBackupSpanWeekday) {
	o.BackupSpanWeekdays = v
}

// GetMaximumNumberOfArchives returns value of MaximumNumberOfArchives
func (o *AutoBackup) GetMaximumNumberOfArchives() int {
	return o.MaximumNumberOfArchives
}

// SetMaximumNumberOfArchives sets value to MaximumNumberOfArchives
func (o *AutoBackup) SetMaximumNumberOfArchives(v int) {
	o.MaximumNumberOfArchives = v
}

// GetSettingsHash returns value of SettingsHash
func (o *AutoBackup) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *AutoBackup) SetSettingsHash(v string) {
	o.SettingsHash = v
}

// GetDiskID returns value of DiskID
func (o *AutoBackup) GetDiskID() types.ID {
	return o.DiskID
}

// SetDiskID sets value to DiskID
func (o *AutoBackup) SetDiskID(v types.ID) {
	o.DiskID = v
}

// GetAccountID returns value of AccountID
func (o *AutoBackup) GetAccountID() types.ID {
	return o.AccountID
}

// SetAccountID sets value to AccountID
func (o *AutoBackup) SetAccountID(v types.ID) {
	o.AccountID = v
}

// GetZoneID returns value of ZoneID
func (o *AutoBackup) GetZoneID() types.ID {
	return o.ZoneID
}

// SetZoneID sets value to ZoneID
func (o *AutoBackup) SetZoneID(v types.ID) {
	o.ZoneID = v
}

// GetZoneName returns value of ZoneName
func (o *AutoBackup) GetZoneName() string {
	return o.ZoneName
}

// SetZoneName sets value to ZoneName
func (o *AutoBackup) SetZoneName(v string) {
	o.ZoneName = v
}

/*************************************************
* AutoBackupCreateRequest
*************************************************/

// AutoBackupCreateRequest represents API parameter/response structure
type AutoBackupCreateRequest struct {
	DiskID                  types.ID                   `mapconv:"Status.DiskId"`
	BackupSpanWeekdays      []types.EBackupSpanWeekday `mapconv:"Settings.Autobackup.BackupSpanWeekdays"`
	MaximumNumberOfArchives int                        `mapconv:"Settings.Autobackup.MaximumNumberOfArchives"`
	Name                    string                     `validate:"required"`
	Description             string                     `validate:"min=0,max=512"`
	Tags                    types.Tags
	IconID                  types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *AutoBackupCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *AutoBackupCreateRequest) setDefaults() interface{} {
	return &struct {
		DiskID                  types.ID                   `mapconv:"Status.DiskId"`
		BackupSpanWeekdays      []types.EBackupSpanWeekday `mapconv:"Settings.Autobackup.BackupSpanWeekdays"`
		MaximumNumberOfArchives int                        `mapconv:"Settings.Autobackup.MaximumNumberOfArchives"`
		Name                    string                     `validate:"required"`
		Description             string                     `validate:"min=0,max=512"`
		Tags                    types.Tags
		IconID                  types.ID              `mapconv:"Icon.ID"`
		Class                   string                `mapconv:"Provider.Class"`
		BackupSpanType          types.EBackupSpanType `mapconv:"Settings.Autobackup.BackupSpanType"`
	}{
		DiskID:                  o.DiskID,
		BackupSpanWeekdays:      o.BackupSpanWeekdays,
		MaximumNumberOfArchives: o.MaximumNumberOfArchives,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		IconID:                  o.IconID,
		Class:                   "autobackup",
		BackupSpanType:          types.BackupSpanTypes.Weekdays,
	}
}

// GetDiskID returns value of DiskID
func (o *AutoBackupCreateRequest) GetDiskID() types.ID {
	return o.DiskID
}

// SetDiskID sets value to DiskID
func (o *AutoBackupCreateRequest) SetDiskID(v types.ID) {
	o.DiskID = v
}

// GetBackupSpanWeekdays returns value of BackupSpanWeekdays
func (o *AutoBackupCreateRequest) GetBackupSpanWeekdays() []types.EBackupSpanWeekday {
	return o.BackupSpanWeekdays
}

// SetBackupSpanWeekdays sets value to BackupSpanWeekdays
func (o *AutoBackupCreateRequest) SetBackupSpanWeekdays(v []types.EBackupSpanWeekday) {
	o.BackupSpanWeekdays = v
}

// GetMaximumNumberOfArchives returns value of MaximumNumberOfArchives
func (o *AutoBackupCreateRequest) GetMaximumNumberOfArchives() int {
	return o.MaximumNumberOfArchives
}

// SetMaximumNumberOfArchives sets value to MaximumNumberOfArchives
func (o *AutoBackupCreateRequest) SetMaximumNumberOfArchives(v int) {
	o.MaximumNumberOfArchives = v
}

// GetName returns value of Name
func (o *AutoBackupCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *AutoBackupCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *AutoBackupCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *AutoBackupCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *AutoBackupCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *AutoBackupCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *AutoBackupCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *AutoBackupCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *AutoBackupCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *AutoBackupCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *AutoBackupCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *AutoBackupCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* AutoBackupUpdateRequest
*************************************************/

// AutoBackupUpdateRequest represents API parameter/response structure
type AutoBackupUpdateRequest struct {
	BackupSpanWeekdays      []types.EBackupSpanWeekday `mapconv:"Settings.Autobackup.BackupSpanWeekdays"`
	MaximumNumberOfArchives int                        `mapconv:"Settings.Autobackup.MaximumNumberOfArchives"`
	Name                    string                     `validate:"required"`
	Description             string                     `validate:"min=0,max=512"`
	Tags                    types.Tags
	IconID                  types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *AutoBackupUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *AutoBackupUpdateRequest) setDefaults() interface{} {
	return &struct {
		BackupSpanWeekdays      []types.EBackupSpanWeekday `mapconv:"Settings.Autobackup.BackupSpanWeekdays"`
		MaximumNumberOfArchives int                        `mapconv:"Settings.Autobackup.MaximumNumberOfArchives"`
		Name                    string                     `validate:"required"`
		Description             string                     `validate:"min=0,max=512"`
		Tags                    types.Tags
		IconID                  types.ID              `mapconv:"Icon.ID"`
		BackupSpanType          types.EBackupSpanType `mapconv:"Settings.Autobackup.BackupSpanType"`
	}{
		BackupSpanWeekdays:      o.BackupSpanWeekdays,
		MaximumNumberOfArchives: o.MaximumNumberOfArchives,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		IconID:                  o.IconID,
		BackupSpanType:          types.BackupSpanTypes.Weekdays,
	}
}

// GetBackupSpanWeekdays returns value of BackupSpanWeekdays
func (o *AutoBackupUpdateRequest) GetBackupSpanWeekdays() []types.EBackupSpanWeekday {
	return o.BackupSpanWeekdays
}

// SetBackupSpanWeekdays sets value to BackupSpanWeekdays
func (o *AutoBackupUpdateRequest) SetBackupSpanWeekdays(v []types.EBackupSpanWeekday) {
	o.BackupSpanWeekdays = v
}

// GetMaximumNumberOfArchives returns value of MaximumNumberOfArchives
func (o *AutoBackupUpdateRequest) GetMaximumNumberOfArchives() int {
	return o.MaximumNumberOfArchives
}

// SetMaximumNumberOfArchives sets value to MaximumNumberOfArchives
func (o *AutoBackupUpdateRequest) SetMaximumNumberOfArchives(v int) {
	o.MaximumNumberOfArchives = v
}

// GetName returns value of Name
func (o *AutoBackupUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *AutoBackupUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *AutoBackupUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *AutoBackupUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *AutoBackupUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *AutoBackupUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *AutoBackupUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *AutoBackupUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *AutoBackupUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *AutoBackupUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *AutoBackupUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *AutoBackupUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* Bill
*************************************************/

// Bill represents API parameter/response structure
type Bill struct {
	ID             types.ID
	Amount         int64
	Date           time.Time
	MemberID       string
	Paid           bool
	PayLimit       time.Time
	PaymentClassID types.ID
}

// Validate validates by field tags
func (o *Bill) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Bill) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		Amount         int64
		Date           time.Time
		MemberID       string
		Paid           bool
		PayLimit       time.Time
		PaymentClassID types.ID
	}{
		ID:             o.ID,
		Amount:         o.Amount,
		Date:           o.Date,
		MemberID:       o.MemberID,
		Paid:           o.Paid,
		PayLimit:       o.PayLimit,
		PaymentClassID: o.PaymentClassID,
	}
}

// GetID returns value of ID
func (o *Bill) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Bill) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Bill) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Bill) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Bill) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Bill) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetAmount returns value of Amount
func (o *Bill) GetAmount() int64 {
	return o.Amount
}

// SetAmount sets value to Amount
func (o *Bill) SetAmount(v int64) {
	o.Amount = v
}

// GetDate returns value of Date
func (o *Bill) GetDate() time.Time {
	return o.Date
}

// SetDate sets value to Date
func (o *Bill) SetDate(v time.Time) {
	o.Date = v
}

// GetMemberID returns value of MemberID
func (o *Bill) GetMemberID() string {
	return o.MemberID
}

// SetMemberID sets value to MemberID
func (o *Bill) SetMemberID(v string) {
	o.MemberID = v
}

// GetPaid returns value of Paid
func (o *Bill) GetPaid() bool {
	return o.Paid
}

// SetPaid sets value to Paid
func (o *Bill) SetPaid(v bool) {
	o.Paid = v
}

// GetPayLimit returns value of PayLimit
func (o *Bill) GetPayLimit() time.Time {
	return o.PayLimit
}

// SetPayLimit sets value to PayLimit
func (o *Bill) SetPayLimit(v time.Time) {
	o.PayLimit = v
}

// GetPaymentClassID returns value of PaymentClassID
func (o *Bill) GetPaymentClassID() types.ID {
	return o.PaymentClassID
}

// SetPaymentClassID sets value to PaymentClassID
func (o *Bill) SetPaymentClassID(v types.ID) {
	o.PaymentClassID = v
}

/*************************************************
* BillDetail
*************************************************/

// BillDetail represents API parameter/response structure
type BillDetail struct {
	ID             types.ID
	Amount         int64
	Description    string `validate:"min=0,max=512"`
	ServiceClassID types.ID
	Usage          int64
	Zone           string
	ContractEndAt  time.Time
}

// Validate validates by field tags
func (o *BillDetail) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *BillDetail) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		Amount         int64
		Description    string `validate:"min=0,max=512"`
		ServiceClassID types.ID
		Usage          int64
		Zone           string
		ContractEndAt  time.Time
	}{
		ID:             o.ID,
		Amount:         o.Amount,
		Description:    o.Description,
		ServiceClassID: o.ServiceClassID,
		Usage:          o.Usage,
		Zone:           o.Zone,
		ContractEndAt:  o.ContractEndAt,
	}
}

// GetID returns value of ID
func (o *BillDetail) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *BillDetail) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *BillDetail) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *BillDetail) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *BillDetail) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *BillDetail) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetAmount returns value of Amount
func (o *BillDetail) GetAmount() int64 {
	return o.Amount
}

// SetAmount sets value to Amount
func (o *BillDetail) SetAmount(v int64) {
	o.Amount = v
}

// GetDescription returns value of Description
func (o *BillDetail) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *BillDetail) SetDescription(v string) {
	o.Description = v
}

// GetServiceClassID returns value of ServiceClassID
func (o *BillDetail) GetServiceClassID() types.ID {
	return o.ServiceClassID
}

// SetServiceClassID sets value to ServiceClassID
func (o *BillDetail) SetServiceClassID(v types.ID) {
	o.ServiceClassID = v
}

// GetUsage returns value of Usage
func (o *BillDetail) GetUsage() int64 {
	return o.Usage
}

// SetUsage sets value to Usage
func (o *BillDetail) SetUsage(v int64) {
	o.Usage = v
}

// GetZone returns value of Zone
func (o *BillDetail) GetZone() string {
	return o.Zone
}

// SetZone sets value to Zone
func (o *BillDetail) SetZone(v string) {
	o.Zone = v
}

// GetContractEndAt returns value of ContractEndAt
func (o *BillDetail) GetContractEndAt() time.Time {
	return o.ContractEndAt
}

// SetContractEndAt sets value to ContractEndAt
func (o *BillDetail) SetContractEndAt(v time.Time) {
	o.ContractEndAt = v
}

/*************************************************
* BillDetailCSV
*************************************************/

// BillDetailCSV represents API parameter/response structure
type BillDetailCSV struct {
	Count       int
	ResponsedAt time.Time
	Filename    string
	RawBody     string
	HeaderRow   []string
	BodyRows    [][]string
}

// Validate validates by field tags
func (o *BillDetailCSV) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *BillDetailCSV) setDefaults() interface{} {
	return &struct {
		Count       int
		ResponsedAt time.Time
		Filename    string
		RawBody     string
		HeaderRow   []string
		BodyRows    [][]string
	}{
		Count:       o.Count,
		ResponsedAt: o.ResponsedAt,
		Filename:    o.Filename,
		RawBody:     o.RawBody,
		HeaderRow:   o.HeaderRow,
		BodyRows:    o.BodyRows,
	}
}

// GetCount returns value of Count
func (o *BillDetailCSV) GetCount() int {
	return o.Count
}

// SetCount sets value to Count
func (o *BillDetailCSV) SetCount(v int) {
	o.Count = v
}

// GetResponsedAt returns value of ResponsedAt
func (o *BillDetailCSV) GetResponsedAt() time.Time {
	return o.ResponsedAt
}

// SetResponsedAt sets value to ResponsedAt
func (o *BillDetailCSV) SetResponsedAt(v time.Time) {
	o.ResponsedAt = v
}

// GetFilename returns value of Filename
func (o *BillDetailCSV) GetFilename() string {
	return o.Filename
}

// SetFilename sets value to Filename
func (o *BillDetailCSV) SetFilename(v string) {
	o.Filename = v
}

// GetRawBody returns value of RawBody
func (o *BillDetailCSV) GetRawBody() string {
	return o.RawBody
}

// SetRawBody sets value to RawBody
func (o *BillDetailCSV) SetRawBody(v string) {
	o.RawBody = v
}

// GetHeaderRow returns value of HeaderRow
func (o *BillDetailCSV) GetHeaderRow() []string {
	return o.HeaderRow
}

// SetHeaderRow sets value to HeaderRow
func (o *BillDetailCSV) SetHeaderRow(v []string) {
	o.HeaderRow = v
}

// GetBodyRows returns value of BodyRows
func (o *BillDetailCSV) GetBodyRows() [][]string {
	return o.BodyRows
}

// SetBodyRows sets value to BodyRows
func (o *BillDetailCSV) SetBodyRows(v [][]string) {
	o.BodyRows = v
}

/*************************************************
* Bridge
*************************************************/

// Bridge represents API parameter/response structure
type Bridge struct {
	ID           types.ID
	Name         string `validate:"required"`
	Description  string `validate:"min=0,max=512"`
	CreatedAt    time.Time
	Region       *Region       `json:",omitempty"`
	BridgeInfo   []*BridgeInfo `mapconv:"[]Switches,recursive"`
	SwitchInZone *BridgeSwitchInfo
}

// Validate validates by field tags
func (o *Bridge) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Bridge) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		Description  string `validate:"min=0,max=512"`
		CreatedAt    time.Time
		Region       *Region       `json:",omitempty"`
		BridgeInfo   []*BridgeInfo `mapconv:"[]Switches,recursive"`
		SwitchInZone *BridgeSwitchInfo
	}{
		ID:           o.ID,
		Name:         o.Name,
		Description:  o.Description,
		CreatedAt:    o.CreatedAt,
		Region:       o.Region,
		BridgeInfo:   o.BridgeInfo,
		SwitchInZone: o.SwitchInZone,
	}
}

// GetID returns value of ID
func (o *Bridge) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Bridge) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Bridge) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Bridge) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Bridge) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Bridge) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Bridge) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Bridge) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Bridge) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Bridge) SetDescription(v string) {
	o.Description = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Bridge) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Bridge) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetRegion returns value of Region
func (o *Bridge) GetRegion() *Region {
	return o.Region
}

// SetRegion sets value to Region
func (o *Bridge) SetRegion(v *Region) {
	o.Region = v
}

// GetBridgeInfo returns value of BridgeInfo
func (o *Bridge) GetBridgeInfo() []*BridgeInfo {
	return o.BridgeInfo
}

// SetBridgeInfo sets value to BridgeInfo
func (o *Bridge) SetBridgeInfo(v []*BridgeInfo) {
	o.BridgeInfo = v
}

// GetSwitchInZone returns value of SwitchInZone
func (o *Bridge) GetSwitchInZone() *BridgeSwitchInfo {
	return o.SwitchInZone
}

// SetSwitchInZone sets value to SwitchInZone
func (o *Bridge) SetSwitchInZone(v *BridgeSwitchInfo) {
	o.SwitchInZone = v
}

/*************************************************
* Region
*************************************************/

// Region represents API parameter/response structure
type Region struct {
	ID          types.ID
	Name        string   `validate:"required"`
	Description string   `validate:"min=0,max=512"`
	NameServers []string `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *Region) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Region) setDefaults() interface{} {
	return &struct {
		ID          types.ID
		Name        string   `validate:"required"`
		Description string   `validate:"min=0,max=512"`
		NameServers []string `json:",omitempty" mapconv:",omitempty"`
	}{
		ID:          o.ID,
		Name:        o.Name,
		Description: o.Description,
		NameServers: o.NameServers,
	}
}

// GetID returns value of ID
func (o *Region) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Region) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Region) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Region) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Region) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Region) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Region) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Region) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Region) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Region) SetDescription(v string) {
	o.Description = v
}

// GetNameServers returns value of NameServers
func (o *Region) GetNameServers() []string {
	return o.NameServers
}

// SetNameServers sets value to NameServers
func (o *Region) SetNameServers(v []string) {
	o.NameServers = v
}

/*************************************************
* BridgeInfo
*************************************************/

// BridgeInfo represents API parameter/response structure
type BridgeInfo struct {
	ID     types.ID
	Name   string   `validate:"required"`
	ZoneID types.ID `mapconv:"Zone.ID"`
}

// Validate validates by field tags
func (o *BridgeInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *BridgeInfo) setDefaults() interface{} {
	return &struct {
		ID     types.ID
		Name   string   `validate:"required"`
		ZoneID types.ID `mapconv:"Zone.ID"`
	}{
		ID:     o.ID,
		Name:   o.Name,
		ZoneID: o.ZoneID,
	}
}

// GetID returns value of ID
func (o *BridgeInfo) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *BridgeInfo) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *BridgeInfo) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *BridgeInfo) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *BridgeInfo) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *BridgeInfo) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *BridgeInfo) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *BridgeInfo) SetName(v string) {
	o.Name = v
}

// GetZoneID returns value of ZoneID
func (o *BridgeInfo) GetZoneID() types.ID {
	return o.ZoneID
}

// SetZoneID sets value to ZoneID
func (o *BridgeInfo) SetZoneID(v types.ID) {
	o.ZoneID = v
}

/*************************************************
* BridgeSwitchInfo
*************************************************/

// BridgeSwitchInfo represents API parameter/response structure
type BridgeSwitchInfo struct {
	ID             types.ID
	Name           string `validate:"required"`
	Scope          types.EScope
	ServerCount    int
	ApplianceCount int
}

// Validate validates by field tags
func (o *BridgeSwitchInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *BridgeSwitchInfo) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		Name           string `validate:"required"`
		Scope          types.EScope
		ServerCount    int
		ApplianceCount int
	}{
		ID:             o.ID,
		Name:           o.Name,
		Scope:          o.Scope,
		ServerCount:    o.ServerCount,
		ApplianceCount: o.ApplianceCount,
	}
}

// GetID returns value of ID
func (o *BridgeSwitchInfo) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *BridgeSwitchInfo) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *BridgeSwitchInfo) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *BridgeSwitchInfo) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *BridgeSwitchInfo) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *BridgeSwitchInfo) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *BridgeSwitchInfo) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *BridgeSwitchInfo) SetName(v string) {
	o.Name = v
}

// GetScope returns value of Scope
func (o *BridgeSwitchInfo) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *BridgeSwitchInfo) SetScope(v types.EScope) {
	o.Scope = v
}

// GetServerCount returns value of ServerCount
func (o *BridgeSwitchInfo) GetServerCount() int {
	return o.ServerCount
}

// SetServerCount sets value to ServerCount
func (o *BridgeSwitchInfo) SetServerCount(v int) {
	o.ServerCount = v
}

// GetApplianceCount returns value of ApplianceCount
func (o *BridgeSwitchInfo) GetApplianceCount() int {
	return o.ApplianceCount
}

// SetApplianceCount sets value to ApplianceCount
func (o *BridgeSwitchInfo) SetApplianceCount(v int) {
	o.ApplianceCount = v
}

/*************************************************
* BridgeCreateRequest
*************************************************/

// BridgeCreateRequest represents API parameter/response structure
type BridgeCreateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
}

// Validate validates by field tags
func (o *BridgeCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *BridgeCreateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
	}{
		Name:        o.Name,
		Description: o.Description,
	}
}

// GetName returns value of Name
func (o *BridgeCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *BridgeCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *BridgeCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *BridgeCreateRequest) SetDescription(v string) {
	o.Description = v
}

/*************************************************
* BridgeUpdateRequest
*************************************************/

// BridgeUpdateRequest represents API parameter/response structure
type BridgeUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
}

// Validate validates by field tags
func (o *BridgeUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *BridgeUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
	}{
		Name:        o.Name,
		Description: o.Description,
	}
}

// GetName returns value of Name
func (o *BridgeUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *BridgeUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *BridgeUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *BridgeUpdateRequest) SetDescription(v string) {
	o.Description = v
}

/*************************************************
* CDROM
*************************************************/

// CDROM represents API parameter/response structure
type CDROM struct {
	ID           types.ID
	Name         string `validate:"required"`
	Description  string `validate:"min=0,max=512"`
	DisplayOrder int64
	Tags         types.Tags
	Availability types.EAvailability
	Scope        types.EScope
	Storage      *Storage `json:",omitempty" mapconv:",omitempty,recursive"`
	IconID       types.ID `mapconv:"Icon.ID"`
	CreatedAt    time.Time
	ModifiedAt   time.Time
}

// Validate validates by field tags
func (o *CDROM) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *CDROM) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		Description  string `validate:"min=0,max=512"`
		DisplayOrder int64
		Tags         types.Tags
		Availability types.EAvailability
		Scope        types.EScope
		Storage      *Storage `json:",omitempty" mapconv:",omitempty,recursive"`
		IconID       types.ID `mapconv:"Icon.ID"`
		CreatedAt    time.Time
		ModifiedAt   time.Time
	}{
		ID:           o.ID,
		Name:         o.Name,
		Description:  o.Description,
		DisplayOrder: o.DisplayOrder,
		Tags:         o.Tags,
		Availability: o.Availability,
		Scope:        o.Scope,
		Storage:      o.Storage,
		IconID:       o.IconID,
		CreatedAt:    o.CreatedAt,
		ModifiedAt:   o.ModifiedAt,
	}
}

// GetID returns value of ID
func (o *CDROM) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *CDROM) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *CDROM) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *CDROM) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *CDROM) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *CDROM) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *CDROM) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROM) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROM) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROM) SetDescription(v string) {
	o.Description = v
}

// GetDisplayOrder returns value of DisplayOrder
func (o *CDROM) GetDisplayOrder() int64 {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *CDROM) SetDisplayOrder(v int64) {
	o.DisplayOrder = v
}

// GetTags returns value of Tags
func (o *CDROM) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROM) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *CDROM) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *CDROM) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *CDROM) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *CDROM) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *CDROM) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *CDROM) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *CDROM) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *CDROM) SetScope(v types.EScope) {
	o.Scope = v
}

// GetStorage returns value of Storage
func (o *CDROM) GetStorage() *Storage {
	return o.Storage
}

// SetStorage sets value to Storage
func (o *CDROM) SetStorage(v *Storage) {
	o.Storage = v
}

// GetIconID returns value of IconID
func (o *CDROM) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *CDROM) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *CDROM) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *CDROM) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *CDROM) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *CDROM) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

/*************************************************
* CDROMCreateRequest
*************************************************/

// CDROMCreateRequest represents API parameter/response structure
type CDROMCreateRequest struct {
	SizeMB      int
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *CDROMCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *CDROMCreateRequest) setDefaults() interface{} {
	return &struct {
		SizeMB      int
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		SizeMB:      o.SizeMB,
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetSizeMB returns value of SizeMB
func (o *CDROMCreateRequest) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *CDROMCreateRequest) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB .
func (o *CDROMCreateRequest) GetSizeGB() int {
	return accessor.GetSizeGB(o)
}

// SetSizeGB .
func (o *CDROMCreateRequest) SetSizeGB(size int) {
	accessor.SetSizeGB(o, size)
}

// GetName returns value of Name
func (o *CDROMCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROMCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROMCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROMCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *CDROMCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROMCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *CDROMCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *CDROMCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *CDROMCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *CDROMCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *CDROMCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *CDROMCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* CDROMUpdateRequest
*************************************************/

// CDROMUpdateRequest represents API parameter/response structure
type CDROMUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *CDROMUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *CDROMUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetName returns value of Name
func (o *CDROMUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROMUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROMUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROMUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *CDROMUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROMUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *CDROMUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *CDROMUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *CDROMUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *CDROMUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *CDROMUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *CDROMUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* Coupon
*************************************************/

// Coupon represents API parameter/response structure
type Coupon struct {
	ID             types.ID
	MemberID       string
	ContractID     types.ID
	ServiceClassID types.ID
	Discount       int64
	AppliedAt      time.Time
	UntilAt        time.Time
}

// Validate validates by field tags
func (o *Coupon) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Coupon) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		MemberID       string
		ContractID     types.ID
		ServiceClassID types.ID
		Discount       int64
		AppliedAt      time.Time
		UntilAt        time.Time
	}{
		ID:             o.ID,
		MemberID:       o.MemberID,
		ContractID:     o.ContractID,
		ServiceClassID: o.ServiceClassID,
		Discount:       o.Discount,
		AppliedAt:      o.AppliedAt,
		UntilAt:        o.UntilAt,
	}
}

// GetID returns value of ID
func (o *Coupon) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Coupon) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Coupon) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Coupon) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Coupon) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Coupon) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetMemberID returns value of MemberID
func (o *Coupon) GetMemberID() string {
	return o.MemberID
}

// SetMemberID sets value to MemberID
func (o *Coupon) SetMemberID(v string) {
	o.MemberID = v
}

// GetContractID returns value of ContractID
func (o *Coupon) GetContractID() types.ID {
	return o.ContractID
}

// SetContractID sets value to ContractID
func (o *Coupon) SetContractID(v types.ID) {
	o.ContractID = v
}

// GetServiceClassID returns value of ServiceClassID
func (o *Coupon) GetServiceClassID() types.ID {
	return o.ServiceClassID
}

// SetServiceClassID sets value to ServiceClassID
func (o *Coupon) SetServiceClassID(v types.ID) {
	o.ServiceClassID = v
}

// GetDiscount returns value of Discount
func (o *Coupon) GetDiscount() int64 {
	return o.Discount
}

// SetDiscount sets value to Discount
func (o *Coupon) SetDiscount(v int64) {
	o.Discount = v
}

// GetAppliedAt returns value of AppliedAt
func (o *Coupon) GetAppliedAt() time.Time {
	return o.AppliedAt
}

// SetAppliedAt sets value to AppliedAt
func (o *Coupon) SetAppliedAt(v time.Time) {
	o.AppliedAt = v
}

// GetUntilAt returns value of UntilAt
func (o *Coupon) GetUntilAt() time.Time {
	return o.UntilAt
}

// SetUntilAt sets value to UntilAt
func (o *Coupon) SetUntilAt(v time.Time) {
	o.UntilAt = v
}

/*************************************************
* Database
*************************************************/

// Database represents API parameter/response structure
type Database struct {
	ID                      types.ID
	Class                   string
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    types.Tags
	Availability            types.EAvailability
	IconID                  types.ID `mapconv:"Icon.ID"`
	CreatedAt               time.Time
	ModifiedAt              time.Time
	CommonSetting           *DatabaseSettingCommon      `mapconv:"Settings.DBConf.Common,recursive"`
	BackupSetting           *DatabaseSettingBackup      `mapconv:"Settings.DBConf.Backup,recursive"`
	ReplicationSetting      *DatabaseReplicationSetting `mapconv:"Settings.DBConf.Replication,recursive"`
	SettingsHash            string
	InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
	InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
	InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
	InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
	PlanID                  types.ID                    `mapconv:"Remark.Plan.ID/Plan.ID"`
	SwitchID                types.ID                    `mapconv:"Remark.Switch.ID"`
	Conf                    *DatabaseRemarkDBConfCommon `mapconv:"Remark.DBConf.Common,recursive"`
	DefaultRoute            string                      `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	NetworkMaskLen          int                         `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	IPAddresses             []string                    `mapconv:"Remark.[]Servers.IPAddress"`
	ZoneID                  types.ID                    `mapconv:"Remark.Zone.ID"`
	Interfaces              []*InterfaceView            `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
}

// Validate validates by field tags
func (o *Database) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Database) setDefaults() interface{} {
	return &struct {
		ID                      types.ID
		Class                   string
		Name                    string `validate:"required"`
		Description             string `validate:"min=0,max=512"`
		Tags                    types.Tags
		Availability            types.EAvailability
		IconID                  types.ID `mapconv:"Icon.ID"`
		CreatedAt               time.Time
		ModifiedAt              time.Time
		CommonSetting           *DatabaseSettingCommon      `mapconv:"Settings.DBConf.Common,recursive"`
		BackupSetting           *DatabaseSettingBackup      `mapconv:"Settings.DBConf.Backup,recursive"`
		ReplicationSetting      *DatabaseReplicationSetting `mapconv:"Settings.DBConf.Replication,recursive"`
		SettingsHash            string
		InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
		InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
		InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
		InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
		PlanID                  types.ID                    `mapconv:"Remark.Plan.ID/Plan.ID"`
		SwitchID                types.ID                    `mapconv:"Remark.Switch.ID"`
		Conf                    *DatabaseRemarkDBConfCommon `mapconv:"Remark.DBConf.Common,recursive"`
		DefaultRoute            string                      `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
		NetworkMaskLen          int                         `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
		IPAddresses             []string                    `mapconv:"Remark.[]Servers.IPAddress"`
		ZoneID                  types.ID                    `mapconv:"Remark.Zone.ID"`
		Interfaces              []*InterfaceView            `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
	}{
		ID:                      o.ID,
		Class:                   o.Class,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		Availability:            o.Availability,
		IconID:                  o.IconID,
		CreatedAt:               o.CreatedAt,
		ModifiedAt:              o.ModifiedAt,
		CommonSetting:           o.CommonSetting,
		BackupSetting:           o.BackupSetting,
		ReplicationSetting:      o.ReplicationSetting,
		SettingsHash:            o.SettingsHash,
		InstanceHostName:        o.InstanceHostName,
		InstanceHostInfoURL:     o.InstanceHostInfoURL,
		InstanceStatus:          o.InstanceStatus,
		InstanceStatusChangedAt: o.InstanceStatusChangedAt,
		PlanID:                  o.PlanID,
		SwitchID:                o.SwitchID,
		Conf:                    o.Conf,
		DefaultRoute:            o.DefaultRoute,
		NetworkMaskLen:          o.NetworkMaskLen,
		IPAddresses:             o.IPAddresses,
		ZoneID:                  o.ZoneID,
		Interfaces:              o.Interfaces,
	}
}

// GetID returns value of ID
func (o *Database) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Database) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Database) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Database) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Database) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Database) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetClass returns value of Class
func (o *Database) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *Database) SetClass(v string) {
	o.Class = v
}

// GetName returns value of Name
func (o *Database) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Database) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Database) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Database) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Database) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Database) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *Database) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *Database) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *Database) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *Database) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *Database) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Database) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetIconID returns value of IconID
func (o *Database) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *Database) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Database) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Database) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Database) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Database) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetCommonSetting returns value of CommonSetting
func (o *Database) GetCommonSetting() *DatabaseSettingCommon {
	return o.CommonSetting
}

// SetCommonSetting sets value to CommonSetting
func (o *Database) SetCommonSetting(v *DatabaseSettingCommon) {
	o.CommonSetting = v
}

// GetBackupSetting returns value of BackupSetting
func (o *Database) GetBackupSetting() *DatabaseSettingBackup {
	return o.BackupSetting
}

// SetBackupSetting sets value to BackupSetting
func (o *Database) SetBackupSetting(v *DatabaseSettingBackup) {
	o.BackupSetting = v
}

// GetReplicationSetting returns value of ReplicationSetting
func (o *Database) GetReplicationSetting() *DatabaseReplicationSetting {
	return o.ReplicationSetting
}

// SetReplicationSetting sets value to ReplicationSetting
func (o *Database) SetReplicationSetting(v *DatabaseReplicationSetting) {
	o.ReplicationSetting = v
}

// GetSettingsHash returns value of SettingsHash
func (o *Database) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *Database) SetSettingsHash(v string) {
	o.SettingsHash = v
}

// GetInstanceHostName returns value of InstanceHostName
func (o *Database) GetInstanceHostName() string {
	return o.InstanceHostName
}

// SetInstanceHostName sets value to InstanceHostName
func (o *Database) SetInstanceHostName(v string) {
	o.InstanceHostName = v
}

// GetInstanceHostInfoURL returns value of InstanceHostInfoURL
func (o *Database) GetInstanceHostInfoURL() string {
	return o.InstanceHostInfoURL
}

// SetInstanceHostInfoURL sets value to InstanceHostInfoURL
func (o *Database) SetInstanceHostInfoURL(v string) {
	o.InstanceHostInfoURL = v
}

// GetInstanceStatus returns value of InstanceStatus
func (o *Database) GetInstanceStatus() types.EServerInstanceStatus {
	return o.InstanceStatus
}

// SetInstanceStatus sets value to InstanceStatus
func (o *Database) SetInstanceStatus(v types.EServerInstanceStatus) {
	o.InstanceStatus = v
}

// GetInstanceStatusChangedAt returns value of InstanceStatusChangedAt
func (o *Database) GetInstanceStatusChangedAt() time.Time {
	return o.InstanceStatusChangedAt
}

// SetInstanceStatusChangedAt sets value to InstanceStatusChangedAt
func (o *Database) SetInstanceStatusChangedAt(v time.Time) {
	o.InstanceStatusChangedAt = v
}

// GetPlanID returns value of PlanID
func (o *Database) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *Database) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetSwitchID returns value of SwitchID
func (o *Database) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *Database) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetConf returns value of Conf
func (o *Database) GetConf() *DatabaseRemarkDBConfCommon {
	return o.Conf
}

// SetConf sets value to Conf
func (o *Database) SetConf(v *DatabaseRemarkDBConfCommon) {
	o.Conf = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *Database) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *Database) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *Database) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *Database) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetIPAddresses returns value of IPAddresses
func (o *Database) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *Database) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetZoneID returns value of ZoneID
func (o *Database) GetZoneID() types.ID {
	return o.ZoneID
}

// SetZoneID sets value to ZoneID
func (o *Database) SetZoneID(v types.ID) {
	o.ZoneID = v
}

// GetInterfaces returns value of Interfaces
func (o *Database) GetInterfaces() []*InterfaceView {
	return o.Interfaces
}

// SetInterfaces sets value to Interfaces
func (o *Database) SetInterfaces(v []*InterfaceView) {
	o.Interfaces = v
}

/*************************************************
* DatabaseSettingCommon
*************************************************/

// DatabaseSettingCommon represents API parameter/response structure
type DatabaseSettingCommon struct {
	WebUI         bool
	ServicePort   int
	SourceNetwork []string
	DefaultUser   string
	UserPassword  string
}

// Validate validates by field tags
func (o *DatabaseSettingCommon) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseSettingCommon) setDefaults() interface{} {
	return &struct {
		WebUI         bool
		ServicePort   int
		SourceNetwork []string
		DefaultUser   string
		UserPassword  string
	}{
		WebUI:         o.WebUI,
		ServicePort:   o.ServicePort,
		SourceNetwork: o.SourceNetwork,
		DefaultUser:   o.DefaultUser,
		UserPassword:  o.UserPassword,
	}
}

// GetWebUI returns value of WebUI
func (o *DatabaseSettingCommon) GetWebUI() bool {
	return o.WebUI
}

// SetWebUI sets value to WebUI
func (o *DatabaseSettingCommon) SetWebUI(v bool) {
	o.WebUI = v
}

// GetServicePort returns value of ServicePort
func (o *DatabaseSettingCommon) GetServicePort() int {
	return o.ServicePort
}

// SetServicePort sets value to ServicePort
func (o *DatabaseSettingCommon) SetServicePort(v int) {
	o.ServicePort = v
}

// GetSourceNetwork returns value of SourceNetwork
func (o *DatabaseSettingCommon) GetSourceNetwork() []string {
	return o.SourceNetwork
}

// SetSourceNetwork sets value to SourceNetwork
func (o *DatabaseSettingCommon) SetSourceNetwork(v []string) {
	o.SourceNetwork = v
}

// GetDefaultUser returns value of DefaultUser
func (o *DatabaseSettingCommon) GetDefaultUser() string {
	return o.DefaultUser
}

// SetDefaultUser sets value to DefaultUser
func (o *DatabaseSettingCommon) SetDefaultUser(v string) {
	o.DefaultUser = v
}

// GetUserPassword returns value of UserPassword
func (o *DatabaseSettingCommon) GetUserPassword() string {
	return o.UserPassword
}

// SetUserPassword sets value to UserPassword
func (o *DatabaseSettingCommon) SetUserPassword(v string) {
	o.UserPassword = v
}

/*************************************************
* DatabaseSettingBackup
*************************************************/

// DatabaseSettingBackup represents API parameter/response structure
type DatabaseSettingBackup struct {
	Rotate    int
	Time      string
	DayOfWeek []types.EBackupSpanWeekday
}

// Validate validates by field tags
func (o *DatabaseSettingBackup) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseSettingBackup) setDefaults() interface{} {
	return &struct {
		Rotate    int
		Time      string
		DayOfWeek []types.EBackupSpanWeekday
	}{
		Rotate:    o.Rotate,
		Time:      o.Time,
		DayOfWeek: o.DayOfWeek,
	}
}

// GetRotate returns value of Rotate
func (o *DatabaseSettingBackup) GetRotate() int {
	return o.Rotate
}

// SetRotate sets value to Rotate
func (o *DatabaseSettingBackup) SetRotate(v int) {
	o.Rotate = v
}

// GetTime returns value of Time
func (o *DatabaseSettingBackup) GetTime() string {
	return o.Time
}

// SetTime sets value to Time
func (o *DatabaseSettingBackup) SetTime(v string) {
	o.Time = v
}

// GetDayOfWeek returns value of DayOfWeek
func (o *DatabaseSettingBackup) GetDayOfWeek() []types.EBackupSpanWeekday {
	return o.DayOfWeek
}

// SetDayOfWeek sets value to DayOfWeek
func (o *DatabaseSettingBackup) SetDayOfWeek(v []types.EBackupSpanWeekday) {
	o.DayOfWeek = v
}

/*************************************************
* DatabaseReplicationSetting
*************************************************/

// DatabaseReplicationSetting represents API parameter/response structure
type DatabaseReplicationSetting struct {
	Model       types.EDatabaseReplicationModel
	IPAddress   string
	Port        int
	User        string
	Password    string
	ApplianceID types.ID `mapconv:"Appliance.ID"`
}

// Validate validates by field tags
func (o *DatabaseReplicationSetting) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseReplicationSetting) setDefaults() interface{} {
	return &struct {
		Model       types.EDatabaseReplicationModel
		IPAddress   string
		Port        int
		User        string
		Password    string
		ApplianceID types.ID `mapconv:"Appliance.ID"`
	}{
		Model:       o.Model,
		IPAddress:   o.IPAddress,
		Port:        o.Port,
		User:        o.User,
		Password:    o.Password,
		ApplianceID: o.ApplianceID,
	}
}

// GetModel returns value of Model
func (o *DatabaseReplicationSetting) GetModel() types.EDatabaseReplicationModel {
	return o.Model
}

// SetModel sets value to Model
func (o *DatabaseReplicationSetting) SetModel(v types.EDatabaseReplicationModel) {
	o.Model = v
}

// GetIPAddress returns value of IPAddress
func (o *DatabaseReplicationSetting) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *DatabaseReplicationSetting) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetPort returns value of Port
func (o *DatabaseReplicationSetting) GetPort() int {
	return o.Port
}

// SetPort sets value to Port
func (o *DatabaseReplicationSetting) SetPort(v int) {
	o.Port = v
}

// GetUser returns value of User
func (o *DatabaseReplicationSetting) GetUser() string {
	return o.User
}

// SetUser sets value to User
func (o *DatabaseReplicationSetting) SetUser(v string) {
	o.User = v
}

// GetPassword returns value of Password
func (o *DatabaseReplicationSetting) GetPassword() string {
	return o.Password
}

// SetPassword sets value to Password
func (o *DatabaseReplicationSetting) SetPassword(v string) {
	o.Password = v
}

// GetApplianceID returns value of ApplianceID
func (o *DatabaseReplicationSetting) GetApplianceID() types.ID {
	return o.ApplianceID
}

// SetApplianceID sets value to ApplianceID
func (o *DatabaseReplicationSetting) SetApplianceID(v types.ID) {
	o.ApplianceID = v
}

/*************************************************
* DatabaseRemarkDBConfCommon
*************************************************/

// DatabaseRemarkDBConfCommon represents API parameter/response structure
type DatabaseRemarkDBConfCommon struct {
	DatabaseName     string
	DatabaseVersion  string
	DatabaseRevision string
	DefaultUser      string
	UserPassword     string
}

// Validate validates by field tags
func (o *DatabaseRemarkDBConfCommon) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseRemarkDBConfCommon) setDefaults() interface{} {
	return &struct {
		DatabaseName     string
		DatabaseVersion  string
		DatabaseRevision string
		DefaultUser      string
		UserPassword     string
	}{
		DatabaseName:     o.DatabaseName,
		DatabaseVersion:  o.DatabaseVersion,
		DatabaseRevision: o.DatabaseRevision,
		DefaultUser:      o.DefaultUser,
		UserPassword:     o.UserPassword,
	}
}

// GetDatabaseName returns value of DatabaseName
func (o *DatabaseRemarkDBConfCommon) GetDatabaseName() string {
	return o.DatabaseName
}

// SetDatabaseName sets value to DatabaseName
func (o *DatabaseRemarkDBConfCommon) SetDatabaseName(v string) {
	o.DatabaseName = v
}

// GetDatabaseVersion returns value of DatabaseVersion
func (o *DatabaseRemarkDBConfCommon) GetDatabaseVersion() string {
	return o.DatabaseVersion
}

// SetDatabaseVersion sets value to DatabaseVersion
func (o *DatabaseRemarkDBConfCommon) SetDatabaseVersion(v string) {
	o.DatabaseVersion = v
}

// GetDatabaseRevision returns value of DatabaseRevision
func (o *DatabaseRemarkDBConfCommon) GetDatabaseRevision() string {
	return o.DatabaseRevision
}

// SetDatabaseRevision sets value to DatabaseRevision
func (o *DatabaseRemarkDBConfCommon) SetDatabaseRevision(v string) {
	o.DatabaseRevision = v
}

// GetDefaultUser returns value of DefaultUser
func (o *DatabaseRemarkDBConfCommon) GetDefaultUser() string {
	return o.DefaultUser
}

// SetDefaultUser sets value to DefaultUser
func (o *DatabaseRemarkDBConfCommon) SetDefaultUser(v string) {
	o.DefaultUser = v
}

// GetUserPassword returns value of UserPassword
func (o *DatabaseRemarkDBConfCommon) GetUserPassword() string {
	return o.UserPassword
}

// SetUserPassword sets value to UserPassword
func (o *DatabaseRemarkDBConfCommon) SetUserPassword(v string) {
	o.UserPassword = v
}

/*************************************************
* InterfaceView
*************************************************/

// InterfaceView represents API parameter/response structure
type InterfaceView struct {
	ID                              types.ID
	MACAddress                      string
	IPAddress                       string
	UserIPAddress                   string
	HostName                        string
	SwitchID                        types.ID           `mapconv:"Switch.ID"`
	SwitchName                      string             `mapconv:"Switch.Name"`
	SwitchScope                     types.EScope       `mapconv:"Switch.Scope"`
	UserSubnetDefaultRoute          string             `mapconv:"Switch.UserSubnet.DefaultRoute"`
	UserSubnetNetworkMaskLen        int                `mapconv:"Switch.UserSubnet.NetworkMaskLen"`
	SubnetDefaultRoute              string             `mapconv:"Switch.Subnet.DefaultRoute"`
	SubnetNetworkMaskLen            int                `mapconv:"Switch.Subnet.NetworkMaskLen"`
	SubnetNetworkAddress            string             `mapconv:"Switch.Subnet.NetworkAddress"`
	SubnetBandWidthMbps             int                `mapconv:"Switch.Subnet.Internet.BandWidthMbps"`
	PacketFilterID                  string             `mapconv:"PacketFilter.ID"`
	PacketFilterName                string             `mapconv:"PacketFilter.Name"`
	PacketFilterRequiredHostVersion types.StringNumber `mapconv:"PacketFilter.RequiredHostVersionn"`
	UpstreamType                    types.EUpstreamNetworkType
}

// Validate validates by field tags
func (o *InterfaceView) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InterfaceView) setDefaults() interface{} {
	return &struct {
		ID                              types.ID
		MACAddress                      string
		IPAddress                       string
		UserIPAddress                   string
		HostName                        string
		SwitchID                        types.ID           `mapconv:"Switch.ID"`
		SwitchName                      string             `mapconv:"Switch.Name"`
		SwitchScope                     types.EScope       `mapconv:"Switch.Scope"`
		UserSubnetDefaultRoute          string             `mapconv:"Switch.UserSubnet.DefaultRoute"`
		UserSubnetNetworkMaskLen        int                `mapconv:"Switch.UserSubnet.NetworkMaskLen"`
		SubnetDefaultRoute              string             `mapconv:"Switch.Subnet.DefaultRoute"`
		SubnetNetworkMaskLen            int                `mapconv:"Switch.Subnet.NetworkMaskLen"`
		SubnetNetworkAddress            string             `mapconv:"Switch.Subnet.NetworkAddress"`
		SubnetBandWidthMbps             int                `mapconv:"Switch.Subnet.Internet.BandWidthMbps"`
		PacketFilterID                  string             `mapconv:"PacketFilter.ID"`
		PacketFilterName                string             `mapconv:"PacketFilter.Name"`
		PacketFilterRequiredHostVersion types.StringNumber `mapconv:"PacketFilter.RequiredHostVersionn"`
		UpstreamType                    types.EUpstreamNetworkType
	}{
		ID:                              o.ID,
		MACAddress:                      o.MACAddress,
		IPAddress:                       o.IPAddress,
		UserIPAddress:                   o.UserIPAddress,
		HostName:                        o.HostName,
		SwitchID:                        o.SwitchID,
		SwitchName:                      o.SwitchName,
		SwitchScope:                     o.SwitchScope,
		UserSubnetDefaultRoute:          o.UserSubnetDefaultRoute,
		UserSubnetNetworkMaskLen:        o.UserSubnetNetworkMaskLen,
		SubnetDefaultRoute:              o.SubnetDefaultRoute,
		SubnetNetworkMaskLen:            o.SubnetNetworkMaskLen,
		SubnetNetworkAddress:            o.SubnetNetworkAddress,
		SubnetBandWidthMbps:             o.SubnetBandWidthMbps,
		PacketFilterID:                  o.PacketFilterID,
		PacketFilterName:                o.PacketFilterName,
		PacketFilterRequiredHostVersion: o.PacketFilterRequiredHostVersion,
		UpstreamType:                    o.UpstreamType,
	}
}

// GetID returns value of ID
func (o *InterfaceView) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *InterfaceView) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *InterfaceView) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *InterfaceView) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *InterfaceView) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *InterfaceView) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetMACAddress returns value of MACAddress
func (o *InterfaceView) GetMACAddress() string {
	return o.MACAddress
}

// SetMACAddress sets value to MACAddress
func (o *InterfaceView) SetMACAddress(v string) {
	o.MACAddress = v
}

// GetIPAddress returns value of IPAddress
func (o *InterfaceView) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *InterfaceView) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetUserIPAddress returns value of UserIPAddress
func (o *InterfaceView) GetUserIPAddress() string {
	return o.UserIPAddress
}

// SetUserIPAddress sets value to UserIPAddress
func (o *InterfaceView) SetUserIPAddress(v string) {
	o.UserIPAddress = v
}

// GetHostName returns value of HostName
func (o *InterfaceView) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *InterfaceView) SetHostName(v string) {
	o.HostName = v
}

// GetSwitchID returns value of SwitchID
func (o *InterfaceView) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *InterfaceView) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetSwitchName returns value of SwitchName
func (o *InterfaceView) GetSwitchName() string {
	return o.SwitchName
}

// SetSwitchName sets value to SwitchName
func (o *InterfaceView) SetSwitchName(v string) {
	o.SwitchName = v
}

// GetSwitchScope returns value of SwitchScope
func (o *InterfaceView) GetSwitchScope() types.EScope {
	return o.SwitchScope
}

// SetSwitchScope sets value to SwitchScope
func (o *InterfaceView) SetSwitchScope(v types.EScope) {
	o.SwitchScope = v
}

// GetUserSubnetDefaultRoute returns value of UserSubnetDefaultRoute
func (o *InterfaceView) GetUserSubnetDefaultRoute() string {
	return o.UserSubnetDefaultRoute
}

// SetUserSubnetDefaultRoute sets value to UserSubnetDefaultRoute
func (o *InterfaceView) SetUserSubnetDefaultRoute(v string) {
	o.UserSubnetDefaultRoute = v
}

// GetUserSubnetNetworkMaskLen returns value of UserSubnetNetworkMaskLen
func (o *InterfaceView) GetUserSubnetNetworkMaskLen() int {
	return o.UserSubnetNetworkMaskLen
}

// SetUserSubnetNetworkMaskLen sets value to UserSubnetNetworkMaskLen
func (o *InterfaceView) SetUserSubnetNetworkMaskLen(v int) {
	o.UserSubnetNetworkMaskLen = v
}

// GetSubnetDefaultRoute returns value of SubnetDefaultRoute
func (o *InterfaceView) GetSubnetDefaultRoute() string {
	return o.SubnetDefaultRoute
}

// SetSubnetDefaultRoute sets value to SubnetDefaultRoute
func (o *InterfaceView) SetSubnetDefaultRoute(v string) {
	o.SubnetDefaultRoute = v
}

// GetSubnetNetworkMaskLen returns value of SubnetNetworkMaskLen
func (o *InterfaceView) GetSubnetNetworkMaskLen() int {
	return o.SubnetNetworkMaskLen
}

// SetSubnetNetworkMaskLen sets value to SubnetNetworkMaskLen
func (o *InterfaceView) SetSubnetNetworkMaskLen(v int) {
	o.SubnetNetworkMaskLen = v
}

// GetSubnetNetworkAddress returns value of SubnetNetworkAddress
func (o *InterfaceView) GetSubnetNetworkAddress() string {
	return o.SubnetNetworkAddress
}

// SetSubnetNetworkAddress sets value to SubnetNetworkAddress
func (o *InterfaceView) SetSubnetNetworkAddress(v string) {
	o.SubnetNetworkAddress = v
}

// GetSubnetBandWidthMbps returns value of SubnetBandWidthMbps
func (o *InterfaceView) GetSubnetBandWidthMbps() int {
	return o.SubnetBandWidthMbps
}

// SetSubnetBandWidthMbps sets value to SubnetBandWidthMbps
func (o *InterfaceView) SetSubnetBandWidthMbps(v int) {
	o.SubnetBandWidthMbps = v
}

// GetPacketFilterID returns value of PacketFilterID
func (o *InterfaceView) GetPacketFilterID() string {
	return o.PacketFilterID
}

// SetPacketFilterID sets value to PacketFilterID
func (o *InterfaceView) SetPacketFilterID(v string) {
	o.PacketFilterID = v
}

// GetPacketFilterName returns value of PacketFilterName
func (o *InterfaceView) GetPacketFilterName() string {
	return o.PacketFilterName
}

// SetPacketFilterName sets value to PacketFilterName
func (o *InterfaceView) SetPacketFilterName(v string) {
	o.PacketFilterName = v
}

// GetPacketFilterRequiredHostVersion returns value of PacketFilterRequiredHostVersion
func (o *InterfaceView) GetPacketFilterRequiredHostVersion() types.StringNumber {
	return o.PacketFilterRequiredHostVersion
}

// SetPacketFilterRequiredHostVersion sets value to PacketFilterRequiredHostVersion
func (o *InterfaceView) SetPacketFilterRequiredHostVersion(v types.StringNumber) {
	o.PacketFilterRequiredHostVersion = v
}

// GetUpstreamType returns value of UpstreamType
func (o *InterfaceView) GetUpstreamType() types.EUpstreamNetworkType {
	return o.UpstreamType
}

// SetUpstreamType sets value to UpstreamType
func (o *InterfaceView) SetUpstreamType(v types.EUpstreamNetworkType) {
	o.UpstreamType = v
}

/*************************************************
* DatabaseCreateRequest
*************************************************/

// DatabaseCreateRequest represents API parameter/response structure
type DatabaseCreateRequest struct {
	PlanID             types.ID                    `mapconv:"Remark.Plan.ID/Plan.ID"`
	SwitchID           types.ID                    `mapconv:"Remark.Switch.ID"`
	IPAddresses        []string                    `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
	NetworkMaskLen     int                         `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute       string                      `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	Conf               *DatabaseRemarkDBConfCommon `mapconv:"Remark.DBConf.Common,recursive"`
	SourceID           types.ID                    `mapconv:"Remark.SourceAppliance.ID"`
	CommonSetting      *DatabaseSettingCommon      `mapconv:"Settings.DBConf.Common,recursive"`
	BackupSetting      *DatabaseSettingBackup      `mapconv:"Settings.DBConf.Backup,recursive"`
	ReplicationSetting *DatabaseReplicationSetting `mapconv:"Settings.DBConf.Replication,recursive"`
	Name               string                      `validate:"required"`
	Description        string                      `validate:"min=0,max=512"`
	Tags               types.Tags
	IconID             types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *DatabaseCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseCreateRequest) setDefaults() interface{} {
	return &struct {
		PlanID             types.ID                    `mapconv:"Remark.Plan.ID/Plan.ID"`
		SwitchID           types.ID                    `mapconv:"Remark.Switch.ID"`
		IPAddresses        []string                    `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
		NetworkMaskLen     int                         `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
		DefaultRoute       string                      `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
		Conf               *DatabaseRemarkDBConfCommon `mapconv:"Remark.DBConf.Common,recursive"`
		SourceID           types.ID                    `mapconv:"Remark.SourceAppliance.ID"`
		CommonSetting      *DatabaseSettingCommon      `mapconv:"Settings.DBConf.Common,recursive"`
		BackupSetting      *DatabaseSettingBackup      `mapconv:"Settings.DBConf.Backup,recursive"`
		ReplicationSetting *DatabaseReplicationSetting `mapconv:"Settings.DBConf.Replication,recursive"`
		Name               string                      `validate:"required"`
		Description        string                      `validate:"min=0,max=512"`
		Tags               types.Tags
		IconID             types.ID `mapconv:"Icon.ID"`
		Class              string
	}{
		PlanID:             o.PlanID,
		SwitchID:           o.SwitchID,
		IPAddresses:        o.IPAddresses,
		NetworkMaskLen:     o.NetworkMaskLen,
		DefaultRoute:       o.DefaultRoute,
		Conf:               o.Conf,
		SourceID:           o.SourceID,
		CommonSetting:      o.CommonSetting,
		BackupSetting:      o.BackupSetting,
		ReplicationSetting: o.ReplicationSetting,
		Name:               o.Name,
		Description:        o.Description,
		Tags:               o.Tags,
		IconID:             o.IconID,
		Class:              "database",
	}
}

// GetPlanID returns value of PlanID
func (o *DatabaseCreateRequest) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *DatabaseCreateRequest) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetSwitchID returns value of SwitchID
func (o *DatabaseCreateRequest) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *DatabaseCreateRequest) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetIPAddresses returns value of IPAddresses
func (o *DatabaseCreateRequest) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *DatabaseCreateRequest) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *DatabaseCreateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *DatabaseCreateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *DatabaseCreateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *DatabaseCreateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetConf returns value of Conf
func (o *DatabaseCreateRequest) GetConf() *DatabaseRemarkDBConfCommon {
	return o.Conf
}

// SetConf sets value to Conf
func (o *DatabaseCreateRequest) SetConf(v *DatabaseRemarkDBConfCommon) {
	o.Conf = v
}

// GetSourceID returns value of SourceID
func (o *DatabaseCreateRequest) GetSourceID() types.ID {
	return o.SourceID
}

// SetSourceID sets value to SourceID
func (o *DatabaseCreateRequest) SetSourceID(v types.ID) {
	o.SourceID = v
}

// GetCommonSetting returns value of CommonSetting
func (o *DatabaseCreateRequest) GetCommonSetting() *DatabaseSettingCommon {
	return o.CommonSetting
}

// SetCommonSetting sets value to CommonSetting
func (o *DatabaseCreateRequest) SetCommonSetting(v *DatabaseSettingCommon) {
	o.CommonSetting = v
}

// GetBackupSetting returns value of BackupSetting
func (o *DatabaseCreateRequest) GetBackupSetting() *DatabaseSettingBackup {
	return o.BackupSetting
}

// SetBackupSetting sets value to BackupSetting
func (o *DatabaseCreateRequest) SetBackupSetting(v *DatabaseSettingBackup) {
	o.BackupSetting = v
}

// GetReplicationSetting returns value of ReplicationSetting
func (o *DatabaseCreateRequest) GetReplicationSetting() *DatabaseReplicationSetting {
	return o.ReplicationSetting
}

// SetReplicationSetting sets value to ReplicationSetting
func (o *DatabaseCreateRequest) SetReplicationSetting(v *DatabaseReplicationSetting) {
	o.ReplicationSetting = v
}

// GetName returns value of Name
func (o *DatabaseCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DatabaseCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *DatabaseCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DatabaseCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DatabaseCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DatabaseCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *DatabaseCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *DatabaseCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *DatabaseCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *DatabaseCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *DatabaseCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DatabaseCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* DatabaseUpdateRequest
*************************************************/

// DatabaseUpdateRequest represents API parameter/response structure
type DatabaseUpdateRequest struct {
	CommonSetting      *DatabaseSettingCommonUpdate `mapconv:"Settings.DBConf.Common,recursive"`
	BackupSetting      *DatabaseSettingBackup       `mapconv:"Settings.DBConf.Backup,recursive"`
	ReplicationSetting *DatabaseReplicationSetting  `mapconv:"Settings.DBConf.Replication,recursive"`
	Name               string                       `validate:"required"`
	Description        string                       `validate:"min=0,max=512"`
	Tags               types.Tags
	IconID             types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *DatabaseUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseUpdateRequest) setDefaults() interface{} {
	return &struct {
		CommonSetting      *DatabaseSettingCommonUpdate `mapconv:"Settings.DBConf.Common,recursive"`
		BackupSetting      *DatabaseSettingBackup       `mapconv:"Settings.DBConf.Backup,recursive"`
		ReplicationSetting *DatabaseReplicationSetting  `mapconv:"Settings.DBConf.Replication,recursive"`
		Name               string                       `validate:"required"`
		Description        string                       `validate:"min=0,max=512"`
		Tags               types.Tags
		IconID             types.ID `mapconv:"Icon.ID"`
	}{
		CommonSetting:      o.CommonSetting,
		BackupSetting:      o.BackupSetting,
		ReplicationSetting: o.ReplicationSetting,
		Name:               o.Name,
		Description:        o.Description,
		Tags:               o.Tags,
		IconID:             o.IconID,
	}
}

// GetCommonSetting returns value of CommonSetting
func (o *DatabaseUpdateRequest) GetCommonSetting() *DatabaseSettingCommonUpdate {
	return o.CommonSetting
}

// SetCommonSetting sets value to CommonSetting
func (o *DatabaseUpdateRequest) SetCommonSetting(v *DatabaseSettingCommonUpdate) {
	o.CommonSetting = v
}

// GetBackupSetting returns value of BackupSetting
func (o *DatabaseUpdateRequest) GetBackupSetting() *DatabaseSettingBackup {
	return o.BackupSetting
}

// SetBackupSetting sets value to BackupSetting
func (o *DatabaseUpdateRequest) SetBackupSetting(v *DatabaseSettingBackup) {
	o.BackupSetting = v
}

// GetReplicationSetting returns value of ReplicationSetting
func (o *DatabaseUpdateRequest) GetReplicationSetting() *DatabaseReplicationSetting {
	return o.ReplicationSetting
}

// SetReplicationSetting sets value to ReplicationSetting
func (o *DatabaseUpdateRequest) SetReplicationSetting(v *DatabaseReplicationSetting) {
	o.ReplicationSetting = v
}

// GetName returns value of Name
func (o *DatabaseUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DatabaseUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *DatabaseUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DatabaseUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DatabaseUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DatabaseUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *DatabaseUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *DatabaseUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *DatabaseUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *DatabaseUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *DatabaseUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DatabaseUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* DatabaseSettingCommonUpdate
*************************************************/

// DatabaseSettingCommonUpdate represents API parameter/response structure
type DatabaseSettingCommonUpdate struct {
	WebUI         bool
	ServicePort   int
	SourceNetwork []string
	DefaultUser   string
	UserPassword  string
}

// Validate validates by field tags
func (o *DatabaseSettingCommonUpdate) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseSettingCommonUpdate) setDefaults() interface{} {
	return &struct {
		WebUI         bool
		ServicePort   int
		SourceNetwork []string
		DefaultUser   string
		UserPassword  string
	}{
		WebUI:         o.WebUI,
		ServicePort:   o.ServicePort,
		SourceNetwork: o.SourceNetwork,
		DefaultUser:   o.DefaultUser,
		UserPassword:  o.UserPassword,
	}
}

// GetWebUI returns value of WebUI
func (o *DatabaseSettingCommonUpdate) GetWebUI() bool {
	return o.WebUI
}

// SetWebUI sets value to WebUI
func (o *DatabaseSettingCommonUpdate) SetWebUI(v bool) {
	o.WebUI = v
}

// GetServicePort returns value of ServicePort
func (o *DatabaseSettingCommonUpdate) GetServicePort() int {
	return o.ServicePort
}

// SetServicePort sets value to ServicePort
func (o *DatabaseSettingCommonUpdate) SetServicePort(v int) {
	o.ServicePort = v
}

// GetSourceNetwork returns value of SourceNetwork
func (o *DatabaseSettingCommonUpdate) GetSourceNetwork() []string {
	return o.SourceNetwork
}

// SetSourceNetwork sets value to SourceNetwork
func (o *DatabaseSettingCommonUpdate) SetSourceNetwork(v []string) {
	o.SourceNetwork = v
}

// GetDefaultUser returns value of DefaultUser
func (o *DatabaseSettingCommonUpdate) GetDefaultUser() string {
	return o.DefaultUser
}

// SetDefaultUser sets value to DefaultUser
func (o *DatabaseSettingCommonUpdate) SetDefaultUser(v string) {
	o.DefaultUser = v
}

// GetUserPassword returns value of UserPassword
func (o *DatabaseSettingCommonUpdate) GetUserPassword() string {
	return o.UserPassword
}

// SetUserPassword sets value to UserPassword
func (o *DatabaseSettingCommonUpdate) SetUserPassword(v string) {
	o.UserPassword = v
}

/*************************************************
* ShutdownOption
*************************************************/

// ShutdownOption represents API parameter/response structure
type ShutdownOption struct {
	Force bool
}

// Validate validates by field tags
func (o *ShutdownOption) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ShutdownOption) setDefaults() interface{} {
	return &struct {
		Force bool
	}{
		Force: o.Force,
	}
}

// GetForce returns value of Force
func (o *ShutdownOption) GetForce() bool {
	return o.Force
}

// SetForce sets value to Force
func (o *ShutdownOption) SetForce(v bool) {
	o.Force = v
}

/*************************************************
* CPUTimeActivity
*************************************************/

// CPUTimeActivity represents API parameter/response structure
type CPUTimeActivity struct {
	Values []*MonitorCPUTimeValue `mapconv:"[]CPU"`
}

// Validate validates by field tags
func (o *CPUTimeActivity) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *CPUTimeActivity) setDefaults() interface{} {
	return &struct {
		Values []*MonitorCPUTimeValue `mapconv:"[]CPU"`
	}{
		Values: o.Values,
	}
}

// GetValues returns value of Values
func (o *CPUTimeActivity) GetValues() []*MonitorCPUTimeValue {
	return o.Values
}

// SetValues sets value to Values
func (o *CPUTimeActivity) SetValues(v []*MonitorCPUTimeValue) {
	o.Values = v
}

/*************************************************
* MonitorCPUTimeValue
*************************************************/

// MonitorCPUTimeValue represents API parameter/response structure
type MonitorCPUTimeValue struct {
	Time    time.Time `json:",omitempty" mapconv:",omitempty"`
	CPUTime float64   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorCPUTimeValue) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorCPUTimeValue) setDefaults() interface{} {
	return &struct {
		Time    time.Time `json:",omitempty" mapconv:",omitempty"`
		CPUTime float64   `json:",omitempty" mapconv:",omitempty"`
	}{
		Time:    o.Time,
		CPUTime: o.CPUTime,
	}
}

// GetTime returns value of Time
func (o *MonitorCPUTimeValue) GetTime() time.Time {
	return o.Time
}

// SetTime sets value to Time
func (o *MonitorCPUTimeValue) SetTime(v time.Time) {
	o.Time = v
}

// GetCPUTime returns value of CPUTime
func (o *MonitorCPUTimeValue) GetCPUTime() float64 {
	return o.CPUTime
}

// SetCPUTime sets value to CPUTime
func (o *MonitorCPUTimeValue) SetCPUTime(v float64) {
	o.CPUTime = v
}

/*************************************************
* MonitorCondition
*************************************************/

// MonitorCondition represents API parameter/response structure
type MonitorCondition struct {
	Start time.Time `json:",omitempty"`
	End   time.Time `json:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorCondition) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorCondition) setDefaults() interface{} {
	return &struct {
		Start time.Time `json:",omitempty"`
		End   time.Time `json:",omitempty"`
	}{
		Start: o.Start,
		End:   o.End,
	}
}

// GetStart returns value of Start
func (o *MonitorCondition) GetStart() time.Time {
	return o.Start
}

// SetStart sets value to Start
func (o *MonitorCondition) SetStart(v time.Time) {
	o.Start = v
}

// GetEnd returns value of End
func (o *MonitorCondition) GetEnd() time.Time {
	return o.End
}

// SetEnd sets value to End
func (o *MonitorCondition) SetEnd(v time.Time) {
	o.End = v
}

/*************************************************
* DiskActivity
*************************************************/

// DiskActivity represents API parameter/response structure
type DiskActivity struct {
	Values []*MonitorDiskValue `mapconv:"[]Disk"`
}

// Validate validates by field tags
func (o *DiskActivity) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskActivity) setDefaults() interface{} {
	return &struct {
		Values []*MonitorDiskValue `mapconv:"[]Disk"`
	}{
		Values: o.Values,
	}
}

// GetValues returns value of Values
func (o *DiskActivity) GetValues() []*MonitorDiskValue {
	return o.Values
}

// SetValues sets value to Values
func (o *DiskActivity) SetValues(v []*MonitorDiskValue) {
	o.Values = v
}

/*************************************************
* MonitorDiskValue
*************************************************/

// MonitorDiskValue represents API parameter/response structure
type MonitorDiskValue struct {
	Time  time.Time `json:",omitempty" mapconv:",omitempty"`
	Read  float64   `json:",omitempty" mapconv:",omitempty"`
	Write float64   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorDiskValue) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorDiskValue) setDefaults() interface{} {
	return &struct {
		Time  time.Time `json:",omitempty" mapconv:",omitempty"`
		Read  float64   `json:",omitempty" mapconv:",omitempty"`
		Write float64   `json:",omitempty" mapconv:",omitempty"`
	}{
		Time:  o.Time,
		Read:  o.Read,
		Write: o.Write,
	}
}

// GetTime returns value of Time
func (o *MonitorDiskValue) GetTime() time.Time {
	return o.Time
}

// SetTime sets value to Time
func (o *MonitorDiskValue) SetTime(v time.Time) {
	o.Time = v
}

// GetRead returns value of Read
func (o *MonitorDiskValue) GetRead() float64 {
	return o.Read
}

// SetRead sets value to Read
func (o *MonitorDiskValue) SetRead(v float64) {
	o.Read = v
}

// GetWrite returns value of Write
func (o *MonitorDiskValue) GetWrite() float64 {
	return o.Write
}

// SetWrite sets value to Write
func (o *MonitorDiskValue) SetWrite(v float64) {
	o.Write = v
}

/*************************************************
* InterfaceActivity
*************************************************/

// InterfaceActivity represents API parameter/response structure
type InterfaceActivity struct {
	Values []*MonitorInterfaceValue `mapconv:"[]Interface"`
}

// Validate validates by field tags
func (o *InterfaceActivity) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InterfaceActivity) setDefaults() interface{} {
	return &struct {
		Values []*MonitorInterfaceValue `mapconv:"[]Interface"`
	}{
		Values: o.Values,
	}
}

// GetValues returns value of Values
func (o *InterfaceActivity) GetValues() []*MonitorInterfaceValue {
	return o.Values
}

// SetValues sets value to Values
func (o *InterfaceActivity) SetValues(v []*MonitorInterfaceValue) {
	o.Values = v
}

/*************************************************
* MonitorInterfaceValue
*************************************************/

// MonitorInterfaceValue represents API parameter/response structure
type MonitorInterfaceValue struct {
	Time    time.Time `json:",omitempty" mapconv:",omitempty"`
	Receive float64   `json:",omitempty" mapconv:",omitempty"`
	Send    float64   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorInterfaceValue) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorInterfaceValue) setDefaults() interface{} {
	return &struct {
		Time    time.Time `json:",omitempty" mapconv:",omitempty"`
		Receive float64   `json:",omitempty" mapconv:",omitempty"`
		Send    float64   `json:",omitempty" mapconv:",omitempty"`
	}{
		Time:    o.Time,
		Receive: o.Receive,
		Send:    o.Send,
	}
}

// GetTime returns value of Time
func (o *MonitorInterfaceValue) GetTime() time.Time {
	return o.Time
}

// SetTime sets value to Time
func (o *MonitorInterfaceValue) SetTime(v time.Time) {
	o.Time = v
}

// GetReceive returns value of Receive
func (o *MonitorInterfaceValue) GetReceive() float64 {
	return o.Receive
}

// SetReceive sets value to Receive
func (o *MonitorInterfaceValue) SetReceive(v float64) {
	o.Receive = v
}

// GetSend returns value of Send
func (o *MonitorInterfaceValue) GetSend() float64 {
	return o.Send
}

// SetSend sets value to Send
func (o *MonitorInterfaceValue) SetSend(v float64) {
	o.Send = v
}

/*************************************************
* DatabaseActivity
*************************************************/

// DatabaseActivity represents API parameter/response structure
type DatabaseActivity struct {
	Values []*MonitorDatabaseValue `mapconv:"[]Database"`
}

// Validate validates by field tags
func (o *DatabaseActivity) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseActivity) setDefaults() interface{} {
	return &struct {
		Values []*MonitorDatabaseValue `mapconv:"[]Database"`
	}{
		Values: o.Values,
	}
}

// GetValues returns value of Values
func (o *DatabaseActivity) GetValues() []*MonitorDatabaseValue {
	return o.Values
}

// SetValues sets value to Values
func (o *DatabaseActivity) SetValues(v []*MonitorDatabaseValue) {
	o.Values = v
}

/*************************************************
* MonitorDatabaseValue
*************************************************/

// MonitorDatabaseValue represents API parameter/response structure
type MonitorDatabaseValue struct {
	Time              time.Time `json:",omitempty" mapconv:",omitempty"`
	TotalMemorySize   float64   `json:",omitempty" mapconv:",omitempty"`
	UsedMemorySize    float64   `json:",omitempty" mapconv:",omitempty"`
	TotalDisk1Size    float64   `json:",omitempty" mapconv:",omitempty"`
	UsedDisk1Size     float64   `json:",omitempty" mapconv:",omitempty"`
	TotalDisk2Size    float64   `json:",omitempty" mapconv:",omitempty"`
	UsedDisk2Size     float64   `json:",omitempty" mapconv:",omitempty"`
	BinlogUsedSizeKiB float64   `json:",omitempty" mapconv:",omitempty"`
	DelayTimeSec      float64   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorDatabaseValue) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorDatabaseValue) setDefaults() interface{} {
	return &struct {
		Time              time.Time `json:",omitempty" mapconv:",omitempty"`
		TotalMemorySize   float64   `json:",omitempty" mapconv:",omitempty"`
		UsedMemorySize    float64   `json:",omitempty" mapconv:",omitempty"`
		TotalDisk1Size    float64   `json:",omitempty" mapconv:",omitempty"`
		UsedDisk1Size     float64   `json:",omitempty" mapconv:",omitempty"`
		TotalDisk2Size    float64   `json:",omitempty" mapconv:",omitempty"`
		UsedDisk2Size     float64   `json:",omitempty" mapconv:",omitempty"`
		BinlogUsedSizeKiB float64   `json:",omitempty" mapconv:",omitempty"`
		DelayTimeSec      float64   `json:",omitempty" mapconv:",omitempty"`
	}{
		Time:              o.Time,
		TotalMemorySize:   o.TotalMemorySize,
		UsedMemorySize:    o.UsedMemorySize,
		TotalDisk1Size:    o.TotalDisk1Size,
		UsedDisk1Size:     o.UsedDisk1Size,
		TotalDisk2Size:    o.TotalDisk2Size,
		UsedDisk2Size:     o.UsedDisk2Size,
		BinlogUsedSizeKiB: o.BinlogUsedSizeKiB,
		DelayTimeSec:      o.DelayTimeSec,
	}
}

// GetTime returns value of Time
func (o *MonitorDatabaseValue) GetTime() time.Time {
	return o.Time
}

// SetTime sets value to Time
func (o *MonitorDatabaseValue) SetTime(v time.Time) {
	o.Time = v
}

// GetTotalMemorySize  returns value of TotalMemorySize
func (o *MonitorDatabaseValue) GetTotalMemorySize() float64 {
	return o.TotalMemorySize
}

// SetTotalMemorySize  sets value to TotalMemorySize
func (o *MonitorDatabaseValue) SetTotalMemorySize(v float64) {
	o.TotalMemorySize = v
}

// GetUsedMemorySize returns value of UsedMemorySize
func (o *MonitorDatabaseValue) GetUsedMemorySize() float64 {
	return o.UsedMemorySize
}

// SetUsedMemorySize sets value to UsedMemorySize
func (o *MonitorDatabaseValue) SetUsedMemorySize(v float64) {
	o.UsedMemorySize = v
}

// GetTotalDisk1Size returns value of TotalDisk1Size
func (o *MonitorDatabaseValue) GetTotalDisk1Size() float64 {
	return o.TotalDisk1Size
}

// SetTotalDisk1Size sets value to TotalDisk1Size
func (o *MonitorDatabaseValue) SetTotalDisk1Size(v float64) {
	o.TotalDisk1Size = v
}

// GetUsedDisk1Size returns value of UsedDisk1Size
func (o *MonitorDatabaseValue) GetUsedDisk1Size() float64 {
	return o.UsedDisk1Size
}

// SetUsedDisk1Size sets value to UsedDisk1Size
func (o *MonitorDatabaseValue) SetUsedDisk1Size(v float64) {
	o.UsedDisk1Size = v
}

// GetTotalDisk2Size returns value of TotalDisk2Size
func (o *MonitorDatabaseValue) GetTotalDisk2Size() float64 {
	return o.TotalDisk2Size
}

// SetTotalDisk2Size sets value to TotalDisk2Size
func (o *MonitorDatabaseValue) SetTotalDisk2Size(v float64) {
	o.TotalDisk2Size = v
}

// GetUsedDisk2Size returns value of UsedDisk2Size
func (o *MonitorDatabaseValue) GetUsedDisk2Size() float64 {
	return o.UsedDisk2Size
}

// SetUsedDisk2Size sets value to UsedDisk2Size
func (o *MonitorDatabaseValue) SetUsedDisk2Size(v float64) {
	o.UsedDisk2Size = v
}

// GetBinlogUsedSizeKiB returns value of BinlogUsedSizeKiB
func (o *MonitorDatabaseValue) GetBinlogUsedSizeKiB() float64 {
	return o.BinlogUsedSizeKiB
}

// SetBinlogUsedSizeKiB sets value to BinlogUsedSizeKiB
func (o *MonitorDatabaseValue) SetBinlogUsedSizeKiB(v float64) {
	o.BinlogUsedSizeKiB = v
}

// GetDelayTimeSec returns value of DelayTimeSec
func (o *MonitorDatabaseValue) GetDelayTimeSec() float64 {
	return o.DelayTimeSec
}

// SetDelayTimeSec sets value to DelayTimeSec
func (o *MonitorDatabaseValue) SetDelayTimeSec(v float64) {
	o.DelayTimeSec = v
}

/*************************************************
* DatabaseStatus
*************************************************/

// DatabaseStatus represents API parameter/response structure
type DatabaseStatus struct {
	Status  types.EServerInstanceStatus `mapconv:"SettingsResponse.Status"`
	IsFatal bool                        `mapconv:"SettingsResponse.IsFatal"`
	Version *DatabaseVersionInfo        `mapconv:"SettingsResponse.DBConf.Version,recursive"`
	Logs    []*DatabaseLog              `mapconv:"SettingsResponse.DBConf.[]Log,recursive"`
	Backups []*DatabaseBackupHistory    `mapconv:"SettingsResponse.DBConf.Backup.[]History,recursive"`
}

// Validate validates by field tags
func (o *DatabaseStatus) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseStatus) setDefaults() interface{} {
	return &struct {
		Status  types.EServerInstanceStatus `mapconv:"SettingsResponse.Status"`
		IsFatal bool                        `mapconv:"SettingsResponse.IsFatal"`
		Version *DatabaseVersionInfo        `mapconv:"SettingsResponse.DBConf.Version,recursive"`
		Logs    []*DatabaseLog              `mapconv:"SettingsResponse.DBConf.[]Log,recursive"`
		Backups []*DatabaseBackupHistory    `mapconv:"SettingsResponse.DBConf.Backup.[]History,recursive"`
	}{
		Status:  o.Status,
		IsFatal: o.IsFatal,
		Version: o.Version,
		Logs:    o.Logs,
		Backups: o.Backups,
	}
}

// GetStatus returns value of Status
func (o *DatabaseStatus) GetStatus() types.EServerInstanceStatus {
	return o.Status
}

// SetStatus sets value to Status
func (o *DatabaseStatus) SetStatus(v types.EServerInstanceStatus) {
	o.Status = v
}

// GetIsFatal returns value of IsFatal
func (o *DatabaseStatus) GetIsFatal() bool {
	return o.IsFatal
}

// SetIsFatal sets value to IsFatal
func (o *DatabaseStatus) SetIsFatal(v bool) {
	o.IsFatal = v
}

// GetVersion returns value of Version
func (o *DatabaseStatus) GetVersion() *DatabaseVersionInfo {
	return o.Version
}

// SetVersion sets value to Version
func (o *DatabaseStatus) SetVersion(v *DatabaseVersionInfo) {
	o.Version = v
}

// GetLogs returns value of Logs
func (o *DatabaseStatus) GetLogs() []*DatabaseLog {
	return o.Logs
}

// SetLogs sets value to Logs
func (o *DatabaseStatus) SetLogs(v []*DatabaseLog) {
	o.Logs = v
}

// GetBackups returns value of Backups
func (o *DatabaseStatus) GetBackups() []*DatabaseBackupHistory {
	return o.Backups
}

// SetBackups sets value to Backups
func (o *DatabaseStatus) SetBackups(v []*DatabaseBackupHistory) {
	o.Backups = v
}

/*************************************************
* DatabaseVersionInfo
*************************************************/

// DatabaseVersionInfo represents API parameter/response structure
type DatabaseVersionInfo struct {
	LastModified string
	CommitHash   string
	Status       string
	Tag          string
	Expire       string
}

// Validate validates by field tags
func (o *DatabaseVersionInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseVersionInfo) setDefaults() interface{} {
	return &struct {
		LastModified string
		CommitHash   string
		Status       string
		Tag          string
		Expire       string
	}{
		LastModified: o.LastModified,
		CommitHash:   o.CommitHash,
		Status:       o.Status,
		Tag:          o.Tag,
		Expire:       o.Expire,
	}
}

// GetLastModified returns value of LastModified
func (o *DatabaseVersionInfo) GetLastModified() string {
	return o.LastModified
}

// SetLastModified sets value to LastModified
func (o *DatabaseVersionInfo) SetLastModified(v string) {
	o.LastModified = v
}

// GetCommitHash returns value of CommitHash
func (o *DatabaseVersionInfo) GetCommitHash() string {
	return o.CommitHash
}

// SetCommitHash sets value to CommitHash
func (o *DatabaseVersionInfo) SetCommitHash(v string) {
	o.CommitHash = v
}

// GetStatus returns value of Status
func (o *DatabaseVersionInfo) GetStatus() string {
	return o.Status
}

// SetStatus sets value to Status
func (o *DatabaseVersionInfo) SetStatus(v string) {
	o.Status = v
}

// GetTag returns value of Tag
func (o *DatabaseVersionInfo) GetTag() string {
	return o.Tag
}

// SetTag sets value to Tag
func (o *DatabaseVersionInfo) SetTag(v string) {
	o.Tag = v
}

// GetExpire returns value of Expire
func (o *DatabaseVersionInfo) GetExpire() string {
	return o.Expire
}

// SetExpire sets value to Expire
func (o *DatabaseVersionInfo) SetExpire(v string) {
	o.Expire = v
}

/*************************************************
* DatabaseLog
*************************************************/

// DatabaseLog represents API parameter/response structure
type DatabaseLog struct {
	Name string
	Data string
	Size int
}

// Validate validates by field tags
func (o *DatabaseLog) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseLog) setDefaults() interface{} {
	return &struct {
		Name string
		Data string
		Size int
	}{
		Name: o.Name,
		Data: o.Data,
		Size: o.Size,
	}
}

// GetName returns value of Name
func (o *DatabaseLog) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DatabaseLog) SetName(v string) {
	o.Name = v
}

// GetData returns value of Data
func (o *DatabaseLog) GetData() string {
	return o.Data
}

// SetData sets value to Data
func (o *DatabaseLog) SetData(v string) {
	o.Data = v
}

// GetSize returns value of Size
func (o *DatabaseLog) GetSize() int {
	return o.Size
}

// SetSize sets value to Size
func (o *DatabaseLog) SetSize(v int) {
	o.Size = v
}

/*************************************************
* DatabaseBackupHistory
*************************************************/

// DatabaseBackupHistory represents API parameter/response structure
type DatabaseBackupHistory struct {
	CreatedAt    time.Time
	Availability string
	RecoveredAt  time.Time
	Size         int64
}

// Validate validates by field tags
func (o *DatabaseBackupHistory) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DatabaseBackupHistory) setDefaults() interface{} {
	return &struct {
		CreatedAt    time.Time
		Availability string
		RecoveredAt  time.Time
		Size         int64
	}{
		CreatedAt:    o.CreatedAt,
		Availability: o.Availability,
		RecoveredAt:  o.RecoveredAt,
		Size:         o.Size,
	}
}

// GetCreatedAt returns value of CreatedAt
func (o *DatabaseBackupHistory) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *DatabaseBackupHistory) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetAvailability returns value of Availability
func (o *DatabaseBackupHistory) GetAvailability() string {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *DatabaseBackupHistory) SetAvailability(v string) {
	o.Availability = v
}

// GetRecoveredAt returns value of RecoveredAt
func (o *DatabaseBackupHistory) GetRecoveredAt() time.Time {
	return o.RecoveredAt
}

// SetRecoveredAt sets value to RecoveredAt
func (o *DatabaseBackupHistory) SetRecoveredAt(v time.Time) {
	o.RecoveredAt = v
}

// GetSize returns value of Size
func (o *DatabaseBackupHistory) GetSize() int64 {
	return o.Size
}

// SetSize sets value to Size
func (o *DatabaseBackupHistory) SetSize(v int64) {
	o.Size = v
}

/*************************************************
* Disk
*************************************************/

// Disk represents API parameter/response structure
type Disk struct {
	ID                        types.ID
	Name                      string `validate:"required"`
	Description               string `validate:"min=0,max=512"`
	Tags                      types.Tags
	Availability              types.EAvailability
	Connection                types.EDiskConnection `json:",omitempty" mapconv:",omitempty"`
	ConnectionOrder           int
	ReinstallCount            int
	SizeMB                    int
	MigratedMB                int
	DiskPlanID                types.ID            `mapconv:"Plan.ID"`
	DiskPlanName              string              `mapconv:"Plan.Name"`
	DiskPlanStorageClass      string              `mapconv:"Plan.StorageClass"`
	SourceDiskID              types.ID            `mapconv:"SourceDisk.ID,omitempty"`
	SourceDiskAvailability    types.EAvailability `mapconv:"SourceDisk.Availability,omitempty"`
	SourceArchiveID           types.ID            `mapconv:"SourceArchive.ID,omitempty"`
	SourceArchiveAvailability types.EAvailability `mapconv:"SourceArchive.Availability,omitempty"`
	BundleInfo                *BundleInfo         `json:",omitempty" mapconv:",omitempty,recursive"`
	Storage                   *Storage            `json:",omitempty" mapconv:",omitempty,recursive"`
	ServerID                  types.ID            `mapconv:"Server.ID,omitempty"`
	IconID                    types.ID            `mapconv:"Icon.ID"`
	CreatedAt                 time.Time
	ModifiedAt                time.Time
}

// Validate validates by field tags
func (o *Disk) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Disk) setDefaults() interface{} {
	return &struct {
		ID                        types.ID
		Name                      string `validate:"required"`
		Description               string `validate:"min=0,max=512"`
		Tags                      types.Tags
		Availability              types.EAvailability
		Connection                types.EDiskConnection `json:",omitempty" mapconv:",omitempty"`
		ConnectionOrder           int
		ReinstallCount            int
		SizeMB                    int
		MigratedMB                int
		DiskPlanID                types.ID            `mapconv:"Plan.ID"`
		DiskPlanName              string              `mapconv:"Plan.Name"`
		DiskPlanStorageClass      string              `mapconv:"Plan.StorageClass"`
		SourceDiskID              types.ID            `mapconv:"SourceDisk.ID,omitempty"`
		SourceDiskAvailability    types.EAvailability `mapconv:"SourceDisk.Availability,omitempty"`
		SourceArchiveID           types.ID            `mapconv:"SourceArchive.ID,omitempty"`
		SourceArchiveAvailability types.EAvailability `mapconv:"SourceArchive.Availability,omitempty"`
		BundleInfo                *BundleInfo         `json:",omitempty" mapconv:",omitempty,recursive"`
		Storage                   *Storage            `json:",omitempty" mapconv:",omitempty,recursive"`
		ServerID                  types.ID            `mapconv:"Server.ID,omitempty"`
		IconID                    types.ID            `mapconv:"Icon.ID"`
		CreatedAt                 time.Time
		ModifiedAt                time.Time
	}{
		ID:                        o.ID,
		Name:                      o.Name,
		Description:               o.Description,
		Tags:                      o.Tags,
		Availability:              o.Availability,
		Connection:                o.Connection,
		ConnectionOrder:           o.ConnectionOrder,
		ReinstallCount:            o.ReinstallCount,
		SizeMB:                    o.SizeMB,
		MigratedMB:                o.MigratedMB,
		DiskPlanID:                o.DiskPlanID,
		DiskPlanName:              o.DiskPlanName,
		DiskPlanStorageClass:      o.DiskPlanStorageClass,
		SourceDiskID:              o.SourceDiskID,
		SourceDiskAvailability:    o.SourceDiskAvailability,
		SourceArchiveID:           o.SourceArchiveID,
		SourceArchiveAvailability: o.SourceArchiveAvailability,
		BundleInfo:                o.BundleInfo,
		Storage:                   o.Storage,
		ServerID:                  o.ServerID,
		IconID:                    o.IconID,
		CreatedAt:                 o.CreatedAt,
		ModifiedAt:                o.ModifiedAt,
	}
}

// GetID returns value of ID
func (o *Disk) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Disk) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Disk) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Disk) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Disk) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Disk) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Disk) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Disk) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Disk) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Disk) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Disk) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Disk) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *Disk) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *Disk) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *Disk) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *Disk) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *Disk) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Disk) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetConnection returns value of Connection
func (o *Disk) GetConnection() types.EDiskConnection {
	return o.Connection
}

// SetConnection sets value to Connection
func (o *Disk) SetConnection(v types.EDiskConnection) {
	o.Connection = v
}

// GetConnectionOrder returns value of ConnectionOrder
func (o *Disk) GetConnectionOrder() int {
	return o.ConnectionOrder
}

// SetConnectionOrder sets value to ConnectionOrder
func (o *Disk) SetConnectionOrder(v int) {
	o.ConnectionOrder = v
}

// GetReinstallCount returns value of ReinstallCount
func (o *Disk) GetReinstallCount() int {
	return o.ReinstallCount
}

// SetReinstallCount sets value to ReinstallCount
func (o *Disk) SetReinstallCount(v int) {
	o.ReinstallCount = v
}

// GetSizeMB returns value of SizeMB
func (o *Disk) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *Disk) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB .
func (o *Disk) GetSizeGB() int {
	return accessor.GetSizeGB(o)
}

// SetSizeGB .
func (o *Disk) SetSizeGB(size int) {
	accessor.SetSizeGB(o, size)
}

// GetMigratedMB returns value of MigratedMB
func (o *Disk) GetMigratedMB() int {
	return o.MigratedMB
}

// SetMigratedMB sets value to MigratedMB
func (o *Disk) SetMigratedMB(v int) {
	o.MigratedMB = v
}

// GetMigratedGB .
func (o *Disk) GetMigratedGB() int {
	return accessor.GetMigratedGB(o)
}

// GetDiskPlanID returns value of DiskPlanID
func (o *Disk) GetDiskPlanID() types.ID {
	return o.DiskPlanID
}

// SetDiskPlanID sets value to DiskPlanID
func (o *Disk) SetDiskPlanID(v types.ID) {
	o.DiskPlanID = v
}

// GetDiskPlanName returns value of DiskPlanName
func (o *Disk) GetDiskPlanName() string {
	return o.DiskPlanName
}

// SetDiskPlanName sets value to DiskPlanName
func (o *Disk) SetDiskPlanName(v string) {
	o.DiskPlanName = v
}

// GetDiskPlanStorageClass returns value of DiskPlanStorageClass
func (o *Disk) GetDiskPlanStorageClass() string {
	return o.DiskPlanStorageClass
}

// SetDiskPlanStorageClass sets value to DiskPlanStorageClass
func (o *Disk) SetDiskPlanStorageClass(v string) {
	o.DiskPlanStorageClass = v
}

// GetSourceDiskID returns value of SourceDiskID
func (o *Disk) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *Disk) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceDiskAvailability returns value of SourceDiskAvailability
func (o *Disk) GetSourceDiskAvailability() types.EAvailability {
	return o.SourceDiskAvailability
}

// SetSourceDiskAvailability sets value to SourceDiskAvailability
func (o *Disk) SetSourceDiskAvailability(v types.EAvailability) {
	o.SourceDiskAvailability = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *Disk) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *Disk) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetSourceArchiveAvailability returns value of SourceArchiveAvailability
func (o *Disk) GetSourceArchiveAvailability() types.EAvailability {
	return o.SourceArchiveAvailability
}

// SetSourceArchiveAvailability sets value to SourceArchiveAvailability
func (o *Disk) SetSourceArchiveAvailability(v types.EAvailability) {
	o.SourceArchiveAvailability = v
}

// GetBundleInfo returns value of BundleInfo
func (o *Disk) GetBundleInfo() *BundleInfo {
	return o.BundleInfo
}

// SetBundleInfo sets value to BundleInfo
func (o *Disk) SetBundleInfo(v *BundleInfo) {
	o.BundleInfo = v
}

// GetStorage returns value of Storage
func (o *Disk) GetStorage() *Storage {
	return o.Storage
}

// SetStorage sets value to Storage
func (o *Disk) SetStorage(v *Storage) {
	o.Storage = v
}

// GetServerID returns value of ServerID
func (o *Disk) GetServerID() types.ID {
	return o.ServerID
}

// SetServerID sets value to ServerID
func (o *Disk) SetServerID(v types.ID) {
	o.ServerID = v
}

// GetIconID returns value of IconID
func (o *Disk) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *Disk) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Disk) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Disk) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Disk) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Disk) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

/*************************************************
* DiskCreateRequest
*************************************************/

// DiskCreateRequest represents API parameter/response structure
type DiskCreateRequest struct {
	DiskPlanID      types.ID              `mapconv:"Plan.ID"`
	Connection      types.EDiskConnection `json:",omitempty" mapconv:",omitempty"`
	SourceDiskID    types.ID              `mapconv:"SourceDisk.ID,omitempty"`
	SourceArchiveID types.ID              `mapconv:"SourceArchive.ID,omitempty"`
	ServerID        types.ID              `mapconv:"Server.ID,omitempty"`
	SizeMB          int
	Name            string `validate:"required"`
	Description     string `validate:"min=0,max=512"`
	Tags            types.Tags
	IconID          types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *DiskCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskCreateRequest) setDefaults() interface{} {
	return &struct {
		DiskPlanID      types.ID              `mapconv:"Plan.ID"`
		Connection      types.EDiskConnection `json:",omitempty" mapconv:",omitempty"`
		SourceDiskID    types.ID              `mapconv:"SourceDisk.ID,omitempty"`
		SourceArchiveID types.ID              `mapconv:"SourceArchive.ID,omitempty"`
		ServerID        types.ID              `mapconv:"Server.ID,omitempty"`
		SizeMB          int
		Name            string `validate:"required"`
		Description     string `validate:"min=0,max=512"`
		Tags            types.Tags
		IconID          types.ID `mapconv:"Icon.ID"`
	}{
		DiskPlanID:      o.DiskPlanID,
		Connection:      o.Connection,
		SourceDiskID:    o.SourceDiskID,
		SourceArchiveID: o.SourceArchiveID,
		ServerID:        o.ServerID,
		SizeMB:          o.SizeMB,
		Name:            o.Name,
		Description:     o.Description,
		Tags:            o.Tags,
		IconID:          o.IconID,
	}
}

// GetDiskPlanID returns value of DiskPlanID
func (o *DiskCreateRequest) GetDiskPlanID() types.ID {
	return o.DiskPlanID
}

// SetDiskPlanID sets value to DiskPlanID
func (o *DiskCreateRequest) SetDiskPlanID(v types.ID) {
	o.DiskPlanID = v
}

// GetConnection returns value of Connection
func (o *DiskCreateRequest) GetConnection() types.EDiskConnection {
	return o.Connection
}

// SetConnection sets value to Connection
func (o *DiskCreateRequest) SetConnection(v types.EDiskConnection) {
	o.Connection = v
}

// GetSourceDiskID returns value of SourceDiskID
func (o *DiskCreateRequest) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *DiskCreateRequest) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *DiskCreateRequest) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *DiskCreateRequest) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetServerID returns value of ServerID
func (o *DiskCreateRequest) GetServerID() types.ID {
	return o.ServerID
}

// SetServerID sets value to ServerID
func (o *DiskCreateRequest) SetServerID(v types.ID) {
	o.ServerID = v
}

// GetSizeMB returns value of SizeMB
func (o *DiskCreateRequest) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *DiskCreateRequest) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB .
func (o *DiskCreateRequest) GetSizeGB() int {
	return accessor.GetSizeGB(o)
}

// SetSizeGB .
func (o *DiskCreateRequest) SetSizeGB(size int) {
	accessor.SetSizeGB(o, size)
}

// GetName returns value of Name
func (o *DiskCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DiskCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *DiskCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DiskCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DiskCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DiskCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *DiskCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *DiskCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *DiskCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *DiskCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *DiskCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DiskCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* DiskEditRequest
*************************************************/

// DiskEditRequest represents API parameter/response structure
type DiskEditRequest struct {
	Password            string              `json:",omitempty" mapconv:",omitempty"`
	SSHKey              *DiskEditSSHKey     `json:",omitempty" mapconv:",omitempty,recursive"`
	SSHKeys             []*DiskEditSSHKey   `json:",omitempty" mapconv:"[]SSHKeys,omitempty,recursive"`
	DisablePWAuth       bool                `json:",omitempty" mapconv:",omitempty"`
	EnableDHCP          bool                `json:",omitempty" mapconv:",omitempty"`
	ChangePartitionUUID bool                `json:",omitempty" mapconv:",omitempty"`
	HostName            string              `json:",omitempty" mapconv:",omitempty"`
	Notes               []*DiskEditNote     `json:",omitempty" mapconv:",omitempty,recursive"`
	UserIPAddress       string              `json:",omitempty" mapconv:",omitempty"`
	UserSubnet          *DiskEditUserSubnet `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *DiskEditRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskEditRequest) setDefaults() interface{} {
	return &struct {
		Password            string              `json:",omitempty" mapconv:",omitempty"`
		SSHKey              *DiskEditSSHKey     `json:",omitempty" mapconv:",omitempty,recursive"`
		SSHKeys             []*DiskEditSSHKey   `json:",omitempty" mapconv:"[]SSHKeys,omitempty,recursive"`
		DisablePWAuth       bool                `json:",omitempty" mapconv:",omitempty"`
		EnableDHCP          bool                `json:",omitempty" mapconv:",omitempty"`
		ChangePartitionUUID bool                `json:",omitempty" mapconv:",omitempty"`
		HostName            string              `json:",omitempty" mapconv:",omitempty"`
		Notes               []*DiskEditNote     `json:",omitempty" mapconv:",omitempty,recursive"`
		UserIPAddress       string              `json:",omitempty" mapconv:",omitempty"`
		UserSubnet          *DiskEditUserSubnet `json:",omitempty" mapconv:",omitempty"`
	}{
		Password:            o.Password,
		SSHKey:              o.SSHKey,
		SSHKeys:             o.SSHKeys,
		DisablePWAuth:       o.DisablePWAuth,
		EnableDHCP:          o.EnableDHCP,
		ChangePartitionUUID: o.ChangePartitionUUID,
		HostName:            o.HostName,
		Notes:               o.Notes,
		UserIPAddress:       o.UserIPAddress,
		UserSubnet:          o.UserSubnet,
	}
}

// GetPassword returns value of Password
func (o *DiskEditRequest) GetPassword() string {
	return o.Password
}

// SetPassword sets value to Password
func (o *DiskEditRequest) SetPassword(v string) {
	o.Password = v
}

// GetSSHKey returns value of SSHKey
func (o *DiskEditRequest) GetSSHKey() *DiskEditSSHKey {
	return o.SSHKey
}

// SetSSHKey sets value to SSHKey
func (o *DiskEditRequest) SetSSHKey(v *DiskEditSSHKey) {
	o.SSHKey = v
}

// GetSSHKeys returns value of SSHKeys
func (o *DiskEditRequest) GetSSHKeys() []*DiskEditSSHKey {
	return o.SSHKeys
}

// SetSSHKeys sets value to SSHKeys
func (o *DiskEditRequest) SetSSHKeys(v []*DiskEditSSHKey) {
	o.SSHKeys = v
}

// GetDisablePWAuth returns value of DisablePWAuth
func (o *DiskEditRequest) GetDisablePWAuth() bool {
	return o.DisablePWAuth
}

// SetDisablePWAuth sets value to DisablePWAuth
func (o *DiskEditRequest) SetDisablePWAuth(v bool) {
	o.DisablePWAuth = v
}

// GetEnableDHCP returns value of EnableDHCP
func (o *DiskEditRequest) GetEnableDHCP() bool {
	return o.EnableDHCP
}

// SetEnableDHCP sets value to EnableDHCP
func (o *DiskEditRequest) SetEnableDHCP(v bool) {
	o.EnableDHCP = v
}

// GetChangePartitionUUID returns value of ChangePartitionUUID
func (o *DiskEditRequest) GetChangePartitionUUID() bool {
	return o.ChangePartitionUUID
}

// SetChangePartitionUUID sets value to ChangePartitionUUID
func (o *DiskEditRequest) SetChangePartitionUUID(v bool) {
	o.ChangePartitionUUID = v
}

// GetHostName returns value of HostName
func (o *DiskEditRequest) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *DiskEditRequest) SetHostName(v string) {
	o.HostName = v
}

// GetNotes returns value of Notes
func (o *DiskEditRequest) GetNotes() []*DiskEditNote {
	return o.Notes
}

// SetNotes sets value to Notes
func (o *DiskEditRequest) SetNotes(v []*DiskEditNote) {
	o.Notes = v
}

// GetUserIPAddress returns value of UserIPAddress
func (o *DiskEditRequest) GetUserIPAddress() string {
	return o.UserIPAddress
}

// SetUserIPAddress sets value to UserIPAddress
func (o *DiskEditRequest) SetUserIPAddress(v string) {
	o.UserIPAddress = v
}

// GetUserSubnet returns value of UserSubnet
func (o *DiskEditRequest) GetUserSubnet() *DiskEditUserSubnet {
	return o.UserSubnet
}

// SetUserSubnet sets value to UserSubnet
func (o *DiskEditRequest) SetUserSubnet(v *DiskEditUserSubnet) {
	o.UserSubnet = v
}

/*************************************************
* DiskEditSSHKey
*************************************************/

// DiskEditSSHKey represents API parameter/response structure
type DiskEditSSHKey struct {
	ID        types.ID `json:",omitempty" mapconv:",omitempty"`
	PublicKey string   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *DiskEditSSHKey) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskEditSSHKey) setDefaults() interface{} {
	return &struct {
		ID        types.ID `json:",omitempty" mapconv:",omitempty"`
		PublicKey string   `json:",omitempty" mapconv:",omitempty"`
	}{
		ID:        o.ID,
		PublicKey: o.PublicKey,
	}
}

// GetID returns value of ID
func (o *DiskEditSSHKey) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *DiskEditSSHKey) SetID(v types.ID) {
	o.ID = v
}

// GetPublicKey returns value of PublicKey
func (o *DiskEditSSHKey) GetPublicKey() string {
	return o.PublicKey
}

// SetPublicKey sets value to PublicKey
func (o *DiskEditSSHKey) SetPublicKey(v string) {
	o.PublicKey = v
}

/*************************************************
* DiskEditNote
*************************************************/

// DiskEditNote represents API parameter/response structure
type DiskEditNote struct {
	ID        types.ID               `json:",omitempty" mapconv:",omitempty"`
	Variables map[string]interface{} `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *DiskEditNote) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskEditNote) setDefaults() interface{} {
	return &struct {
		ID        types.ID               `json:",omitempty" mapconv:",omitempty"`
		Variables map[string]interface{} `json:",omitempty" mapconv:",omitempty"`
	}{
		ID:        o.ID,
		Variables: o.Variables,
	}
}

// GetID returns value of ID
func (o *DiskEditNote) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *DiskEditNote) SetID(v types.ID) {
	o.ID = v
}

// GetVariables returns value of Variables
func (o *DiskEditNote) GetVariables() map[string]interface{} {
	return o.Variables
}

// SetVariables sets value to Variables
func (o *DiskEditNote) SetVariables(v map[string]interface{}) {
	o.Variables = v
}

/*************************************************
* DiskEditUserSubnet
*************************************************/

// DiskEditUserSubnet represents API parameter/response structure
type DiskEditUserSubnet struct {
	DefaultRoute   string `json:",omitempty" mapconv:",omitempty"`
	NetworkMaskLen int    `json:",omitempty" mapconv:",omitempty" validate:"min=0,max=32"`
}

// Validate validates by field tags
func (o *DiskEditUserSubnet) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskEditUserSubnet) setDefaults() interface{} {
	return &struct {
		DefaultRoute   string `json:",omitempty" mapconv:",omitempty"`
		NetworkMaskLen int    `json:",omitempty" mapconv:",omitempty" validate:"min=0,max=32"`
	}{
		DefaultRoute:   o.DefaultRoute,
		NetworkMaskLen: o.NetworkMaskLen,
	}
}

// GetDefaultRoute returns value of DefaultRoute
func (o *DiskEditUserSubnet) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *DiskEditUserSubnet) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *DiskEditUserSubnet) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *DiskEditUserSubnet) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

/*************************************************
* DiskInstallRequest
*************************************************/

// DiskInstallRequest represents API parameter/response structure
type DiskInstallRequest struct {
	SourceDiskID    types.ID `mapconv:"SourceDisk.ID,omitempty"`
	SourceArchiveID types.ID `mapconv:"SourceArchive.ID,omitempty"`
	SizeMB          int
}

// Validate validates by field tags
func (o *DiskInstallRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskInstallRequest) setDefaults() interface{} {
	return &struct {
		SourceDiskID    types.ID `mapconv:"SourceDisk.ID,omitempty"`
		SourceArchiveID types.ID `mapconv:"SourceArchive.ID,omitempty"`
		SizeMB          int
	}{
		SourceDiskID:    o.SourceDiskID,
		SourceArchiveID: o.SourceArchiveID,
		SizeMB:          o.SizeMB,
	}
}

// GetSourceDiskID returns value of SourceDiskID
func (o *DiskInstallRequest) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *DiskInstallRequest) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *DiskInstallRequest) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *DiskInstallRequest) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetSizeMB returns value of SizeMB
func (o *DiskInstallRequest) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *DiskInstallRequest) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB .
func (o *DiskInstallRequest) GetSizeGB() int {
	return accessor.GetSizeGB(o)
}

// SetSizeGB .
func (o *DiskInstallRequest) SetSizeGB(size int) {
	accessor.SetSizeGB(o, size)
}

/*************************************************
* DiskUpdateRequest
*************************************************/

// DiskUpdateRequest represents API parameter/response structure
type DiskUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID              `mapconv:"Icon.ID"`
	Connection  types.EDiskConnection `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *DiskUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID              `mapconv:"Icon.ID"`
		Connection  types.EDiskConnection `json:",omitempty" mapconv:",omitempty"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
		Connection:  o.Connection,
	}
}

// GetName returns value of Name
func (o *DiskUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DiskUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *DiskUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DiskUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DiskUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DiskUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *DiskUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *DiskUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *DiskUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *DiskUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *DiskUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DiskUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetConnection returns value of Connection
func (o *DiskUpdateRequest) GetConnection() types.EDiskConnection {
	return o.Connection
}

// SetConnection sets value to Connection
func (o *DiskUpdateRequest) SetConnection(v types.EDiskConnection) {
	o.Connection = v
}

/*************************************************
* DiskPlan
*************************************************/

// DiskPlan represents API parameter/response structure
type DiskPlan struct {
	ID           types.ID
	Name         string `validate:"required"`
	StorageClass string
	Availability types.EAvailability
	Size         []*DiskPlanSizeInfo `mapconv:"[]Size,recursive"`
}

// Validate validates by field tags
func (o *DiskPlan) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskPlan) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		StorageClass string
		Availability types.EAvailability
		Size         []*DiskPlanSizeInfo `mapconv:"[]Size,recursive"`
	}{
		ID:           o.ID,
		Name:         o.Name,
		StorageClass: o.StorageClass,
		Availability: o.Availability,
		Size:         o.Size,
	}
}

// GetID returns value of ID
func (o *DiskPlan) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *DiskPlan) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *DiskPlan) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *DiskPlan) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *DiskPlan) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *DiskPlan) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *DiskPlan) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DiskPlan) SetName(v string) {
	o.Name = v
}

// GetStorageClass returns value of StorageClass
func (o *DiskPlan) GetStorageClass() string {
	return o.StorageClass
}

// SetStorageClass sets value to StorageClass
func (o *DiskPlan) SetStorageClass(v string) {
	o.StorageClass = v
}

// GetAvailability returns value of Availability
func (o *DiskPlan) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *DiskPlan) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetSize returns value of Size
func (o *DiskPlan) GetSize() []*DiskPlanSizeInfo {
	return o.Size
}

// SetSize sets value to Size
func (o *DiskPlan) SetSize(v []*DiskPlanSizeInfo) {
	o.Size = v
}

/*************************************************
* DiskPlanSizeInfo
*************************************************/

// DiskPlanSizeInfo represents API parameter/response structure
type DiskPlanSizeInfo struct {
	Availability  types.EAvailability
	DisplaySize   int
	DisplaySuffix string
	SizeMB        int
}

// Validate validates by field tags
func (o *DiskPlanSizeInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DiskPlanSizeInfo) setDefaults() interface{} {
	return &struct {
		Availability  types.EAvailability
		DisplaySize   int
		DisplaySuffix string
		SizeMB        int
	}{
		Availability:  o.Availability,
		DisplaySize:   o.DisplaySize,
		DisplaySuffix: o.DisplaySuffix,
		SizeMB:        o.SizeMB,
	}
}

// GetAvailability returns value of Availability
func (o *DiskPlanSizeInfo) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *DiskPlanSizeInfo) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetDisplaySize returns value of DisplaySize
func (o *DiskPlanSizeInfo) GetDisplaySize() int {
	return o.DisplaySize
}

// SetDisplaySize sets value to DisplaySize
func (o *DiskPlanSizeInfo) SetDisplaySize(v int) {
	o.DisplaySize = v
}

// GetDisplaySuffix returns value of DisplaySuffix
func (o *DiskPlanSizeInfo) GetDisplaySuffix() string {
	return o.DisplaySuffix
}

// SetDisplaySuffix sets value to DisplaySuffix
func (o *DiskPlanSizeInfo) SetDisplaySuffix(v string) {
	o.DisplaySuffix = v
}

// GetSizeMB returns value of SizeMB
func (o *DiskPlanSizeInfo) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *DiskPlanSizeInfo) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB .
func (o *DiskPlanSizeInfo) GetSizeGB() int {
	return accessor.GetSizeGB(o)
}

// SetSizeGB .
func (o *DiskPlanSizeInfo) SetSizeGB(size int) {
	accessor.SetSizeGB(o, size)
}

/*************************************************
* DNS
*************************************************/

// DNS represents API parameter/response structure
type DNS struct {
	ID             types.ID
	Name           string `validate:"required"`
	Description    string `validate:"min=0,max=512"`
	Tags           types.Tags
	Availability   types.EAvailability
	IconID         types.ID `mapconv:"Icon.ID"`
	CreatedAt      time.Time
	ModifiedAt     time.Time
	Records        []*DNSRecord `mapconv:"Settings.DNS.[]ResourceRecordSets,recursive" validate:"min=0,max=1000"`
	SettingsHash   string
	DNSZone        string   `mapconv:"Status.Zone"`
	DNSNameServers []string `mapconv:"Status.NS"`
}

// Validate validates by field tags
func (o *DNS) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DNS) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		Name           string `validate:"required"`
		Description    string `validate:"min=0,max=512"`
		Tags           types.Tags
		Availability   types.EAvailability
		IconID         types.ID `mapconv:"Icon.ID"`
		CreatedAt      time.Time
		ModifiedAt     time.Time
		Records        []*DNSRecord `mapconv:"Settings.DNS.[]ResourceRecordSets,recursive" validate:"min=0,max=1000"`
		SettingsHash   string
		DNSZone        string   `mapconv:"Status.Zone"`
		DNSNameServers []string `mapconv:"Status.NS"`
	}{
		ID:             o.ID,
		Name:           o.Name,
		Description:    o.Description,
		Tags:           o.Tags,
		Availability:   o.Availability,
		IconID:         o.IconID,
		CreatedAt:      o.CreatedAt,
		ModifiedAt:     o.ModifiedAt,
		Records:        o.Records,
		SettingsHash:   o.SettingsHash,
		DNSZone:        o.DNSZone,
		DNSNameServers: o.DNSNameServers,
	}
}

// GetID returns value of ID
func (o *DNS) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *DNS) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *DNS) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *DNS) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *DNS) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *DNS) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *DNS) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DNS) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *DNS) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DNS) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DNS) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DNS) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *DNS) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *DNS) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *DNS) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *DNS) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *DNS) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *DNS) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetIconID returns value of IconID
func (o *DNS) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DNS) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *DNS) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *DNS) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *DNS) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *DNS) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetRecords returns value of Records
func (o *DNS) GetRecords() []*DNSRecord {
	return o.Records
}

// SetRecords sets value to Records
func (o *DNS) SetRecords(v []*DNSRecord) {
	o.Records = v
}

// GetSettingsHash returns value of SettingsHash
func (o *DNS) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *DNS) SetSettingsHash(v string) {
	o.SettingsHash = v
}

// GetDNSZone returns value of DNSZone
func (o *DNS) GetDNSZone() string {
	return o.DNSZone
}

// SetDNSZone sets value to DNSZone
func (o *DNS) SetDNSZone(v string) {
	o.DNSZone = v
}

// GetDNSNameServers returns value of DNSNameServers
func (o *DNS) GetDNSNameServers() []string {
	return o.DNSNameServers
}

// SetDNSNameServers sets value to DNSNameServers
func (o *DNS) SetDNSNameServers(v []string) {
	o.DNSNameServers = v
}

/*************************************************
* DNSRecord
*************************************************/

// DNSRecord represents API parameter/response structure
type DNSRecord struct {
	Name  string
	Type  types.EDNSRecordType
	RData string
	TTL   int
}

// Validate validates by field tags
func (o *DNSRecord) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DNSRecord) setDefaults() interface{} {
	return &struct {
		Name  string
		Type  types.EDNSRecordType
		RData string
		TTL   int
	}{
		Name:  o.Name,
		Type:  o.Type,
		RData: o.RData,
		TTL:   o.TTL,
	}
}

// GetName returns value of Name
func (o *DNSRecord) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DNSRecord) SetName(v string) {
	o.Name = v
}

// GetType returns value of Type
func (o *DNSRecord) GetType() types.EDNSRecordType {
	return o.Type
}

// SetType sets value to Type
func (o *DNSRecord) SetType(v types.EDNSRecordType) {
	o.Type = v
}

// GetRData returns value of RData
func (o *DNSRecord) GetRData() string {
	return o.RData
}

// SetRData sets value to RData
func (o *DNSRecord) SetRData(v string) {
	o.RData = v
}

// GetTTL returns value of TTL
func (o *DNSRecord) GetTTL() int {
	return o.TTL
}

// SetTTL sets value to TTL
func (o *DNSRecord) SetTTL(v int) {
	o.TTL = v
}

/*************************************************
* DNSCreateRequest
*************************************************/

// DNSCreateRequest represents API parameter/response structure
type DNSCreateRequest struct {
	Name        string       `mapconv:"Name/Status.Zone" validate:"required"`
	Records     []*DNSRecord `mapconv:"Settings.DNS.[]ResourceRecordSets,recursive" validate:"min=0,max=1000"`
	Description string       `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *DNSCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DNSCreateRequest) setDefaults() interface{} {
	return &struct {
		Name        string       `mapconv:"Name/Status.Zone" validate:"required"`
		Records     []*DNSRecord `mapconv:"Settings.DNS.[]ResourceRecordSets,recursive" validate:"min=0,max=1000"`
		Description string       `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
		Class       string   `mapconv:"Provider.Class"`
	}{
		Name:        o.Name,
		Records:     o.Records,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
		Class:       "dns",
	}
}

// GetName returns value of Name
func (o *DNSCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DNSCreateRequest) SetName(v string) {
	o.Name = v
}

// GetRecords returns value of Records
func (o *DNSCreateRequest) GetRecords() []*DNSRecord {
	return o.Records
}

// SetRecords sets value to Records
func (o *DNSCreateRequest) SetRecords(v []*DNSRecord) {
	o.Records = v
}

// GetDescription returns value of Description
func (o *DNSCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DNSCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DNSCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DNSCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *DNSCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *DNSCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *DNSCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *DNSCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *DNSCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DNSCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* DNSUpdateRequest
*************************************************/

// DNSUpdateRequest represents API parameter/response structure
type DNSUpdateRequest struct {
	Records     []*DNSRecord `mapconv:"Settings.DNS.[]ResourceRecordSets,recursive" validate:"min=0,max=1000"`
	Description string       `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *DNSUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *DNSUpdateRequest) setDefaults() interface{} {
	return &struct {
		Records     []*DNSRecord `mapconv:"Settings.DNS.[]ResourceRecordSets,recursive" validate:"min=0,max=1000"`
		Description string       `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		Records:     o.Records,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetRecords returns value of Records
func (o *DNSUpdateRequest) GetRecords() []*DNSRecord {
	return o.Records
}

// SetRecords sets value to Records
func (o *DNSUpdateRequest) SetRecords(v []*DNSRecord) {
	o.Records = v
}

// GetDescription returns value of Description
func (o *DNSUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DNSUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DNSUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DNSUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *DNSUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *DNSUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *DNSUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *DNSUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *DNSUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DNSUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* GSLB
*************************************************/

// GSLB represents API parameter/response structure
type GSLB struct {
	ID                 types.ID
	Name               string `validate:"required"`
	Description        string `validate:"min=0,max=512"`
	Tags               types.Tags
	Availability       types.EAvailability
	IconID             types.ID `mapconv:"Icon.ID"`
	CreatedAt          time.Time
	ModifiedAt         time.Time
	SettingsHash       string
	FQDN               string           `mapconv:"Status.FQDN"`
	DelayLoop          int              `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
	Weighted           types.StringFlag `mapconv:"Settings.GSLB.Weighted"`
	HealthCheck        *GSLBHealthCheck `mapconv:"Settings.GSLB.HealthCheck,recursive"`
	SorryServer        string           `mapconv:"Settings.GSLB.SorryServer"`
	DestinationServers []*GSLBServer    `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=12"`
}

// Validate validates by field tags
func (o *GSLB) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *GSLB) setDefaults() interface{} {
	return &struct {
		ID                 types.ID
		Name               string `validate:"required"`
		Description        string `validate:"min=0,max=512"`
		Tags               types.Tags
		Availability       types.EAvailability
		IconID             types.ID `mapconv:"Icon.ID"`
		CreatedAt          time.Time
		ModifiedAt         time.Time
		SettingsHash       string
		FQDN               string           `mapconv:"Status.FQDN"`
		DelayLoop          int              `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
		Weighted           types.StringFlag `mapconv:"Settings.GSLB.Weighted"`
		HealthCheck        *GSLBHealthCheck `mapconv:"Settings.GSLB.HealthCheck,recursive"`
		SorryServer        string           `mapconv:"Settings.GSLB.SorryServer"`
		DestinationServers []*GSLBServer    `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=12"`
	}{
		ID:                 o.ID,
		Name:               o.Name,
		Description:        o.Description,
		Tags:               o.Tags,
		Availability:       o.Availability,
		IconID:             o.IconID,
		CreatedAt:          o.CreatedAt,
		ModifiedAt:         o.ModifiedAt,
		SettingsHash:       o.SettingsHash,
		FQDN:               o.FQDN,
		DelayLoop:          o.DelayLoop,
		Weighted:           o.Weighted,
		HealthCheck:        o.HealthCheck,
		SorryServer:        o.SorryServer,
		DestinationServers: o.DestinationServers,
	}
}

// GetID returns value of ID
func (o *GSLB) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *GSLB) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *GSLB) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *GSLB) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *GSLB) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *GSLB) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *GSLB) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *GSLB) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *GSLB) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *GSLB) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *GSLB) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *GSLB) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *GSLB) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *GSLB) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *GSLB) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *GSLB) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *GSLB) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *GSLB) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetIconID returns value of IconID
func (o *GSLB) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *GSLB) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *GSLB) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *GSLB) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *GSLB) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *GSLB) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetSettingsHash returns value of SettingsHash
func (o *GSLB) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *GSLB) SetSettingsHash(v string) {
	o.SettingsHash = v
}

// GetFQDN returns value of FQDN
func (o *GSLB) GetFQDN() string {
	return o.FQDN
}

// SetFQDN sets value to FQDN
func (o *GSLB) SetFQDN(v string) {
	o.FQDN = v
}

// GetDelayLoop returns value of DelayLoop
func (o *GSLB) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *GSLB) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetWeighted returns value of Weighted
func (o *GSLB) GetWeighted() types.StringFlag {
	return o.Weighted
}

// SetWeighted sets value to Weighted
func (o *GSLB) SetWeighted(v types.StringFlag) {
	o.Weighted = v
}

// GetHealthCheck returns value of HealthCheck
func (o *GSLB) GetHealthCheck() *GSLBHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *GSLB) SetHealthCheck(v *GSLBHealthCheck) {
	o.HealthCheck = v
}

// GetSorryServer returns value of SorryServer
func (o *GSLB) GetSorryServer() string {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *GSLB) SetSorryServer(v string) {
	o.SorryServer = v
}

// GetDestinationServers returns value of DestinationServers
func (o *GSLB) GetDestinationServers() []*GSLBServer {
	return o.DestinationServers
}

// SetDestinationServers sets value to DestinationServers
func (o *GSLB) SetDestinationServers(v []*GSLBServer) {
	o.DestinationServers = v
}

/*************************************************
* GSLBHealthCheck
*************************************************/

// GSLBHealthCheck represents API parameter/response structure
type GSLBHealthCheck struct {
	Protocol     types.Protocol     `validate:"oneof=http https ping tcp"`
	HostHeader   string             `mapconv:"Host"`
	Path         string             `mapconv:"Path"`
	ResponseCode types.StringNumber `mapconv:"Status"`
	Port         types.StringNumber `mapconv:"Port"`
}

// Validate validates by field tags
func (o *GSLBHealthCheck) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *GSLBHealthCheck) setDefaults() interface{} {
	return &struct {
		Protocol     types.Protocol     `validate:"oneof=http https ping tcp"`
		HostHeader   string             `mapconv:"Host"`
		Path         string             `mapconv:"Path"`
		ResponseCode types.StringNumber `mapconv:"Status"`
		Port         types.StringNumber `mapconv:"Port"`
	}{
		Protocol:     o.Protocol,
		HostHeader:   o.HostHeader,
		Path:         o.Path,
		ResponseCode: o.ResponseCode,
		Port:         o.Port,
	}
}

// GetProtocol returns value of Protocol
func (o *GSLBHealthCheck) GetProtocol() types.Protocol {
	return o.Protocol
}

// SetProtocol sets value to Protocol
func (o *GSLBHealthCheck) SetProtocol(v types.Protocol) {
	o.Protocol = v
}

// GetHostHeader returns value of HostHeader
func (o *GSLBHealthCheck) GetHostHeader() string {
	return o.HostHeader
}

// SetHostHeader sets value to HostHeader
func (o *GSLBHealthCheck) SetHostHeader(v string) {
	o.HostHeader = v
}

// GetPath returns value of Path
func (o *GSLBHealthCheck) GetPath() string {
	return o.Path
}

// SetPath sets value to Path
func (o *GSLBHealthCheck) SetPath(v string) {
	o.Path = v
}

// GetResponseCode returns value of ResponseCode
func (o *GSLBHealthCheck) GetResponseCode() types.StringNumber {
	return o.ResponseCode
}

// SetResponseCode sets value to ResponseCode
func (o *GSLBHealthCheck) SetResponseCode(v types.StringNumber) {
	o.ResponseCode = v
}

// GetPort returns value of Port
func (o *GSLBHealthCheck) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *GSLBHealthCheck) SetPort(v types.StringNumber) {
	o.Port = v
}

/*************************************************
* GSLBServer
*************************************************/

// GSLBServer represents API parameter/response structure
type GSLBServer struct {
	IPAddress string `validate:"ipv4"`
	Enabled   types.StringFlag
	Weight    types.StringNumber
}

// Validate validates by field tags
func (o *GSLBServer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *GSLBServer) setDefaults() interface{} {
	return &struct {
		IPAddress string `validate:"ipv4"`
		Enabled   types.StringFlag
		Weight    types.StringNumber
	}{
		IPAddress: o.IPAddress,
		Enabled:   o.Enabled,
		Weight:    o.Weight,
	}
}

// GetIPAddress returns value of IPAddress
func (o *GSLBServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *GSLBServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetEnabled returns value of Enabled
func (o *GSLBServer) GetEnabled() types.StringFlag {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *GSLBServer) SetEnabled(v types.StringFlag) {
	o.Enabled = v
}

// GetWeight returns value of Weight
func (o *GSLBServer) GetWeight() types.StringNumber {
	return o.Weight
}

// SetWeight sets value to Weight
func (o *GSLBServer) SetWeight(v types.StringNumber) {
	o.Weight = v
}

/*************************************************
* GSLBCreateRequest
*************************************************/

// GSLBCreateRequest represents API parameter/response structure
type GSLBCreateRequest struct {
	HealthCheck        *GSLBHealthCheck `mapconv:"Settings.GSLB.HealthCheck,recursive"`
	DelayLoop          int              `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
	Weighted           types.StringFlag `mapconv:"Settings.GSLB.Weighted"`
	SorryServer        string           `mapconv:"Settings.GSLB.SorryServer"`
	DestinationServers []*GSLBServer    `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=12"`
	Name               string           `validate:"required"`
	Description        string           `validate:"min=0,max=512"`
	Tags               types.Tags
	IconID             types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *GSLBCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *GSLBCreateRequest) setDefaults() interface{} {
	return &struct {
		HealthCheck        *GSLBHealthCheck `mapconv:"Settings.GSLB.HealthCheck,recursive"`
		DelayLoop          int              `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
		Weighted           types.StringFlag `mapconv:"Settings.GSLB.Weighted"`
		SorryServer        string           `mapconv:"Settings.GSLB.SorryServer"`
		DestinationServers []*GSLBServer    `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=12"`
		Name               string           `validate:"required"`
		Description        string           `validate:"min=0,max=512"`
		Tags               types.Tags
		IconID             types.ID `mapconv:"Icon.ID"`
		Class              string   `mapconv:"Provider.Class"`
	}{
		HealthCheck:        o.HealthCheck,
		DelayLoop:          o.DelayLoop,
		Weighted:           o.Weighted,
		SorryServer:        o.SorryServer,
		DestinationServers: o.DestinationServers,
		Name:               o.Name,
		Description:        o.Description,
		Tags:               o.Tags,
		IconID:             o.IconID,
		Class:              "gslb",
	}
}

// GetHealthCheck returns value of HealthCheck
func (o *GSLBCreateRequest) GetHealthCheck() *GSLBHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *GSLBCreateRequest) SetHealthCheck(v *GSLBHealthCheck) {
	o.HealthCheck = v
}

// GetDelayLoop returns value of DelayLoop
func (o *GSLBCreateRequest) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *GSLBCreateRequest) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetWeighted returns value of Weighted
func (o *GSLBCreateRequest) GetWeighted() types.StringFlag {
	return o.Weighted
}

// SetWeighted sets value to Weighted
func (o *GSLBCreateRequest) SetWeighted(v types.StringFlag) {
	o.Weighted = v
}

// GetSorryServer returns value of SorryServer
func (o *GSLBCreateRequest) GetSorryServer() string {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *GSLBCreateRequest) SetSorryServer(v string) {
	o.SorryServer = v
}

// GetDestinationServers returns value of DestinationServers
func (o *GSLBCreateRequest) GetDestinationServers() []*GSLBServer {
	return o.DestinationServers
}

// SetDestinationServers sets value to DestinationServers
func (o *GSLBCreateRequest) SetDestinationServers(v []*GSLBServer) {
	o.DestinationServers = v
}

// GetName returns value of Name
func (o *GSLBCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *GSLBCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *GSLBCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *GSLBCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *GSLBCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *GSLBCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *GSLBCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *GSLBCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *GSLBCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *GSLBCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *GSLBCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *GSLBCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* GSLBUpdateRequest
*************************************************/

// GSLBUpdateRequest represents API parameter/response structure
type GSLBUpdateRequest struct {
	HealthCheck        *GSLBHealthCheck `mapconv:"Settings.GSLB.HealthCheck,recursive"`
	DelayLoop          int              `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
	Weighted           types.StringFlag `mapconv:"Settings.GSLB.Weighted"`
	SorryServer        string           `mapconv:"Settings.GSLB.SorryServer"`
	DestinationServers []*GSLBServer    `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=12"`
	Name               string           `validate:"required"`
	Description        string           `validate:"min=0,max=512"`
	Tags               types.Tags
	IconID             types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *GSLBUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *GSLBUpdateRequest) setDefaults() interface{} {
	return &struct {
		HealthCheck        *GSLBHealthCheck `mapconv:"Settings.GSLB.HealthCheck,recursive"`
		DelayLoop          int              `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
		Weighted           types.StringFlag `mapconv:"Settings.GSLB.Weighted"`
		SorryServer        string           `mapconv:"Settings.GSLB.SorryServer"`
		DestinationServers []*GSLBServer    `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=12"`
		Name               string           `validate:"required"`
		Description        string           `validate:"min=0,max=512"`
		Tags               types.Tags
		IconID             types.ID `mapconv:"Icon.ID"`
	}{
		HealthCheck:        o.HealthCheck,
		DelayLoop:          o.DelayLoop,
		Weighted:           o.Weighted,
		SorryServer:        o.SorryServer,
		DestinationServers: o.DestinationServers,
		Name:               o.Name,
		Description:        o.Description,
		Tags:               o.Tags,
		IconID:             o.IconID,
	}
}

// GetHealthCheck returns value of HealthCheck
func (o *GSLBUpdateRequest) GetHealthCheck() *GSLBHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *GSLBUpdateRequest) SetHealthCheck(v *GSLBHealthCheck) {
	o.HealthCheck = v
}

// GetDelayLoop returns value of DelayLoop
func (o *GSLBUpdateRequest) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *GSLBUpdateRequest) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetWeighted returns value of Weighted
func (o *GSLBUpdateRequest) GetWeighted() types.StringFlag {
	return o.Weighted
}

// SetWeighted sets value to Weighted
func (o *GSLBUpdateRequest) SetWeighted(v types.StringFlag) {
	o.Weighted = v
}

// GetSorryServer returns value of SorryServer
func (o *GSLBUpdateRequest) GetSorryServer() string {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *GSLBUpdateRequest) SetSorryServer(v string) {
	o.SorryServer = v
}

// GetDestinationServers returns value of DestinationServers
func (o *GSLBUpdateRequest) GetDestinationServers() []*GSLBServer {
	return o.DestinationServers
}

// SetDestinationServers sets value to DestinationServers
func (o *GSLBUpdateRequest) SetDestinationServers(v []*GSLBServer) {
	o.DestinationServers = v
}

// GetName returns value of Name
func (o *GSLBUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *GSLBUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *GSLBUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *GSLBUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *GSLBUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *GSLBUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *GSLBUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *GSLBUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *GSLBUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *GSLBUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *GSLBUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *GSLBUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* Icon
*************************************************/

// Icon represents API parameter/response structure
type Icon struct {
	ID           types.ID
	Name         string `validate:"required"`
	Tags         types.Tags
	Availability types.EAvailability
	Scope        types.EScope
	URL          string
	CreatedAt    time.Time
	ModifiedAt   time.Time
}

// Validate validates by field tags
func (o *Icon) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Icon) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		Tags         types.Tags
		Availability types.EAvailability
		Scope        types.EScope
		URL          string
		CreatedAt    time.Time
		ModifiedAt   time.Time
	}{
		ID:           o.ID,
		Name:         o.Name,
		Tags:         o.Tags,
		Availability: o.Availability,
		Scope:        o.Scope,
		URL:          o.URL,
		CreatedAt:    o.CreatedAt,
		ModifiedAt:   o.ModifiedAt,
	}
}

// GetID returns value of ID
func (o *Icon) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Icon) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Icon) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Icon) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Icon) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Icon) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Icon) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Icon) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *Icon) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Icon) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *Icon) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *Icon) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *Icon) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *Icon) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *Icon) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Icon) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *Icon) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *Icon) SetScope(v types.EScope) {
	o.Scope = v
}

// GetURL returns value of URL
func (o *Icon) GetURL() string {
	return o.URL
}

// SetURL sets value to URL
func (o *Icon) SetURL(v string) {
	o.URL = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Icon) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Icon) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Icon) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Icon) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

/*************************************************
* IconCreateRequest
*************************************************/

// IconCreateRequest represents API parameter/response structure
type IconCreateRequest struct {
	Name  string `validate:"required"`
	Tags  types.Tags
	Image string
}

// Validate validates by field tags
func (o *IconCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *IconCreateRequest) setDefaults() interface{} {
	return &struct {
		Name  string `validate:"required"`
		Tags  types.Tags
		Image string
	}{
		Name:  o.Name,
		Tags:  o.Tags,
		Image: o.Image,
	}
}

// GetName returns value of Name
func (o *IconCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *IconCreateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *IconCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *IconCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *IconCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *IconCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *IconCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *IconCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetImage returns value of Image
func (o *IconCreateRequest) GetImage() string {
	return o.Image
}

// SetImage sets value to Image
func (o *IconCreateRequest) SetImage(v string) {
	o.Image = v
}

/*************************************************
* IconUpdateRequest
*************************************************/

// IconUpdateRequest represents API parameter/response structure
type IconUpdateRequest struct {
	Name string `validate:"required"`
	Tags types.Tags
}

// Validate validates by field tags
func (o *IconUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *IconUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name string `validate:"required"`
		Tags types.Tags
	}{
		Name: o.Name,
		Tags: o.Tags,
	}
}

// GetName returns value of Name
func (o *IconUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *IconUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *IconUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *IconUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *IconUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *IconUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *IconUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *IconUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

/*************************************************
* Interface
*************************************************/

// Interface represents API parameter/response structure
type Interface struct {
	ID             types.ID
	MACAddress     string
	IPAddress      string
	UserIPAddress  string
	HostName       string
	SwitchID       types.ID `mapconv:"Switch.ID,omitempty"`
	PacketFilterID types.ID `mapconv:"PacketFilter.ID,omitempty"`
	ServerID       types.ID `mapconv:"Server.ID,omitempty"`
	CreatedAt      time.Time
}

// Validate validates by field tags
func (o *Interface) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Interface) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		MACAddress     string
		IPAddress      string
		UserIPAddress  string
		HostName       string
		SwitchID       types.ID `mapconv:"Switch.ID,omitempty"`
		PacketFilterID types.ID `mapconv:"PacketFilter.ID,omitempty"`
		ServerID       types.ID `mapconv:"Server.ID,omitempty"`
		CreatedAt      time.Time
	}{
		ID:             o.ID,
		MACAddress:     o.MACAddress,
		IPAddress:      o.IPAddress,
		UserIPAddress:  o.UserIPAddress,
		HostName:       o.HostName,
		SwitchID:       o.SwitchID,
		PacketFilterID: o.PacketFilterID,
		ServerID:       o.ServerID,
		CreatedAt:      o.CreatedAt,
	}
}

// GetID returns value of ID
func (o *Interface) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Interface) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Interface) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Interface) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Interface) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Interface) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetMACAddress returns value of MACAddress
func (o *Interface) GetMACAddress() string {
	return o.MACAddress
}

// SetMACAddress sets value to MACAddress
func (o *Interface) SetMACAddress(v string) {
	o.MACAddress = v
}

// GetIPAddress returns value of IPAddress
func (o *Interface) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *Interface) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetUserIPAddress returns value of UserIPAddress
func (o *Interface) GetUserIPAddress() string {
	return o.UserIPAddress
}

// SetUserIPAddress sets value to UserIPAddress
func (o *Interface) SetUserIPAddress(v string) {
	o.UserIPAddress = v
}

// GetHostName returns value of HostName
func (o *Interface) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *Interface) SetHostName(v string) {
	o.HostName = v
}

// GetSwitchID returns value of SwitchID
func (o *Interface) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *Interface) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetPacketFilterID returns value of PacketFilterID
func (o *Interface) GetPacketFilterID() types.ID {
	return o.PacketFilterID
}

// SetPacketFilterID sets value to PacketFilterID
func (o *Interface) SetPacketFilterID(v types.ID) {
	o.PacketFilterID = v
}

// GetServerID returns value of ServerID
func (o *Interface) GetServerID() types.ID {
	return o.ServerID
}

// SetServerID sets value to ServerID
func (o *Interface) SetServerID(v types.ID) {
	o.ServerID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Interface) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Interface) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

/*************************************************
* InterfaceCreateRequest
*************************************************/

// InterfaceCreateRequest represents API parameter/response structure
type InterfaceCreateRequest struct {
	ServerID types.ID `mapconv:"Server.ID,omitempty"`
}

// Validate validates by field tags
func (o *InterfaceCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InterfaceCreateRequest) setDefaults() interface{} {
	return &struct {
		ServerID types.ID `mapconv:"Server.ID,omitempty"`
	}{
		ServerID: o.ServerID,
	}
}

// GetServerID returns value of ServerID
func (o *InterfaceCreateRequest) GetServerID() types.ID {
	return o.ServerID
}

// SetServerID sets value to ServerID
func (o *InterfaceCreateRequest) SetServerID(v types.ID) {
	o.ServerID = v
}

/*************************************************
* InterfaceUpdateRequest
*************************************************/

// InterfaceUpdateRequest represents API parameter/response structure
type InterfaceUpdateRequest struct {
	UserIPAddress string
}

// Validate validates by field tags
func (o *InterfaceUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InterfaceUpdateRequest) setDefaults() interface{} {
	return &struct {
		UserIPAddress string
	}{
		UserIPAddress: o.UserIPAddress,
	}
}

// GetUserIPAddress returns value of UserIPAddress
func (o *InterfaceUpdateRequest) GetUserIPAddress() string {
	return o.UserIPAddress
}

// SetUserIPAddress sets value to UserIPAddress
func (o *InterfaceUpdateRequest) SetUserIPAddress(v string) {
	o.UserIPAddress = v
}

/*************************************************
* Internet
*************************************************/

// Internet represents API parameter/response structure
type Internet struct {
	ID             types.ID
	Name           string `validate:"required"`
	Description    string `validate:"min=0,max=512"`
	Tags           types.Tags
	IconID         types.ID `mapconv:"Icon.ID"`
	CreatedAt      time.Time
	BandWidthMbps  int
	NetworkMaskLen int         `validate:"min=24,max=28"`
	Switch         *SwitchInfo `mapconv:",recursive"`
}

// Validate validates by field tags
func (o *Internet) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Internet) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		Name           string `validate:"required"`
		Description    string `validate:"min=0,max=512"`
		Tags           types.Tags
		IconID         types.ID `mapconv:"Icon.ID"`
		CreatedAt      time.Time
		BandWidthMbps  int
		NetworkMaskLen int         `validate:"min=24,max=28"`
		Switch         *SwitchInfo `mapconv:",recursive"`
	}{
		ID:             o.ID,
		Name:           o.Name,
		Description:    o.Description,
		Tags:           o.Tags,
		IconID:         o.IconID,
		CreatedAt:      o.CreatedAt,
		BandWidthMbps:  o.BandWidthMbps,
		NetworkMaskLen: o.NetworkMaskLen,
		Switch:         o.Switch,
	}
}

// GetID returns value of ID
func (o *Internet) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Internet) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Internet) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Internet) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Internet) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Internet) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Internet) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Internet) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Internet) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Internet) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Internet) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Internet) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *Internet) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *Internet) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *Internet) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *Internet) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *Internet) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *Internet) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Internet) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Internet) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetBandWidthMbps returns value of BandWidthMbps
func (o *Internet) GetBandWidthMbps() int {
	return o.BandWidthMbps
}

// SetBandWidthMbps sets value to BandWidthMbps
func (o *Internet) SetBandWidthMbps(v int) {
	o.BandWidthMbps = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *Internet) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *Internet) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetSwitch returns value of Switch
func (o *Internet) GetSwitch() *SwitchInfo {
	return o.Switch
}

// SetSwitch sets value to Switch
func (o *Internet) SetSwitch(v *SwitchInfo) {
	o.Switch = v
}

/*************************************************
* SwitchInfo
*************************************************/

// SwitchInfo represents API parameter/response structure
type SwitchInfo struct {
	ID          types.ID
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	Scope       types.EScope
	Subnets     []*InternetSubnet `mapconv:"[]Subnets,recursive"`
	IPv6Nets    []*IPv6NetInfo    `mapconv:"[]IPv6Nets,recursive,omitempty"`
}

// Validate validates by field tags
func (o *SwitchInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SwitchInfo) setDefaults() interface{} {
	return &struct {
		ID          types.ID
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		Scope       types.EScope
		Subnets     []*InternetSubnet `mapconv:"[]Subnets,recursive"`
		IPv6Nets    []*IPv6NetInfo    `mapconv:"[]IPv6Nets,recursive,omitempty"`
	}{
		ID:          o.ID,
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		Scope:       o.Scope,
		Subnets:     o.Subnets,
		IPv6Nets:    o.IPv6Nets,
	}
}

// GetID returns value of ID
func (o *SwitchInfo) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *SwitchInfo) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *SwitchInfo) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *SwitchInfo) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *SwitchInfo) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *SwitchInfo) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *SwitchInfo) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SwitchInfo) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SwitchInfo) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SwitchInfo) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SwitchInfo) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SwitchInfo) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SwitchInfo) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SwitchInfo) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SwitchInfo) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SwitchInfo) ClearTags() {
	accessor.ClearTags(o)
}

// GetScope returns value of Scope
func (o *SwitchInfo) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *SwitchInfo) SetScope(v types.EScope) {
	o.Scope = v
}

// GetSubnets returns value of Subnets
func (o *SwitchInfo) GetSubnets() []*InternetSubnet {
	return o.Subnets
}

// SetSubnets sets value to Subnets
func (o *SwitchInfo) SetSubnets(v []*InternetSubnet) {
	o.Subnets = v
}

// GetIPv6Nets returns value of IPv6Nets
func (o *SwitchInfo) GetIPv6Nets() []*IPv6NetInfo {
	return o.IPv6Nets
}

// SetIPv6Nets sets value to IPv6Nets
func (o *SwitchInfo) SetIPv6Nets(v []*IPv6NetInfo) {
	o.IPv6Nets = v
}

/*************************************************
* InternetSubnet
*************************************************/

// InternetSubnet represents API parameter/response structure
type InternetSubnet struct {
	ID             types.ID
	DefaultRoute   string `validate:"ipv4"`
	NextHop        string `validate:"ipv4"`
	StaticRoute    string `validate:"ipv4"`
	NetworkAddress string `validate:"ipv4"`
	NetworkMaskLen int    `validate:"min=24,max=28"`
}

// Validate validates by field tags
func (o *InternetSubnet) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InternetSubnet) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		DefaultRoute   string `validate:"ipv4"`
		NextHop        string `validate:"ipv4"`
		StaticRoute    string `validate:"ipv4"`
		NetworkAddress string `validate:"ipv4"`
		NetworkMaskLen int    `validate:"min=24,max=28"`
	}{
		ID:             o.ID,
		DefaultRoute:   o.DefaultRoute,
		NextHop:        o.NextHop,
		StaticRoute:    o.StaticRoute,
		NetworkAddress: o.NetworkAddress,
		NetworkMaskLen: o.NetworkMaskLen,
	}
}

// GetID returns value of ID
func (o *InternetSubnet) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *InternetSubnet) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *InternetSubnet) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *InternetSubnet) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *InternetSubnet) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *InternetSubnet) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetDefaultRoute returns value of DefaultRoute
func (o *InternetSubnet) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *InternetSubnet) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNextHop returns value of NextHop
func (o *InternetSubnet) GetNextHop() string {
	return o.NextHop
}

// SetNextHop sets value to NextHop
func (o *InternetSubnet) SetNextHop(v string) {
	o.NextHop = v
}

// GetStaticRoute returns value of StaticRoute
func (o *InternetSubnet) GetStaticRoute() string {
	return o.StaticRoute
}

// SetStaticRoute sets value to StaticRoute
func (o *InternetSubnet) SetStaticRoute(v string) {
	o.StaticRoute = v
}

// GetNetworkAddress returns value of NetworkAddress
func (o *InternetSubnet) GetNetworkAddress() string {
	return o.NetworkAddress
}

// SetNetworkAddress sets value to NetworkAddress
func (o *InternetSubnet) SetNetworkAddress(v string) {
	o.NetworkAddress = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *InternetSubnet) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *InternetSubnet) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

/*************************************************
* IPv6NetInfo
*************************************************/

// IPv6NetInfo represents API parameter/response structure
type IPv6NetInfo struct {
	ID            types.ID
	IPv6Prefix    string
	IPv6PrefixLen int
}

// Validate validates by field tags
func (o *IPv6NetInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *IPv6NetInfo) setDefaults() interface{} {
	return &struct {
		ID            types.ID
		IPv6Prefix    string
		IPv6PrefixLen int
	}{
		ID:            o.ID,
		IPv6Prefix:    o.IPv6Prefix,
		IPv6PrefixLen: o.IPv6PrefixLen,
	}
}

// GetID returns value of ID
func (o *IPv6NetInfo) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *IPv6NetInfo) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *IPv6NetInfo) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *IPv6NetInfo) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *IPv6NetInfo) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *IPv6NetInfo) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetIPv6Prefix returns value of IPv6Prefix
func (o *IPv6NetInfo) GetIPv6Prefix() string {
	return o.IPv6Prefix
}

// SetIPv6Prefix sets value to IPv6Prefix
func (o *IPv6NetInfo) SetIPv6Prefix(v string) {
	o.IPv6Prefix = v
}

// GetIPv6PrefixLen returns value of IPv6PrefixLen
func (o *IPv6NetInfo) GetIPv6PrefixLen() int {
	return o.IPv6PrefixLen
}

// SetIPv6PrefixLen sets value to IPv6PrefixLen
func (o *IPv6NetInfo) SetIPv6PrefixLen(v int) {
	o.IPv6PrefixLen = v
}

/*************************************************
* InternetCreateRequest
*************************************************/

// InternetCreateRequest represents API parameter/response structure
type InternetCreateRequest struct {
	Name           string `validate:"required"`
	Description    string `validate:"min=0,max=512"`
	Tags           types.Tags
	IconID         types.ID `mapconv:"Icon.ID"`
	NetworkMaskLen int      `validate:"min=24,max=28"`
	BandWidthMbps  int
}

// Validate validates by field tags
func (o *InternetCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InternetCreateRequest) setDefaults() interface{} {
	return &struct {
		Name           string `validate:"required"`
		Description    string `validate:"min=0,max=512"`
		Tags           types.Tags
		IconID         types.ID `mapconv:"Icon.ID"`
		NetworkMaskLen int      `validate:"min=24,max=28"`
		BandWidthMbps  int
	}{
		Name:           o.Name,
		Description:    o.Description,
		Tags:           o.Tags,
		IconID:         o.IconID,
		NetworkMaskLen: o.NetworkMaskLen,
		BandWidthMbps:  o.BandWidthMbps,
	}
}

// GetName returns value of Name
func (o *InternetCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *InternetCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *InternetCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *InternetCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *InternetCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *InternetCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *InternetCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *InternetCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *InternetCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *InternetCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *InternetCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *InternetCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *InternetCreateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *InternetCreateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetBandWidthMbps returns value of BandWidthMbps
func (o *InternetCreateRequest) GetBandWidthMbps() int {
	return o.BandWidthMbps
}

// SetBandWidthMbps sets value to BandWidthMbps
func (o *InternetCreateRequest) SetBandWidthMbps(v int) {
	o.BandWidthMbps = v
}

/*************************************************
* InternetUpdateRequest
*************************************************/

// InternetUpdateRequest represents API parameter/response structure
type InternetUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *InternetUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InternetUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetName returns value of Name
func (o *InternetUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *InternetUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *InternetUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *InternetUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *InternetUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *InternetUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *InternetUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *InternetUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *InternetUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *InternetUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *InternetUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *InternetUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* InternetUpdateBandWidthRequest
*************************************************/

// InternetUpdateBandWidthRequest represents API parameter/response structure
type InternetUpdateBandWidthRequest struct {
	BandWidthMbps int
}

// Validate validates by field tags
func (o *InternetUpdateBandWidthRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InternetUpdateBandWidthRequest) setDefaults() interface{} {
	return &struct {
		BandWidthMbps int
	}{
		BandWidthMbps: o.BandWidthMbps,
	}
}

// GetBandWidthMbps returns value of BandWidthMbps
func (o *InternetUpdateBandWidthRequest) GetBandWidthMbps() int {
	return o.BandWidthMbps
}

// SetBandWidthMbps sets value to BandWidthMbps
func (o *InternetUpdateBandWidthRequest) SetBandWidthMbps(v int) {
	o.BandWidthMbps = v
}

/*************************************************
* InternetSubnetOperationResult
*************************************************/

// InternetSubnetOperationResult represents API parameter/response structure
type InternetSubnetOperationResult struct {
	ID             types.ID
	DefaultRoute   string   `validate:"ipv4"`
	NextHop        string   `validate:"ipv4"`
	StaticRoute    string   `validate:"ipv4"`
	NetworkAddress string   `validate:"ipv4"`
	NetworkMaskLen int      `validate:"min=24,max=28"`
	IPAddresses    []string `mapconv:"[]IPAddresses.IPAddress"`
}

// Validate validates by field tags
func (o *InternetSubnetOperationResult) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InternetSubnetOperationResult) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		DefaultRoute   string   `validate:"ipv4"`
		NextHop        string   `validate:"ipv4"`
		StaticRoute    string   `validate:"ipv4"`
		NetworkAddress string   `validate:"ipv4"`
		NetworkMaskLen int      `validate:"min=24,max=28"`
		IPAddresses    []string `mapconv:"[]IPAddresses.IPAddress"`
	}{
		ID:             o.ID,
		DefaultRoute:   o.DefaultRoute,
		NextHop:        o.NextHop,
		StaticRoute:    o.StaticRoute,
		NetworkAddress: o.NetworkAddress,
		NetworkMaskLen: o.NetworkMaskLen,
		IPAddresses:    o.IPAddresses,
	}
}

// GetID returns value of ID
func (o *InternetSubnetOperationResult) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *InternetSubnetOperationResult) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *InternetSubnetOperationResult) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *InternetSubnetOperationResult) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *InternetSubnetOperationResult) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *InternetSubnetOperationResult) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetDefaultRoute returns value of DefaultRoute
func (o *InternetSubnetOperationResult) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *InternetSubnetOperationResult) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNextHop returns value of NextHop
func (o *InternetSubnetOperationResult) GetNextHop() string {
	return o.NextHop
}

// SetNextHop sets value to NextHop
func (o *InternetSubnetOperationResult) SetNextHop(v string) {
	o.NextHop = v
}

// GetStaticRoute returns value of StaticRoute
func (o *InternetSubnetOperationResult) GetStaticRoute() string {
	return o.StaticRoute
}

// SetStaticRoute sets value to StaticRoute
func (o *InternetSubnetOperationResult) SetStaticRoute(v string) {
	o.StaticRoute = v
}

// GetNetworkAddress returns value of NetworkAddress
func (o *InternetSubnetOperationResult) GetNetworkAddress() string {
	return o.NetworkAddress
}

// SetNetworkAddress sets value to NetworkAddress
func (o *InternetSubnetOperationResult) SetNetworkAddress(v string) {
	o.NetworkAddress = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *InternetSubnetOperationResult) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *InternetSubnetOperationResult) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetIPAddresses returns value of IPAddresses
func (o *InternetSubnetOperationResult) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *InternetSubnetOperationResult) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

/*************************************************
* InternetAddSubnetRequest
*************************************************/

// InternetAddSubnetRequest represents API parameter/response structure
type InternetAddSubnetRequest struct {
	NetworkMaskLen int    `validate:"min=24,max=28"`
	NextHop        string `validate:"ipv4"`
}

// Validate validates by field tags
func (o *InternetAddSubnetRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InternetAddSubnetRequest) setDefaults() interface{} {
	return &struct {
		NetworkMaskLen int    `validate:"min=24,max=28"`
		NextHop        string `validate:"ipv4"`
	}{
		NetworkMaskLen: o.NetworkMaskLen,
		NextHop:        o.NextHop,
	}
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *InternetAddSubnetRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *InternetAddSubnetRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetNextHop returns value of NextHop
func (o *InternetAddSubnetRequest) GetNextHop() string {
	return o.NextHop
}

// SetNextHop sets value to NextHop
func (o *InternetAddSubnetRequest) SetNextHop(v string) {
	o.NextHop = v
}

/*************************************************
* InternetUpdateSubnetRequest
*************************************************/

// InternetUpdateSubnetRequest represents API parameter/response structure
type InternetUpdateSubnetRequest struct {
	NextHop string `validate:"ipv4"`
}

// Validate validates by field tags
func (o *InternetUpdateSubnetRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InternetUpdateSubnetRequest) setDefaults() interface{} {
	return &struct {
		NextHop string `validate:"ipv4"`
	}{
		NextHop: o.NextHop,
	}
}

// GetNextHop returns value of NextHop
func (o *InternetUpdateSubnetRequest) GetNextHop() string {
	return o.NextHop
}

// SetNextHop sets value to NextHop
func (o *InternetUpdateSubnetRequest) SetNextHop(v string) {
	o.NextHop = v
}

/*************************************************
* RouterActivity
*************************************************/

// RouterActivity represents API parameter/response structure
type RouterActivity struct {
	Values []*MonitorRouterValue `mapconv:"[]Router"`
}

// Validate validates by field tags
func (o *RouterActivity) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *RouterActivity) setDefaults() interface{} {
	return &struct {
		Values []*MonitorRouterValue `mapconv:"[]Router"`
	}{
		Values: o.Values,
	}
}

// GetValues returns value of Values
func (o *RouterActivity) GetValues() []*MonitorRouterValue {
	return o.Values
}

// SetValues sets value to Values
func (o *RouterActivity) SetValues(v []*MonitorRouterValue) {
	o.Values = v
}

/*************************************************
* MonitorRouterValue
*************************************************/

// MonitorRouterValue represents API parameter/response structure
type MonitorRouterValue struct {
	Time time.Time `json:",omitempty" mapconv:",omitempty"`
	In   float64   `json:",omitempty" mapconv:",omitempty"`
	Out  float64   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorRouterValue) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorRouterValue) setDefaults() interface{} {
	return &struct {
		Time time.Time `json:",omitempty" mapconv:",omitempty"`
		In   float64   `json:",omitempty" mapconv:",omitempty"`
		Out  float64   `json:",omitempty" mapconv:",omitempty"`
	}{
		Time: o.Time,
		In:   o.In,
		Out:  o.Out,
	}
}

// GetTime returns value of Time
func (o *MonitorRouterValue) GetTime() time.Time {
	return o.Time
}

// SetTime sets value to Time
func (o *MonitorRouterValue) SetTime(v time.Time) {
	o.Time = v
}

// GetIn returns value of In
func (o *MonitorRouterValue) GetIn() float64 {
	return o.In
}

// SetIn sets value to In
func (o *MonitorRouterValue) SetIn(v float64) {
	o.In = v
}

// GetOut returns value of Out
func (o *MonitorRouterValue) GetOut() float64 {
	return o.Out
}

// SetOut sets value to Out
func (o *MonitorRouterValue) SetOut(v float64) {
	o.Out = v
}

/*************************************************
* InternetPlan
*************************************************/

// InternetPlan represents API parameter/response structure
type InternetPlan struct {
	ID            types.ID
	Name          string `validate:"required"`
	BandWidthMbps int
	Availability  types.EAvailability
}

// Validate validates by field tags
func (o *InternetPlan) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InternetPlan) setDefaults() interface{} {
	return &struct {
		ID            types.ID
		Name          string `validate:"required"`
		BandWidthMbps int
		Availability  types.EAvailability
	}{
		ID:            o.ID,
		Name:          o.Name,
		BandWidthMbps: o.BandWidthMbps,
		Availability:  o.Availability,
	}
}

// GetID returns value of ID
func (o *InternetPlan) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *InternetPlan) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *InternetPlan) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *InternetPlan) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *InternetPlan) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *InternetPlan) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *InternetPlan) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *InternetPlan) SetName(v string) {
	o.Name = v
}

// GetBandWidthMbps returns value of BandWidthMbps
func (o *InternetPlan) GetBandWidthMbps() int {
	return o.BandWidthMbps
}

// SetBandWidthMbps sets value to BandWidthMbps
func (o *InternetPlan) SetBandWidthMbps(v int) {
	o.BandWidthMbps = v
}

// GetAvailability returns value of Availability
func (o *InternetPlan) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *InternetPlan) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

/*************************************************
* IPAddress
*************************************************/

// IPAddress represents API parameter/response structure
type IPAddress struct {
	HostName    string
	IPAddress   string
	InterfaceID types.ID `mapconv:"Interface.ID,omitempty"`
	SubnetID    types.ID `mapconv:"Subnet.ID,omitempty"`
}

// Validate validates by field tags
func (o *IPAddress) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *IPAddress) setDefaults() interface{} {
	return &struct {
		HostName    string
		IPAddress   string
		InterfaceID types.ID `mapconv:"Interface.ID,omitempty"`
		SubnetID    types.ID `mapconv:"Subnet.ID,omitempty"`
	}{
		HostName:    o.HostName,
		IPAddress:   o.IPAddress,
		InterfaceID: o.InterfaceID,
		SubnetID:    o.SubnetID,
	}
}

// GetHostName returns value of HostName
func (o *IPAddress) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *IPAddress) SetHostName(v string) {
	o.HostName = v
}

// GetIPAddress returns value of IPAddress
func (o *IPAddress) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *IPAddress) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetInterfaceID returns value of InterfaceID
func (o *IPAddress) GetInterfaceID() types.ID {
	return o.InterfaceID
}

// SetInterfaceID sets value to InterfaceID
func (o *IPAddress) SetInterfaceID(v types.ID) {
	o.InterfaceID = v
}

// GetSubnetID returns value of SubnetID
func (o *IPAddress) GetSubnetID() types.ID {
	return o.SubnetID
}

// SetSubnetID sets value to SubnetID
func (o *IPAddress) SetSubnetID(v types.ID) {
	o.SubnetID = v
}

/*************************************************
* IPv6Net
*************************************************/

// IPv6Net represents API parameter/response structure
type IPv6Net struct {
	ID                 types.ID
	ServiceID          types.ID
	IPv6Prefix         string
	IPv6PrefixLen      int
	IPv6PrefixTail     string
	ServiceClass       string
	IPv6TableID        types.ID `mapconv:"IPv6Table.ID"`
	NamedIPv6AddrCount int
	CreatedAt          time.Time
	SwitchID           types.ID `mapconv:"Switch.ID,omitempty"`
}

// Validate validates by field tags
func (o *IPv6Net) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *IPv6Net) setDefaults() interface{} {
	return &struct {
		ID                 types.ID
		ServiceID          types.ID
		IPv6Prefix         string
		IPv6PrefixLen      int
		IPv6PrefixTail     string
		ServiceClass       string
		IPv6TableID        types.ID `mapconv:"IPv6Table.ID"`
		NamedIPv6AddrCount int
		CreatedAt          time.Time
		SwitchID           types.ID `mapconv:"Switch.ID,omitempty"`
	}{
		ID:                 o.ID,
		ServiceID:          o.ServiceID,
		IPv6Prefix:         o.IPv6Prefix,
		IPv6PrefixLen:      o.IPv6PrefixLen,
		IPv6PrefixTail:     o.IPv6PrefixTail,
		ServiceClass:       o.ServiceClass,
		IPv6TableID:        o.IPv6TableID,
		NamedIPv6AddrCount: o.NamedIPv6AddrCount,
		CreatedAt:          o.CreatedAt,
		SwitchID:           o.SwitchID,
	}
}

// GetID returns value of ID
func (o *IPv6Net) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *IPv6Net) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *IPv6Net) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *IPv6Net) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *IPv6Net) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *IPv6Net) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetServiceID returns value of ServiceID
func (o *IPv6Net) GetServiceID() types.ID {
	return o.ServiceID
}

// SetServiceID sets value to ServiceID
func (o *IPv6Net) SetServiceID(v types.ID) {
	o.ServiceID = v
}

// GetIPv6Prefix returns value of IPv6Prefix
func (o *IPv6Net) GetIPv6Prefix() string {
	return o.IPv6Prefix
}

// SetIPv6Prefix sets value to IPv6Prefix
func (o *IPv6Net) SetIPv6Prefix(v string) {
	o.IPv6Prefix = v
}

// GetIPv6PrefixLen returns value of IPv6PrefixLen
func (o *IPv6Net) GetIPv6PrefixLen() int {
	return o.IPv6PrefixLen
}

// SetIPv6PrefixLen sets value to IPv6PrefixLen
func (o *IPv6Net) SetIPv6PrefixLen(v int) {
	o.IPv6PrefixLen = v
}

// GetIPv6PrefixTail returns value of IPv6PrefixTail
func (o *IPv6Net) GetIPv6PrefixTail() string {
	return o.IPv6PrefixTail
}

// SetIPv6PrefixTail sets value to IPv6PrefixTail
func (o *IPv6Net) SetIPv6PrefixTail(v string) {
	o.IPv6PrefixTail = v
}

// GetServiceClass returns value of ServiceClass
func (o *IPv6Net) GetServiceClass() string {
	return o.ServiceClass
}

// SetServiceClass sets value to ServiceClass
func (o *IPv6Net) SetServiceClass(v string) {
	o.ServiceClass = v
}

// GetIPv6TableID returns value of IPv6TableID
func (o *IPv6Net) GetIPv6TableID() types.ID {
	return o.IPv6TableID
}

// SetIPv6TableID sets value to IPv6TableID
func (o *IPv6Net) SetIPv6TableID(v types.ID) {
	o.IPv6TableID = v
}

// GetNamedIPv6AddrCount returns value of NamedIPv6AddrCount
func (o *IPv6Net) GetNamedIPv6AddrCount() int {
	return o.NamedIPv6AddrCount
}

// SetNamedIPv6AddrCount sets value to NamedIPv6AddrCount
func (o *IPv6Net) SetNamedIPv6AddrCount(v int) {
	o.NamedIPv6AddrCount = v
}

// GetCreatedAt returns value of CreatedAt
func (o *IPv6Net) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *IPv6Net) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetSwitchID returns value of SwitchID
func (o *IPv6Net) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *IPv6Net) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

/*************************************************
* IPv6Addr
*************************************************/

// IPv6Addr represents API parameter/response structure
type IPv6Addr struct {
	IPv6Addr    string
	HostName    string
	IPv6NetID   types.ID `mapconv:"IPv6Net.ID"`
	SwitchID    types.ID `mapconv:"IPv6Net.Switch.ID"`
	InterfaceID types.ID `mapconv:"Interface.ID,omitempty"`
}

// Validate validates by field tags
func (o *IPv6Addr) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *IPv6Addr) setDefaults() interface{} {
	return &struct {
		IPv6Addr    string
		HostName    string
		IPv6NetID   types.ID `mapconv:"IPv6Net.ID"`
		SwitchID    types.ID `mapconv:"IPv6Net.Switch.ID"`
		InterfaceID types.ID `mapconv:"Interface.ID,omitempty"`
	}{
		IPv6Addr:    o.IPv6Addr,
		HostName:    o.HostName,
		IPv6NetID:   o.IPv6NetID,
		SwitchID:    o.SwitchID,
		InterfaceID: o.InterfaceID,
	}
}

// GetIPv6Addr returns value of IPv6Addr
func (o *IPv6Addr) GetIPv6Addr() string {
	return o.IPv6Addr
}

// SetIPv6Addr sets value to IPv6Addr
func (o *IPv6Addr) SetIPv6Addr(v string) {
	o.IPv6Addr = v
}

// GetHostName returns value of HostName
func (o *IPv6Addr) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *IPv6Addr) SetHostName(v string) {
	o.HostName = v
}

// GetIPv6NetID returns value of IPv6NetID
func (o *IPv6Addr) GetIPv6NetID() types.ID {
	return o.IPv6NetID
}

// SetIPv6NetID sets value to IPv6NetID
func (o *IPv6Addr) SetIPv6NetID(v types.ID) {
	o.IPv6NetID = v
}

// GetSwitchID returns value of SwitchID
func (o *IPv6Addr) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *IPv6Addr) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetInterfaceID returns value of InterfaceID
func (o *IPv6Addr) GetInterfaceID() types.ID {
	return o.InterfaceID
}

// SetInterfaceID sets value to InterfaceID
func (o *IPv6Addr) SetInterfaceID(v types.ID) {
	o.InterfaceID = v
}

/*************************************************
* IPv6AddrCreateRequest
*************************************************/

// IPv6AddrCreateRequest represents API parameter/response structure
type IPv6AddrCreateRequest struct {
	IPv6Addr string
	HostName string
}

// Validate validates by field tags
func (o *IPv6AddrCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *IPv6AddrCreateRequest) setDefaults() interface{} {
	return &struct {
		IPv6Addr string
		HostName string
	}{
		IPv6Addr: o.IPv6Addr,
		HostName: o.HostName,
	}
}

// GetIPv6Addr returns value of IPv6Addr
func (o *IPv6AddrCreateRequest) GetIPv6Addr() string {
	return o.IPv6Addr
}

// SetIPv6Addr sets value to IPv6Addr
func (o *IPv6AddrCreateRequest) SetIPv6Addr(v string) {
	o.IPv6Addr = v
}

// GetHostName returns value of HostName
func (o *IPv6AddrCreateRequest) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *IPv6AddrCreateRequest) SetHostName(v string) {
	o.HostName = v
}

/*************************************************
* IPv6AddrUpdateRequest
*************************************************/

// IPv6AddrUpdateRequest represents API parameter/response structure
type IPv6AddrUpdateRequest struct {
	HostName string
}

// Validate validates by field tags
func (o *IPv6AddrUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *IPv6AddrUpdateRequest) setDefaults() interface{} {
	return &struct {
		HostName string
	}{
		HostName: o.HostName,
	}
}

// GetHostName returns value of HostName
func (o *IPv6AddrUpdateRequest) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *IPv6AddrUpdateRequest) SetHostName(v string) {
	o.HostName = v
}

/*************************************************
* License
*************************************************/

// License represents API parameter/response structure
type License struct {
	ID              types.ID
	Name            string   `validate:"required"`
	LicenseInfoID   types.ID `mapconv:"LicenseInfo.ID"`
	LicenseInfoName string   `mapconv:"LicenseInfo.Name"`
	CreatedAt       time.Time
	ModifiedAt      time.Time
}

// Validate validates by field tags
func (o *License) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *License) setDefaults() interface{} {
	return &struct {
		ID              types.ID
		Name            string   `validate:"required"`
		LicenseInfoID   types.ID `mapconv:"LicenseInfo.ID"`
		LicenseInfoName string   `mapconv:"LicenseInfo.Name"`
		CreatedAt       time.Time
		ModifiedAt      time.Time
	}{
		ID:              o.ID,
		Name:            o.Name,
		LicenseInfoID:   o.LicenseInfoID,
		LicenseInfoName: o.LicenseInfoName,
		CreatedAt:       o.CreatedAt,
		ModifiedAt:      o.ModifiedAt,
	}
}

// GetID returns value of ID
func (o *License) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *License) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *License) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *License) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *License) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *License) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *License) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *License) SetName(v string) {
	o.Name = v
}

// GetLicenseInfoID returns value of LicenseInfoID
func (o *License) GetLicenseInfoID() types.ID {
	return o.LicenseInfoID
}

// SetLicenseInfoID sets value to LicenseInfoID
func (o *License) SetLicenseInfoID(v types.ID) {
	o.LicenseInfoID = v
}

// GetLicenseInfoName returns value of LicenseInfoName
func (o *License) GetLicenseInfoName() string {
	return o.LicenseInfoName
}

// SetLicenseInfoName sets value to LicenseInfoName
func (o *License) SetLicenseInfoName(v string) {
	o.LicenseInfoName = v
}

// GetCreatedAt returns value of CreatedAt
func (o *License) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *License) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *License) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *License) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

/*************************************************
* LicenseCreateRequest
*************************************************/

// LicenseCreateRequest represents API parameter/response structure
type LicenseCreateRequest struct {
	Name          string   `validate:"required"`
	LicenseInfoID types.ID `mapconv:"LicenseInfo.ID"`
}

// Validate validates by field tags
func (o *LicenseCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LicenseCreateRequest) setDefaults() interface{} {
	return &struct {
		Name          string   `validate:"required"`
		LicenseInfoID types.ID `mapconv:"LicenseInfo.ID"`
	}{
		Name:          o.Name,
		LicenseInfoID: o.LicenseInfoID,
	}
}

// GetName returns value of Name
func (o *LicenseCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LicenseCreateRequest) SetName(v string) {
	o.Name = v
}

// GetLicenseInfoID returns value of LicenseInfoID
func (o *LicenseCreateRequest) GetLicenseInfoID() types.ID {
	return o.LicenseInfoID
}

// SetLicenseInfoID sets value to LicenseInfoID
func (o *LicenseCreateRequest) SetLicenseInfoID(v types.ID) {
	o.LicenseInfoID = v
}

/*************************************************
* LicenseUpdateRequest
*************************************************/

// LicenseUpdateRequest represents API parameter/response structure
type LicenseUpdateRequest struct {
	Name string `validate:"required"`
}

// Validate validates by field tags
func (o *LicenseUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LicenseUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name string `validate:"required"`
	}{
		Name: o.Name,
	}
}

// GetName returns value of Name
func (o *LicenseUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LicenseUpdateRequest) SetName(v string) {
	o.Name = v
}

/*************************************************
* LicenseInfo
*************************************************/

// LicenseInfo represents API parameter/response structure
type LicenseInfo struct {
	ID         types.ID
	Name       string `validate:"required"`
	CreatedAt  time.Time
	ModifiedAt time.Time
	TermsOfUse string
}

// Validate validates by field tags
func (o *LicenseInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LicenseInfo) setDefaults() interface{} {
	return &struct {
		ID         types.ID
		Name       string `validate:"required"`
		CreatedAt  time.Time
		ModifiedAt time.Time
		TermsOfUse string
	}{
		ID:         o.ID,
		Name:       o.Name,
		CreatedAt:  o.CreatedAt,
		ModifiedAt: o.ModifiedAt,
		TermsOfUse: o.TermsOfUse,
	}
}

// GetID returns value of ID
func (o *LicenseInfo) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *LicenseInfo) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *LicenseInfo) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *LicenseInfo) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *LicenseInfo) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *LicenseInfo) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *LicenseInfo) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LicenseInfo) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns value of CreatedAt
func (o *LicenseInfo) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *LicenseInfo) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *LicenseInfo) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *LicenseInfo) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetTermsOfUse returns value of TermsOfUse
func (o *LicenseInfo) GetTermsOfUse() string {
	return o.TermsOfUse
}

// SetTermsOfUse sets value to TermsOfUse
func (o *LicenseInfo) SetTermsOfUse(v string) {
	o.TermsOfUse = v
}

/*************************************************
* LoadBalancer
*************************************************/

// LoadBalancer represents API parameter/response structure
type LoadBalancer struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    types.Tags
	Availability            types.EAvailability
	Class                   string
	IconID                  types.ID `mapconv:"Icon.ID"`
	CreatedAt               time.Time
	ModifiedAt              time.Time
	InstanceHostName        string                          `mapconv:"Instance.Host.Name"`
	InstanceHostInfoURL     string                          `mapconv:"Instance.Host.InfoURL"`
	InstanceStatus          types.EServerInstanceStatus     `mapconv:"Instance.Status"`
	InstanceStatusChangedAt time.Time                       `mapconv:"Instance.StatusChangedAt"`
	PlanID                  types.ID                        `mapconv:"Remark.Plan.ID/Plan.ID"`
	SwitchID                types.ID                        `mapconv:"Remark.Switch.ID"`
	DefaultRoute            string                          `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	NetworkMaskLen          int                             `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	IPAddresses             []string                        `mapconv:"Remark.[]Servers.IPAddress"`
	ZoneID                  types.ID                        `mapconv:"Remark.Zone.ID"`
	VRID                    int                             `mapconv:"Remark.VRRP.VRID"`
	VirtualIPAddresses      []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
	SettingsHash            string
	Interfaces              []*InterfaceView `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
}

// Validate validates by field tags
func (o *LoadBalancer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LoadBalancer) setDefaults() interface{} {
	return &struct {
		ID                      types.ID
		Name                    string `validate:"required"`
		Description             string `validate:"min=0,max=512"`
		Tags                    types.Tags
		Availability            types.EAvailability
		Class                   string
		IconID                  types.ID `mapconv:"Icon.ID"`
		CreatedAt               time.Time
		ModifiedAt              time.Time
		InstanceHostName        string                          `mapconv:"Instance.Host.Name"`
		InstanceHostInfoURL     string                          `mapconv:"Instance.Host.InfoURL"`
		InstanceStatus          types.EServerInstanceStatus     `mapconv:"Instance.Status"`
		InstanceStatusChangedAt time.Time                       `mapconv:"Instance.StatusChangedAt"`
		PlanID                  types.ID                        `mapconv:"Remark.Plan.ID/Plan.ID"`
		SwitchID                types.ID                        `mapconv:"Remark.Switch.ID"`
		DefaultRoute            string                          `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
		NetworkMaskLen          int                             `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
		IPAddresses             []string                        `mapconv:"Remark.[]Servers.IPAddress"`
		ZoneID                  types.ID                        `mapconv:"Remark.Zone.ID"`
		VRID                    int                             `mapconv:"Remark.VRRP.VRID"`
		VirtualIPAddresses      []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
		SettingsHash            string
		Interfaces              []*InterfaceView `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
	}{
		ID:                      o.ID,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		Availability:            o.Availability,
		Class:                   o.Class,
		IconID:                  o.IconID,
		CreatedAt:               o.CreatedAt,
		ModifiedAt:              o.ModifiedAt,
		InstanceHostName:        o.InstanceHostName,
		InstanceHostInfoURL:     o.InstanceHostInfoURL,
		InstanceStatus:          o.InstanceStatus,
		InstanceStatusChangedAt: o.InstanceStatusChangedAt,
		PlanID:                  o.PlanID,
		SwitchID:                o.SwitchID,
		DefaultRoute:            o.DefaultRoute,
		NetworkMaskLen:          o.NetworkMaskLen,
		IPAddresses:             o.IPAddresses,
		ZoneID:                  o.ZoneID,
		VRID:                    o.VRID,
		VirtualIPAddresses:      o.VirtualIPAddresses,
		SettingsHash:            o.SettingsHash,
		Interfaces:              o.Interfaces,
	}
}

// GetID returns value of ID
func (o *LoadBalancer) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *LoadBalancer) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *LoadBalancer) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *LoadBalancer) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *LoadBalancer) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *LoadBalancer) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *LoadBalancer) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LoadBalancer) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *LoadBalancer) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *LoadBalancer) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *LoadBalancer) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *LoadBalancer) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *LoadBalancer) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *LoadBalancer) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *LoadBalancer) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *LoadBalancer) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *LoadBalancer) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *LoadBalancer) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetClass returns value of Class
func (o *LoadBalancer) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *LoadBalancer) SetClass(v string) {
	o.Class = v
}

// GetIconID returns value of IconID
func (o *LoadBalancer) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *LoadBalancer) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *LoadBalancer) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *LoadBalancer) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *LoadBalancer) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *LoadBalancer) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetInstanceHostName returns value of InstanceHostName
func (o *LoadBalancer) GetInstanceHostName() string {
	return o.InstanceHostName
}

// SetInstanceHostName sets value to InstanceHostName
func (o *LoadBalancer) SetInstanceHostName(v string) {
	o.InstanceHostName = v
}

// GetInstanceHostInfoURL returns value of InstanceHostInfoURL
func (o *LoadBalancer) GetInstanceHostInfoURL() string {
	return o.InstanceHostInfoURL
}

// SetInstanceHostInfoURL sets value to InstanceHostInfoURL
func (o *LoadBalancer) SetInstanceHostInfoURL(v string) {
	o.InstanceHostInfoURL = v
}

// GetInstanceStatus returns value of InstanceStatus
func (o *LoadBalancer) GetInstanceStatus() types.EServerInstanceStatus {
	return o.InstanceStatus
}

// SetInstanceStatus sets value to InstanceStatus
func (o *LoadBalancer) SetInstanceStatus(v types.EServerInstanceStatus) {
	o.InstanceStatus = v
}

// GetInstanceStatusChangedAt returns value of InstanceStatusChangedAt
func (o *LoadBalancer) GetInstanceStatusChangedAt() time.Time {
	return o.InstanceStatusChangedAt
}

// SetInstanceStatusChangedAt sets value to InstanceStatusChangedAt
func (o *LoadBalancer) SetInstanceStatusChangedAt(v time.Time) {
	o.InstanceStatusChangedAt = v
}

// GetPlanID returns value of PlanID
func (o *LoadBalancer) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *LoadBalancer) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetSwitchID returns value of SwitchID
func (o *LoadBalancer) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *LoadBalancer) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *LoadBalancer) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *LoadBalancer) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *LoadBalancer) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *LoadBalancer) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetIPAddresses returns value of IPAddresses
func (o *LoadBalancer) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *LoadBalancer) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetZoneID returns value of ZoneID
func (o *LoadBalancer) GetZoneID() types.ID {
	return o.ZoneID
}

// SetZoneID sets value to ZoneID
func (o *LoadBalancer) SetZoneID(v types.ID) {
	o.ZoneID = v
}

// GetVRID returns value of VRID
func (o *LoadBalancer) GetVRID() int {
	return o.VRID
}

// SetVRID sets value to VRID
func (o *LoadBalancer) SetVRID(v int) {
	o.VRID = v
}

// GetVirtualIPAddresses returns value of VirtualIPAddresses
func (o *LoadBalancer) GetVirtualIPAddresses() []*LoadBalancerVirtualIPAddress {
	return o.VirtualIPAddresses
}

// SetVirtualIPAddresses sets value to VirtualIPAddresses
func (o *LoadBalancer) SetVirtualIPAddresses(v []*LoadBalancerVirtualIPAddress) {
	o.VirtualIPAddresses = v
}

// GetSettingsHash returns value of SettingsHash
func (o *LoadBalancer) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *LoadBalancer) SetSettingsHash(v string) {
	o.SettingsHash = v
}

// GetInterfaces returns value of Interfaces
func (o *LoadBalancer) GetInterfaces() []*InterfaceView {
	return o.Interfaces
}

// SetInterfaces sets value to Interfaces
func (o *LoadBalancer) SetInterfaces(v []*InterfaceView) {
	o.Interfaces = v
}

/*************************************************
* LoadBalancerVirtualIPAddress
*************************************************/

// LoadBalancerVirtualIPAddress represents API parameter/response structure
type LoadBalancerVirtualIPAddress struct {
	VirtualIPAddress string `validate:"ipv4"`
	Port             types.StringNumber
	DelayLoop        types.StringNumber    `mapconv:",default=10" validate:"min=0,max=60"`
	SorryServer      string                `validate:"ipv4"`
	Description      string                `validate:"min=0,max=512"`
	Servers          []*LoadBalancerServer `mapconv:",recursive" validate:"min=0,max=40"`
}

// Validate validates by field tags
func (o *LoadBalancerVirtualIPAddress) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LoadBalancerVirtualIPAddress) setDefaults() interface{} {
	return &struct {
		VirtualIPAddress string `validate:"ipv4"`
		Port             types.StringNumber
		DelayLoop        types.StringNumber    `mapconv:",default=10" validate:"min=0,max=60"`
		SorryServer      string                `validate:"ipv4"`
		Description      string                `validate:"min=0,max=512"`
		Servers          []*LoadBalancerServer `mapconv:",recursive" validate:"min=0,max=40"`
	}{
		VirtualIPAddress: o.VirtualIPAddress,
		Port:             o.Port,
		DelayLoop:        o.DelayLoop,
		SorryServer:      o.SorryServer,
		Description:      o.Description,
		Servers:          o.Servers,
	}
}

// GetVirtualIPAddress returns value of VirtualIPAddress
func (o *LoadBalancerVirtualIPAddress) GetVirtualIPAddress() string {
	return o.VirtualIPAddress
}

// SetVirtualIPAddress sets value to VirtualIPAddress
func (o *LoadBalancerVirtualIPAddress) SetVirtualIPAddress(v string) {
	o.VirtualIPAddress = v
}

// GetPort returns value of Port
func (o *LoadBalancerVirtualIPAddress) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *LoadBalancerVirtualIPAddress) SetPort(v types.StringNumber) {
	o.Port = v
}

// GetDelayLoop returns value of DelayLoop
func (o *LoadBalancerVirtualIPAddress) GetDelayLoop() types.StringNumber {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *LoadBalancerVirtualIPAddress) SetDelayLoop(v types.StringNumber) {
	o.DelayLoop = v
}

// GetSorryServer returns value of SorryServer
func (o *LoadBalancerVirtualIPAddress) GetSorryServer() string {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *LoadBalancerVirtualIPAddress) SetSorryServer(v string) {
	o.SorryServer = v
}

// GetDescription returns value of Description
func (o *LoadBalancerVirtualIPAddress) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *LoadBalancerVirtualIPAddress) SetDescription(v string) {
	o.Description = v
}

// GetServers returns value of Servers
func (o *LoadBalancerVirtualIPAddress) GetServers() []*LoadBalancerServer {
	return o.Servers
}

// SetServers sets value to Servers
func (o *LoadBalancerVirtualIPAddress) SetServers(v []*LoadBalancerServer) {
	o.Servers = v
}

/*************************************************
* LoadBalancerServer
*************************************************/

// LoadBalancerServer represents API parameter/response structure
type LoadBalancerServer struct {
	IPAddress               string             `validate:"ipv4"`
	Port                    types.StringNumber `validate:"min=1,max=65535"`
	Enabled                 types.StringFlag
	HealthCheckProtocol     types.Protocol     `mapconv:"HealthCheck.Protocol" validate:"oneof=http https ping tcp"`
	HealthCheckPath         string             `mapconv:"HealthCheck.Path"`
	HealthCheckResponseCode types.StringNumber `mapconv:"HealthCheck.Status"`
}

// Validate validates by field tags
func (o *LoadBalancerServer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LoadBalancerServer) setDefaults() interface{} {
	return &struct {
		IPAddress               string             `validate:"ipv4"`
		Port                    types.StringNumber `validate:"min=1,max=65535"`
		Enabled                 types.StringFlag
		HealthCheckProtocol     types.Protocol     `mapconv:"HealthCheck.Protocol" validate:"oneof=http https ping tcp"`
		HealthCheckPath         string             `mapconv:"HealthCheck.Path"`
		HealthCheckResponseCode types.StringNumber `mapconv:"HealthCheck.Status"`
	}{
		IPAddress:               o.IPAddress,
		Port:                    o.Port,
		Enabled:                 o.Enabled,
		HealthCheckProtocol:     o.HealthCheckProtocol,
		HealthCheckPath:         o.HealthCheckPath,
		HealthCheckResponseCode: o.HealthCheckResponseCode,
	}
}

// GetIPAddress returns value of IPAddress
func (o *LoadBalancerServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *LoadBalancerServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetPort returns value of Port
func (o *LoadBalancerServer) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *LoadBalancerServer) SetPort(v types.StringNumber) {
	o.Port = v
}

// GetEnabled returns value of Enabled
func (o *LoadBalancerServer) GetEnabled() types.StringFlag {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *LoadBalancerServer) SetEnabled(v types.StringFlag) {
	o.Enabled = v
}

// GetHealthCheckProtocol returns value of HealthCheckProtocol
func (o *LoadBalancerServer) GetHealthCheckProtocol() types.Protocol {
	return o.HealthCheckProtocol
}

// SetHealthCheckProtocol sets value to HealthCheckProtocol
func (o *LoadBalancerServer) SetHealthCheckProtocol(v types.Protocol) {
	o.HealthCheckProtocol = v
}

// GetHealthCheckPath returns value of HealthCheckPath
func (o *LoadBalancerServer) GetHealthCheckPath() string {
	return o.HealthCheckPath
}

// SetHealthCheckPath sets value to HealthCheckPath
func (o *LoadBalancerServer) SetHealthCheckPath(v string) {
	o.HealthCheckPath = v
}

// GetHealthCheckResponseCode returns value of HealthCheckResponseCode
func (o *LoadBalancerServer) GetHealthCheckResponseCode() types.StringNumber {
	return o.HealthCheckResponseCode
}

// SetHealthCheckResponseCode sets value to HealthCheckResponseCode
func (o *LoadBalancerServer) SetHealthCheckResponseCode(v types.StringNumber) {
	o.HealthCheckResponseCode = v
}

/*************************************************
* LoadBalancerCreateRequest
*************************************************/

// LoadBalancerCreateRequest represents API parameter/response structure
type LoadBalancerCreateRequest struct {
	SwitchID           types.ID `mapconv:"Remark.Switch.ID"`
	PlanID             types.ID `mapconv:"Remark.Plan.ID/Plan.ID"`
	VRID               int      `mapconv:"Remark.VRRP.VRID"`
	IPAddresses        []string `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
	NetworkMaskLen     int      `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute       string   `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	Name               string   `validate:"required"`
	Description        string   `validate:"min=0,max=512"`
	Tags               types.Tags
	IconID             types.ID                        `mapconv:"Icon.ID"`
	VirtualIPAddresses []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
}

// Validate validates by field tags
func (o *LoadBalancerCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LoadBalancerCreateRequest) setDefaults() interface{} {
	return &struct {
		SwitchID           types.ID `mapconv:"Remark.Switch.ID"`
		PlanID             types.ID `mapconv:"Remark.Plan.ID/Plan.ID"`
		VRID               int      `mapconv:"Remark.VRRP.VRID"`
		IPAddresses        []string `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
		NetworkMaskLen     int      `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
		DefaultRoute       string   `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
		Name               string   `validate:"required"`
		Description        string   `validate:"min=0,max=512"`
		Tags               types.Tags
		IconID             types.ID                        `mapconv:"Icon.ID"`
		VirtualIPAddresses []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
		Class              string
	}{
		SwitchID:           o.SwitchID,
		PlanID:             o.PlanID,
		VRID:               o.VRID,
		IPAddresses:        o.IPAddresses,
		NetworkMaskLen:     o.NetworkMaskLen,
		DefaultRoute:       o.DefaultRoute,
		Name:               o.Name,
		Description:        o.Description,
		Tags:               o.Tags,
		IconID:             o.IconID,
		VirtualIPAddresses: o.VirtualIPAddresses,
		Class:              "loadbalancer",
	}
}

// GetSwitchID returns value of SwitchID
func (o *LoadBalancerCreateRequest) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *LoadBalancerCreateRequest) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetPlanID returns value of PlanID
func (o *LoadBalancerCreateRequest) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *LoadBalancerCreateRequest) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetVRID returns value of VRID
func (o *LoadBalancerCreateRequest) GetVRID() int {
	return o.VRID
}

// SetVRID sets value to VRID
func (o *LoadBalancerCreateRequest) SetVRID(v int) {
	o.VRID = v
}

// GetIPAddresses returns value of IPAddresses
func (o *LoadBalancerCreateRequest) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *LoadBalancerCreateRequest) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *LoadBalancerCreateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *LoadBalancerCreateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *LoadBalancerCreateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *LoadBalancerCreateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetName returns value of Name
func (o *LoadBalancerCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LoadBalancerCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *LoadBalancerCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *LoadBalancerCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *LoadBalancerCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *LoadBalancerCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *LoadBalancerCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *LoadBalancerCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *LoadBalancerCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *LoadBalancerCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *LoadBalancerCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *LoadBalancerCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetVirtualIPAddresses returns value of VirtualIPAddresses
func (o *LoadBalancerCreateRequest) GetVirtualIPAddresses() []*LoadBalancerVirtualIPAddress {
	return o.VirtualIPAddresses
}

// SetVirtualIPAddresses sets value to VirtualIPAddresses
func (o *LoadBalancerCreateRequest) SetVirtualIPAddresses(v []*LoadBalancerVirtualIPAddress) {
	o.VirtualIPAddresses = v
}

/*************************************************
* LoadBalancerUpdateRequest
*************************************************/

// LoadBalancerUpdateRequest represents API parameter/response structure
type LoadBalancerUpdateRequest struct {
	Name               string `validate:"required"`
	Description        string `validate:"min=0,max=512"`
	Tags               types.Tags
	IconID             types.ID                        `mapconv:"Icon.ID"`
	VirtualIPAddresses []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
}

// Validate validates by field tags
func (o *LoadBalancerUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LoadBalancerUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name               string `validate:"required"`
		Description        string `validate:"min=0,max=512"`
		Tags               types.Tags
		IconID             types.ID                        `mapconv:"Icon.ID"`
		VirtualIPAddresses []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
	}{
		Name:               o.Name,
		Description:        o.Description,
		Tags:               o.Tags,
		IconID:             o.IconID,
		VirtualIPAddresses: o.VirtualIPAddresses,
	}
}

// GetName returns value of Name
func (o *LoadBalancerUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LoadBalancerUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *LoadBalancerUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *LoadBalancerUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *LoadBalancerUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *LoadBalancerUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *LoadBalancerUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *LoadBalancerUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *LoadBalancerUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *LoadBalancerUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *LoadBalancerUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *LoadBalancerUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetVirtualIPAddresses returns value of VirtualIPAddresses
func (o *LoadBalancerUpdateRequest) GetVirtualIPAddresses() []*LoadBalancerVirtualIPAddress {
	return o.VirtualIPAddresses
}

// SetVirtualIPAddresses sets value to VirtualIPAddresses
func (o *LoadBalancerUpdateRequest) SetVirtualIPAddresses(v []*LoadBalancerVirtualIPAddress) {
	o.VirtualIPAddresses = v
}

/*************************************************
* LoadBalancerStatus
*************************************************/

// LoadBalancerStatus represents API parameter/response structure
type LoadBalancerStatus struct {
	VirtualIPAddress string
	Port             types.StringNumber
	CPS              types.StringNumber
	Servers          []*LoadBalancerServerStatus `mapconv:",recursive"`
}

// Validate validates by field tags
func (o *LoadBalancerStatus) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LoadBalancerStatus) setDefaults() interface{} {
	return &struct {
		VirtualIPAddress string
		Port             types.StringNumber
		CPS              types.StringNumber
		Servers          []*LoadBalancerServerStatus `mapconv:",recursive"`
	}{
		VirtualIPAddress: o.VirtualIPAddress,
		Port:             o.Port,
		CPS:              o.CPS,
		Servers:          o.Servers,
	}
}

// GetVirtualIPAddress returns value of VirtualIPAddress
func (o *LoadBalancerStatus) GetVirtualIPAddress() string {
	return o.VirtualIPAddress
}

// SetVirtualIPAddress sets value to VirtualIPAddress
func (o *LoadBalancerStatus) SetVirtualIPAddress(v string) {
	o.VirtualIPAddress = v
}

// GetPort returns value of Port
func (o *LoadBalancerStatus) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *LoadBalancerStatus) SetPort(v types.StringNumber) {
	o.Port = v
}

// GetCPS returns value of CPS
func (o *LoadBalancerStatus) GetCPS() types.StringNumber {
	return o.CPS
}

// SetCPS sets value to CPS
func (o *LoadBalancerStatus) SetCPS(v types.StringNumber) {
	o.CPS = v
}

// GetServers returns value of Servers
func (o *LoadBalancerStatus) GetServers() []*LoadBalancerServerStatus {
	return o.Servers
}

// SetServers sets value to Servers
func (o *LoadBalancerStatus) SetServers(v []*LoadBalancerServerStatus) {
	o.Servers = v
}

/*************************************************
* LoadBalancerServerStatus
*************************************************/

// LoadBalancerServerStatus represents API parameter/response structure
type LoadBalancerServerStatus struct {
	ActiveConn types.StringNumber
	Status     types.EServerInstanceStatus
	IPAddress  string
	Port       types.StringNumber
	CPS        types.StringNumber
}

// Validate validates by field tags
func (o *LoadBalancerServerStatus) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LoadBalancerServerStatus) setDefaults() interface{} {
	return &struct {
		ActiveConn types.StringNumber
		Status     types.EServerInstanceStatus
		IPAddress  string
		Port       types.StringNumber
		CPS        types.StringNumber
	}{
		ActiveConn: o.ActiveConn,
		Status:     o.Status,
		IPAddress:  o.IPAddress,
		Port:       o.Port,
		CPS:        o.CPS,
	}
}

// GetActiveConn returns value of ActiveConn
func (o *LoadBalancerServerStatus) GetActiveConn() types.StringNumber {
	return o.ActiveConn
}

// SetActiveConn sets value to ActiveConn
func (o *LoadBalancerServerStatus) SetActiveConn(v types.StringNumber) {
	o.ActiveConn = v
}

// GetStatus returns value of Status
func (o *LoadBalancerServerStatus) GetStatus() types.EServerInstanceStatus {
	return o.Status
}

// SetStatus sets value to Status
func (o *LoadBalancerServerStatus) SetStatus(v types.EServerInstanceStatus) {
	o.Status = v
}

// GetIPAddress returns value of IPAddress
func (o *LoadBalancerServerStatus) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *LoadBalancerServerStatus) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetPort returns value of Port
func (o *LoadBalancerServerStatus) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *LoadBalancerServerStatus) SetPort(v types.StringNumber) {
	o.Port = v
}

// GetCPS returns value of CPS
func (o *LoadBalancerServerStatus) GetCPS() types.StringNumber {
	return o.CPS
}

// SetCPS sets value to CPS
func (o *LoadBalancerServerStatus) SetCPS(v types.StringNumber) {
	o.CPS = v
}

/*************************************************
* MobileGateway
*************************************************/

// MobileGateway represents API parameter/response structure
type MobileGateway struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    types.Tags
	Availability            types.EAvailability
	Class                   string
	IconID                  types.ID `mapconv:"Icon.ID"`
	CreatedAt               time.Time
	InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
	InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
	InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
	InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
	Interfaces              []*MobileGatewayInterface   `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
	ZoneID                  types.ID                    `mapconv:"Remark.Zone.ID"`
	Settings                *MobileGatewaySetting       `mapconv:",omitempty,recursive"`
	SettingsHash            string
}

// Validate validates by field tags
func (o *MobileGateway) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGateway) setDefaults() interface{} {
	return &struct {
		ID                      types.ID
		Name                    string `validate:"required"`
		Description             string `validate:"min=0,max=512"`
		Tags                    types.Tags
		Availability            types.EAvailability
		Class                   string
		IconID                  types.ID `mapconv:"Icon.ID"`
		CreatedAt               time.Time
		InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
		InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
		InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
		InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
		Interfaces              []*MobileGatewayInterface   `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
		ZoneID                  types.ID                    `mapconv:"Remark.Zone.ID"`
		Settings                *MobileGatewaySetting       `mapconv:",omitempty,recursive"`
		SettingsHash            string
	}{
		ID:                      o.ID,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		Availability:            o.Availability,
		Class:                   o.Class,
		IconID:                  o.IconID,
		CreatedAt:               o.CreatedAt,
		InstanceHostName:        o.InstanceHostName,
		InstanceHostInfoURL:     o.InstanceHostInfoURL,
		InstanceStatus:          o.InstanceStatus,
		InstanceStatusChangedAt: o.InstanceStatusChangedAt,
		Interfaces:              o.Interfaces,
		ZoneID:                  o.ZoneID,
		Settings:                o.Settings,
		SettingsHash:            o.SettingsHash,
	}
}

// GetID returns value of ID
func (o *MobileGateway) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *MobileGateway) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *MobileGateway) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *MobileGateway) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *MobileGateway) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *MobileGateway) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *MobileGateway) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *MobileGateway) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *MobileGateway) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *MobileGateway) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *MobileGateway) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *MobileGateway) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *MobileGateway) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *MobileGateway) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *MobileGateway) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *MobileGateway) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *MobileGateway) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *MobileGateway) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetClass returns value of Class
func (o *MobileGateway) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *MobileGateway) SetClass(v string) {
	o.Class = v
}

// GetIconID returns value of IconID
func (o *MobileGateway) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *MobileGateway) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *MobileGateway) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *MobileGateway) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetInstanceHostName returns value of InstanceHostName
func (o *MobileGateway) GetInstanceHostName() string {
	return o.InstanceHostName
}

// SetInstanceHostName sets value to InstanceHostName
func (o *MobileGateway) SetInstanceHostName(v string) {
	o.InstanceHostName = v
}

// GetInstanceHostInfoURL returns value of InstanceHostInfoURL
func (o *MobileGateway) GetInstanceHostInfoURL() string {
	return o.InstanceHostInfoURL
}

// SetInstanceHostInfoURL sets value to InstanceHostInfoURL
func (o *MobileGateway) SetInstanceHostInfoURL(v string) {
	o.InstanceHostInfoURL = v
}

// GetInstanceStatus returns value of InstanceStatus
func (o *MobileGateway) GetInstanceStatus() types.EServerInstanceStatus {
	return o.InstanceStatus
}

// SetInstanceStatus sets value to InstanceStatus
func (o *MobileGateway) SetInstanceStatus(v types.EServerInstanceStatus) {
	o.InstanceStatus = v
}

// GetInstanceStatusChangedAt returns value of InstanceStatusChangedAt
func (o *MobileGateway) GetInstanceStatusChangedAt() time.Time {
	return o.InstanceStatusChangedAt
}

// SetInstanceStatusChangedAt sets value to InstanceStatusChangedAt
func (o *MobileGateway) SetInstanceStatusChangedAt(v time.Time) {
	o.InstanceStatusChangedAt = v
}

// GetInterfaces returns value of Interfaces
func (o *MobileGateway) GetInterfaces() []*MobileGatewayInterface {
	return o.Interfaces
}

// SetInterfaces sets value to Interfaces
func (o *MobileGateway) SetInterfaces(v []*MobileGatewayInterface) {
	o.Interfaces = v
}

// GetZoneID returns value of ZoneID
func (o *MobileGateway) GetZoneID() types.ID {
	return o.ZoneID
}

// SetZoneID sets value to ZoneID
func (o *MobileGateway) SetZoneID(v types.ID) {
	o.ZoneID = v
}

// GetSettings returns value of Settings
func (o *MobileGateway) GetSettings() *MobileGatewaySetting {
	return o.Settings
}

// SetSettings sets value to Settings
func (o *MobileGateway) SetSettings(v *MobileGatewaySetting) {
	o.Settings = v
}

// GetSettingsHash returns value of SettingsHash
func (o *MobileGateway) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *MobileGateway) SetSettingsHash(v string) {
	o.SettingsHash = v
}

/*************************************************
* MobileGatewayInterface
*************************************************/

// MobileGatewayInterface represents API parameter/response structure
type MobileGatewayInterface struct {
	ID                              types.ID
	MACAddress                      string
	IPAddress                       string
	UserIPAddress                   string
	HostName                        string
	SwitchID                        types.ID           `mapconv:"Switch.ID"`
	SwitchName                      string             `mapconv:"Switch.Name"`
	SwitchScope                     types.EScope       `mapconv:"Switch.Scope"`
	UserSubnetDefaultRoute          string             `mapconv:"Switch.UserSubnet.DefaultRoute"`
	UserSubnetNetworkMaskLen        int                `mapconv:"Switch.UserSubnet.NetworkMaskLen"`
	SubnetDefaultRoute              string             `mapconv:"Switch.Subnet.DefaultRoute"`
	SubnetNetworkMaskLen            int                `mapconv:"Switch.Subnet.NetworkMaskLen"`
	SubnetNetworkAddress            string             `mapconv:"Switch.Subnet.NetworkAddress"`
	SubnetBandWidthMbps             int                `mapconv:"Switch.Subnet.Internet.BandWidthMbps"`
	PacketFilterID                  string             `mapconv:"PacketFilter.ID"`
	PacketFilterName                string             `mapconv:"PacketFilter.Name"`
	PacketFilterRequiredHostVersion types.StringNumber `mapconv:"PacketFilter.RequiredHostVersionn"`
	UpstreamType                    types.EUpstreamNetworkType
	Index                           int `mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MobileGatewayInterface) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayInterface) setDefaults() interface{} {
	return &struct {
		ID                              types.ID
		MACAddress                      string
		IPAddress                       string
		UserIPAddress                   string
		HostName                        string
		SwitchID                        types.ID           `mapconv:"Switch.ID"`
		SwitchName                      string             `mapconv:"Switch.Name"`
		SwitchScope                     types.EScope       `mapconv:"Switch.Scope"`
		UserSubnetDefaultRoute          string             `mapconv:"Switch.UserSubnet.DefaultRoute"`
		UserSubnetNetworkMaskLen        int                `mapconv:"Switch.UserSubnet.NetworkMaskLen"`
		SubnetDefaultRoute              string             `mapconv:"Switch.Subnet.DefaultRoute"`
		SubnetNetworkMaskLen            int                `mapconv:"Switch.Subnet.NetworkMaskLen"`
		SubnetNetworkAddress            string             `mapconv:"Switch.Subnet.NetworkAddress"`
		SubnetBandWidthMbps             int                `mapconv:"Switch.Subnet.Internet.BandWidthMbps"`
		PacketFilterID                  string             `mapconv:"PacketFilter.ID"`
		PacketFilterName                string             `mapconv:"PacketFilter.Name"`
		PacketFilterRequiredHostVersion types.StringNumber `mapconv:"PacketFilter.RequiredHostVersionn"`
		UpstreamType                    types.EUpstreamNetworkType
		Index                           int `mapconv:",omitempty"`
	}{
		ID:                              o.ID,
		MACAddress:                      o.MACAddress,
		IPAddress:                       o.IPAddress,
		UserIPAddress:                   o.UserIPAddress,
		HostName:                        o.HostName,
		SwitchID:                        o.SwitchID,
		SwitchName:                      o.SwitchName,
		SwitchScope:                     o.SwitchScope,
		UserSubnetDefaultRoute:          o.UserSubnetDefaultRoute,
		UserSubnetNetworkMaskLen:        o.UserSubnetNetworkMaskLen,
		SubnetDefaultRoute:              o.SubnetDefaultRoute,
		SubnetNetworkMaskLen:            o.SubnetNetworkMaskLen,
		SubnetNetworkAddress:            o.SubnetNetworkAddress,
		SubnetBandWidthMbps:             o.SubnetBandWidthMbps,
		PacketFilterID:                  o.PacketFilterID,
		PacketFilterName:                o.PacketFilterName,
		PacketFilterRequiredHostVersion: o.PacketFilterRequiredHostVersion,
		UpstreamType:                    o.UpstreamType,
		Index:                           o.Index,
	}
}

// GetID returns value of ID
func (o *MobileGatewayInterface) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *MobileGatewayInterface) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *MobileGatewayInterface) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *MobileGatewayInterface) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *MobileGatewayInterface) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *MobileGatewayInterface) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetMACAddress returns value of MACAddress
func (o *MobileGatewayInterface) GetMACAddress() string {
	return o.MACAddress
}

// SetMACAddress sets value to MACAddress
func (o *MobileGatewayInterface) SetMACAddress(v string) {
	o.MACAddress = v
}

// GetIPAddress returns value of IPAddress
func (o *MobileGatewayInterface) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *MobileGatewayInterface) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetUserIPAddress returns value of UserIPAddress
func (o *MobileGatewayInterface) GetUserIPAddress() string {
	return o.UserIPAddress
}

// SetUserIPAddress sets value to UserIPAddress
func (o *MobileGatewayInterface) SetUserIPAddress(v string) {
	o.UserIPAddress = v
}

// GetHostName returns value of HostName
func (o *MobileGatewayInterface) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *MobileGatewayInterface) SetHostName(v string) {
	o.HostName = v
}

// GetSwitchID returns value of SwitchID
func (o *MobileGatewayInterface) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *MobileGatewayInterface) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetSwitchName returns value of SwitchName
func (o *MobileGatewayInterface) GetSwitchName() string {
	return o.SwitchName
}

// SetSwitchName sets value to SwitchName
func (o *MobileGatewayInterface) SetSwitchName(v string) {
	o.SwitchName = v
}

// GetSwitchScope returns value of SwitchScope
func (o *MobileGatewayInterface) GetSwitchScope() types.EScope {
	return o.SwitchScope
}

// SetSwitchScope sets value to SwitchScope
func (o *MobileGatewayInterface) SetSwitchScope(v types.EScope) {
	o.SwitchScope = v
}

// GetUserSubnetDefaultRoute returns value of UserSubnetDefaultRoute
func (o *MobileGatewayInterface) GetUserSubnetDefaultRoute() string {
	return o.UserSubnetDefaultRoute
}

// SetUserSubnetDefaultRoute sets value to UserSubnetDefaultRoute
func (o *MobileGatewayInterface) SetUserSubnetDefaultRoute(v string) {
	o.UserSubnetDefaultRoute = v
}

// GetUserSubnetNetworkMaskLen returns value of UserSubnetNetworkMaskLen
func (o *MobileGatewayInterface) GetUserSubnetNetworkMaskLen() int {
	return o.UserSubnetNetworkMaskLen
}

// SetUserSubnetNetworkMaskLen sets value to UserSubnetNetworkMaskLen
func (o *MobileGatewayInterface) SetUserSubnetNetworkMaskLen(v int) {
	o.UserSubnetNetworkMaskLen = v
}

// GetSubnetDefaultRoute returns value of SubnetDefaultRoute
func (o *MobileGatewayInterface) GetSubnetDefaultRoute() string {
	return o.SubnetDefaultRoute
}

// SetSubnetDefaultRoute sets value to SubnetDefaultRoute
func (o *MobileGatewayInterface) SetSubnetDefaultRoute(v string) {
	o.SubnetDefaultRoute = v
}

// GetSubnetNetworkMaskLen returns value of SubnetNetworkMaskLen
func (o *MobileGatewayInterface) GetSubnetNetworkMaskLen() int {
	return o.SubnetNetworkMaskLen
}

// SetSubnetNetworkMaskLen sets value to SubnetNetworkMaskLen
func (o *MobileGatewayInterface) SetSubnetNetworkMaskLen(v int) {
	o.SubnetNetworkMaskLen = v
}

// GetSubnetNetworkAddress returns value of SubnetNetworkAddress
func (o *MobileGatewayInterface) GetSubnetNetworkAddress() string {
	return o.SubnetNetworkAddress
}

// SetSubnetNetworkAddress sets value to SubnetNetworkAddress
func (o *MobileGatewayInterface) SetSubnetNetworkAddress(v string) {
	o.SubnetNetworkAddress = v
}

// GetSubnetBandWidthMbps returns value of SubnetBandWidthMbps
func (o *MobileGatewayInterface) GetSubnetBandWidthMbps() int {
	return o.SubnetBandWidthMbps
}

// SetSubnetBandWidthMbps sets value to SubnetBandWidthMbps
func (o *MobileGatewayInterface) SetSubnetBandWidthMbps(v int) {
	o.SubnetBandWidthMbps = v
}

// GetPacketFilterID returns value of PacketFilterID
func (o *MobileGatewayInterface) GetPacketFilterID() string {
	return o.PacketFilterID
}

// SetPacketFilterID sets value to PacketFilterID
func (o *MobileGatewayInterface) SetPacketFilterID(v string) {
	o.PacketFilterID = v
}

// GetPacketFilterName returns value of PacketFilterName
func (o *MobileGatewayInterface) GetPacketFilterName() string {
	return o.PacketFilterName
}

// SetPacketFilterName sets value to PacketFilterName
func (o *MobileGatewayInterface) SetPacketFilterName(v string) {
	o.PacketFilterName = v
}

// GetPacketFilterRequiredHostVersion returns value of PacketFilterRequiredHostVersion
func (o *MobileGatewayInterface) GetPacketFilterRequiredHostVersion() types.StringNumber {
	return o.PacketFilterRequiredHostVersion
}

// SetPacketFilterRequiredHostVersion sets value to PacketFilterRequiredHostVersion
func (o *MobileGatewayInterface) SetPacketFilterRequiredHostVersion(v types.StringNumber) {
	o.PacketFilterRequiredHostVersion = v
}

// GetUpstreamType returns value of UpstreamType
func (o *MobileGatewayInterface) GetUpstreamType() types.EUpstreamNetworkType {
	return o.UpstreamType
}

// SetUpstreamType sets value to UpstreamType
func (o *MobileGatewayInterface) SetUpstreamType(v types.EUpstreamNetworkType) {
	o.UpstreamType = v
}

// GetIndex returns value of Index
func (o *MobileGatewayInterface) GetIndex() int {
	return o.Index
}

// SetIndex sets value to Index
func (o *MobileGatewayInterface) SetIndex(v int) {
	o.Index = v
}

/*************************************************
* MobileGatewaySetting
*************************************************/

// MobileGatewaySetting represents API parameter/response structure
type MobileGatewaySetting struct {
	Interfaces                      []*MobileGatewayInterfaceSetting `json:",omitempty" mapconv:"MobileGateway.[]Interfaces,omitempty,recursive"`
	StaticRoute                     []*MobileGatewayStaticRoute      `json:",omitempty" mapconv:"MobileGateway.[]StaticRoutes,omitempty,recursive"`
	InternetConnectionEnabled       types.StringFlag                 `mapconv:"MobileGateway.InternetConnection.Enabled"`
	InterDeviceCommunicationEnabled types.StringFlag                 `mapconv:"MobileGateway.InterDeviceCommunication.Enabled"`
}

// Validate validates by field tags
func (o *MobileGatewaySetting) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewaySetting) setDefaults() interface{} {
	return &struct {
		Interfaces                      []*MobileGatewayInterfaceSetting `json:",omitempty" mapconv:"MobileGateway.[]Interfaces,omitempty,recursive"`
		StaticRoute                     []*MobileGatewayStaticRoute      `json:",omitempty" mapconv:"MobileGateway.[]StaticRoutes,omitempty,recursive"`
		InternetConnectionEnabled       types.StringFlag                 `mapconv:"MobileGateway.InternetConnection.Enabled"`
		InterDeviceCommunicationEnabled types.StringFlag                 `mapconv:"MobileGateway.InterDeviceCommunication.Enabled"`
	}{
		Interfaces:                      o.Interfaces,
		StaticRoute:                     o.StaticRoute,
		InternetConnectionEnabled:       o.InternetConnectionEnabled,
		InterDeviceCommunicationEnabled: o.InterDeviceCommunicationEnabled,
	}
}

// GetInterfaces returns value of Interfaces
func (o *MobileGatewaySetting) GetInterfaces() []*MobileGatewayInterfaceSetting {
	return o.Interfaces
}

// SetInterfaces sets value to Interfaces
func (o *MobileGatewaySetting) SetInterfaces(v []*MobileGatewayInterfaceSetting) {
	o.Interfaces = v
}

// GetStaticRoute returns value of StaticRoute
func (o *MobileGatewaySetting) GetStaticRoute() []*MobileGatewayStaticRoute {
	return o.StaticRoute
}

// SetStaticRoute sets value to StaticRoute
func (o *MobileGatewaySetting) SetStaticRoute(v []*MobileGatewayStaticRoute) {
	o.StaticRoute = v
}

// GetInternetConnectionEnabled returns value of InternetConnectionEnabled
func (o *MobileGatewaySetting) GetInternetConnectionEnabled() types.StringFlag {
	return o.InternetConnectionEnabled
}

// SetInternetConnectionEnabled sets value to InternetConnectionEnabled
func (o *MobileGatewaySetting) SetInternetConnectionEnabled(v types.StringFlag) {
	o.InternetConnectionEnabled = v
}

// GetInterDeviceCommunicationEnabled returns value of InterDeviceCommunicationEnabled
func (o *MobileGatewaySetting) GetInterDeviceCommunicationEnabled() types.StringFlag {
	return o.InterDeviceCommunicationEnabled
}

// SetInterDeviceCommunicationEnabled sets value to InterDeviceCommunicationEnabled
func (o *MobileGatewaySetting) SetInterDeviceCommunicationEnabled(v types.StringFlag) {
	o.InterDeviceCommunicationEnabled = v
}

/*************************************************
* MobileGatewayInterfaceSetting
*************************************************/

// MobileGatewayInterfaceSetting represents API parameter/response structure
type MobileGatewayInterfaceSetting struct {
	IPAddress      []string
	NetworkMaskLen int
	Index          int
}

// Validate validates by field tags
func (o *MobileGatewayInterfaceSetting) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayInterfaceSetting) setDefaults() interface{} {
	return &struct {
		IPAddress      []string
		NetworkMaskLen int
		Index          int
	}{
		IPAddress:      o.IPAddress,
		NetworkMaskLen: o.NetworkMaskLen,
		Index:          o.Index,
	}
}

// GetIPAddress returns value of IPAddress
func (o *MobileGatewayInterfaceSetting) GetIPAddress() []string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *MobileGatewayInterfaceSetting) SetIPAddress(v []string) {
	o.IPAddress = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *MobileGatewayInterfaceSetting) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *MobileGatewayInterfaceSetting) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetIndex returns value of Index
func (o *MobileGatewayInterfaceSetting) GetIndex() int {
	return o.Index
}

// SetIndex sets value to Index
func (o *MobileGatewayInterfaceSetting) SetIndex(v int) {
	o.Index = v
}

/*************************************************
* MobileGatewayStaticRoute
*************************************************/

// MobileGatewayStaticRoute represents API parameter/response structure
type MobileGatewayStaticRoute struct {
	Prefix  string
	NextHop string
}

// Validate validates by field tags
func (o *MobileGatewayStaticRoute) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayStaticRoute) setDefaults() interface{} {
	return &struct {
		Prefix  string
		NextHop string
	}{
		Prefix:  o.Prefix,
		NextHop: o.NextHop,
	}
}

// GetPrefix returns value of Prefix
func (o *MobileGatewayStaticRoute) GetPrefix() string {
	return o.Prefix
}

// SetPrefix sets value to Prefix
func (o *MobileGatewayStaticRoute) SetPrefix(v string) {
	o.Prefix = v
}

// GetNextHop returns value of NextHop
func (o *MobileGatewayStaticRoute) GetNextHop() string {
	return o.NextHop
}

// SetNextHop sets value to NextHop
func (o *MobileGatewayStaticRoute) SetNextHop(v string) {
	o.NextHop = v
}

/*************************************************
* MobileGatewayCreateRequest
*************************************************/

// MobileGatewayCreateRequest represents API parameter/response structure
type MobileGatewayCreateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID                    `mapconv:"Icon.ID"`
	Settings    *MobileGatewaySettingCreate `json:",omitempty" mapconv:",omitempty,recursive"`
}

// Validate validates by field tags
func (o *MobileGatewayCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayCreateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID                    `mapconv:"Icon.ID"`
		Settings    *MobileGatewaySettingCreate `json:",omitempty" mapconv:",omitempty,recursive"`
		Class       string
		PlanID      types.ID `mapconv:"Remark.Plan.ID/Plan.ID"`
		SwitchID    string   `mapconv:"Remark.Switch.Scope"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
		Settings:    o.Settings,
		Class:       "mobilegateway",
		PlanID:      types.ID(1),
		SwitchID:    "shared",
	}
}

// GetName returns value of Name
func (o *MobileGatewayCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *MobileGatewayCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *MobileGatewayCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *MobileGatewayCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *MobileGatewayCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *MobileGatewayCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *MobileGatewayCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *MobileGatewayCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *MobileGatewayCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *MobileGatewayCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *MobileGatewayCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *MobileGatewayCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetSettings returns value of Settings
func (o *MobileGatewayCreateRequest) GetSettings() *MobileGatewaySettingCreate {
	return o.Settings
}

// SetSettings sets value to Settings
func (o *MobileGatewayCreateRequest) SetSettings(v *MobileGatewaySettingCreate) {
	o.Settings = v
}

/*************************************************
* MobileGatewaySettingCreate
*************************************************/

// MobileGatewaySettingCreate represents API parameter/response structure
type MobileGatewaySettingCreate struct {
	StaticRoute                     []*MobileGatewayStaticRoute `json:",omitempty" mapconv:"MobileGateway.[]StaticRoutes,omitempty,recursive"`
	InternetConnectionEnabled       types.StringFlag            `mapconv:"MobileGateway.InternetConnection.Enabled"`
	InterDeviceCommunicationEnabled types.StringFlag            `mapconv:"MobileGateway.InterDeviceCommunication.Enabled"`
}

// Validate validates by field tags
func (o *MobileGatewaySettingCreate) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewaySettingCreate) setDefaults() interface{} {
	return &struct {
		StaticRoute                     []*MobileGatewayStaticRoute `json:",omitempty" mapconv:"MobileGateway.[]StaticRoutes,omitempty,recursive"`
		InternetConnectionEnabled       types.StringFlag            `mapconv:"MobileGateway.InternetConnection.Enabled"`
		InterDeviceCommunicationEnabled types.StringFlag            `mapconv:"MobileGateway.InterDeviceCommunication.Enabled"`
	}{
		StaticRoute:                     o.StaticRoute,
		InternetConnectionEnabled:       o.InternetConnectionEnabled,
		InterDeviceCommunicationEnabled: o.InterDeviceCommunicationEnabled,
	}
}

// GetStaticRoute returns value of StaticRoute
func (o *MobileGatewaySettingCreate) GetStaticRoute() []*MobileGatewayStaticRoute {
	return o.StaticRoute
}

// SetStaticRoute sets value to StaticRoute
func (o *MobileGatewaySettingCreate) SetStaticRoute(v []*MobileGatewayStaticRoute) {
	o.StaticRoute = v
}

// GetInternetConnectionEnabled returns value of InternetConnectionEnabled
func (o *MobileGatewaySettingCreate) GetInternetConnectionEnabled() types.StringFlag {
	return o.InternetConnectionEnabled
}

// SetInternetConnectionEnabled sets value to InternetConnectionEnabled
func (o *MobileGatewaySettingCreate) SetInternetConnectionEnabled(v types.StringFlag) {
	o.InternetConnectionEnabled = v
}

// GetInterDeviceCommunicationEnabled returns value of InterDeviceCommunicationEnabled
func (o *MobileGatewaySettingCreate) GetInterDeviceCommunicationEnabled() types.StringFlag {
	return o.InterDeviceCommunicationEnabled
}

// SetInterDeviceCommunicationEnabled sets value to InterDeviceCommunicationEnabled
func (o *MobileGatewaySettingCreate) SetInterDeviceCommunicationEnabled(v types.StringFlag) {
	o.InterDeviceCommunicationEnabled = v
}

/*************************************************
* MobileGatewayUpdateRequest
*************************************************/

// MobileGatewayUpdateRequest represents API parameter/response structure
type MobileGatewayUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID              `mapconv:"Icon.ID"`
	Settings    *MobileGatewaySetting `json:",omitempty" mapconv:",omitempty,recursive"`
}

// Validate validates by field tags
func (o *MobileGatewayUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID              `mapconv:"Icon.ID"`
		Settings    *MobileGatewaySetting `json:",omitempty" mapconv:",omitempty,recursive"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
		Settings:    o.Settings,
	}
}

// GetName returns value of Name
func (o *MobileGatewayUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *MobileGatewayUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *MobileGatewayUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *MobileGatewayUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *MobileGatewayUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *MobileGatewayUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *MobileGatewayUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *MobileGatewayUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *MobileGatewayUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *MobileGatewayUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *MobileGatewayUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *MobileGatewayUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetSettings returns value of Settings
func (o *MobileGatewayUpdateRequest) GetSettings() *MobileGatewaySetting {
	return o.Settings
}

// SetSettings sets value to Settings
func (o *MobileGatewayUpdateRequest) SetSettings(v *MobileGatewaySetting) {
	o.Settings = v
}

/*************************************************
* MobileGatewayDNSSetting
*************************************************/

// MobileGatewayDNSSetting represents API parameter/response structure
type MobileGatewayDNSSetting struct {
	DNS1 string
	DNS2 string
}

// Validate validates by field tags
func (o *MobileGatewayDNSSetting) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayDNSSetting) setDefaults() interface{} {
	return &struct {
		DNS1 string
		DNS2 string
	}{
		DNS1: o.DNS1,
		DNS2: o.DNS2,
	}
}

// GetDNS1 returns value of DNS1
func (o *MobileGatewayDNSSetting) GetDNS1() string {
	return o.DNS1
}

// SetDNS1 sets value to DNS1
func (o *MobileGatewayDNSSetting) SetDNS1(v string) {
	o.DNS1 = v
}

// GetDNS2 returns value of DNS2
func (o *MobileGatewayDNSSetting) GetDNS2() string {
	return o.DNS2
}

// SetDNS2 sets value to DNS2
func (o *MobileGatewayDNSSetting) SetDNS2(v string) {
	o.DNS2 = v
}

/*************************************************
* MobileGatewaySIMRoute
*************************************************/

// MobileGatewaySIMRoute represents API parameter/response structure
type MobileGatewaySIMRoute struct {
	ResourceID string
	Prefix     string
	ICCID      string
}

// Validate validates by field tags
func (o *MobileGatewaySIMRoute) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewaySIMRoute) setDefaults() interface{} {
	return &struct {
		ResourceID string
		Prefix     string
		ICCID      string
	}{
		ResourceID: o.ResourceID,
		Prefix:     o.Prefix,
		ICCID:      o.ICCID,
	}
}

// GetResourceID returns value of ResourceID
func (o *MobileGatewaySIMRoute) GetResourceID() string {
	return o.ResourceID
}

// SetResourceID sets value to ResourceID
func (o *MobileGatewaySIMRoute) SetResourceID(v string) {
	o.ResourceID = v
}

// GetPrefix returns value of Prefix
func (o *MobileGatewaySIMRoute) GetPrefix() string {
	return o.Prefix
}

// SetPrefix sets value to Prefix
func (o *MobileGatewaySIMRoute) SetPrefix(v string) {
	o.Prefix = v
}

// GetICCID returns value of ICCID
func (o *MobileGatewaySIMRoute) GetICCID() string {
	return o.ICCID
}

// SetICCID sets value to ICCID
func (o *MobileGatewaySIMRoute) SetICCID(v string) {
	o.ICCID = v
}

/*************************************************
* MobileGatewaySIMRouteParam
*************************************************/

// MobileGatewaySIMRouteParam represents API parameter/response structure
type MobileGatewaySIMRouteParam struct {
	ResourceID string
	Prefix     string
}

// Validate validates by field tags
func (o *MobileGatewaySIMRouteParam) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewaySIMRouteParam) setDefaults() interface{} {
	return &struct {
		ResourceID string
		Prefix     string
	}{
		ResourceID: o.ResourceID,
		Prefix:     o.Prefix,
	}
}

// GetResourceID returns value of ResourceID
func (o *MobileGatewaySIMRouteParam) GetResourceID() string {
	return o.ResourceID
}

// SetResourceID sets value to ResourceID
func (o *MobileGatewaySIMRouteParam) SetResourceID(v string) {
	o.ResourceID = v
}

// GetPrefix returns value of Prefix
func (o *MobileGatewaySIMRouteParam) GetPrefix() string {
	return o.Prefix
}

// SetPrefix sets value to Prefix
func (o *MobileGatewaySIMRouteParam) SetPrefix(v string) {
	o.Prefix = v
}

/*************************************************
* MobileGatewaySIMInfo
*************************************************/

// MobileGatewaySIMInfo represents API parameter/response structure
type MobileGatewaySIMInfo struct {
	ICCID                      string
	IMSI                       []string
	IP                         string
	SessionStatus              string
	IMEILock                   bool
	Registered                 bool
	Activated                  bool
	ResourceID                 string
	RegisteredDate             time.Time
	ActivatedDate              time.Time
	DeactivatedDate            time.Time
	SIMGroupID                 string
	TrafficBytesOfCurrentMonth *SIMTrafficBytes `mapconv:",recursive"`
	ConnectedIMEI              string
}

// Validate validates by field tags
func (o *MobileGatewaySIMInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewaySIMInfo) setDefaults() interface{} {
	return &struct {
		ICCID                      string
		IMSI                       []string
		IP                         string
		SessionStatus              string
		IMEILock                   bool
		Registered                 bool
		Activated                  bool
		ResourceID                 string
		RegisteredDate             time.Time
		ActivatedDate              time.Time
		DeactivatedDate            time.Time
		SIMGroupID                 string
		TrafficBytesOfCurrentMonth *SIMTrafficBytes `mapconv:",recursive"`
		ConnectedIMEI              string
	}{
		ICCID:                      o.ICCID,
		IMSI:                       o.IMSI,
		IP:                         o.IP,
		SessionStatus:              o.SessionStatus,
		IMEILock:                   o.IMEILock,
		Registered:                 o.Registered,
		Activated:                  o.Activated,
		ResourceID:                 o.ResourceID,
		RegisteredDate:             o.RegisteredDate,
		ActivatedDate:              o.ActivatedDate,
		DeactivatedDate:            o.DeactivatedDate,
		SIMGroupID:                 o.SIMGroupID,
		TrafficBytesOfCurrentMonth: o.TrafficBytesOfCurrentMonth,
		ConnectedIMEI:              o.ConnectedIMEI,
	}
}

// GetICCID returns value of ICCID
func (o *MobileGatewaySIMInfo) GetICCID() string {
	return o.ICCID
}

// SetICCID sets value to ICCID
func (o *MobileGatewaySIMInfo) SetICCID(v string) {
	o.ICCID = v
}

// GetIMSI returns value of IMSI
func (o *MobileGatewaySIMInfo) GetIMSI() []string {
	return o.IMSI
}

// SetIMSI sets value to IMSI
func (o *MobileGatewaySIMInfo) SetIMSI(v []string) {
	o.IMSI = v
}

// GetIP returns value of IP
func (o *MobileGatewaySIMInfo) GetIP() string {
	return o.IP
}

// SetIP sets value to IP
func (o *MobileGatewaySIMInfo) SetIP(v string) {
	o.IP = v
}

// GetSessionStatus returns value of SessionStatus
func (o *MobileGatewaySIMInfo) GetSessionStatus() string {
	return o.SessionStatus
}

// SetSessionStatus sets value to SessionStatus
func (o *MobileGatewaySIMInfo) SetSessionStatus(v string) {
	o.SessionStatus = v
}

// GetIMEILock returns value of IMEILock
func (o *MobileGatewaySIMInfo) GetIMEILock() bool {
	return o.IMEILock
}

// SetIMEILock sets value to IMEILock
func (o *MobileGatewaySIMInfo) SetIMEILock(v bool) {
	o.IMEILock = v
}

// GetRegistered returns value of Registered
func (o *MobileGatewaySIMInfo) GetRegistered() bool {
	return o.Registered
}

// SetRegistered sets value to Registered
func (o *MobileGatewaySIMInfo) SetRegistered(v bool) {
	o.Registered = v
}

// GetActivated returns value of Activated
func (o *MobileGatewaySIMInfo) GetActivated() bool {
	return o.Activated
}

// SetActivated sets value to Activated
func (o *MobileGatewaySIMInfo) SetActivated(v bool) {
	o.Activated = v
}

// GetResourceID returns value of ResourceID
func (o *MobileGatewaySIMInfo) GetResourceID() string {
	return o.ResourceID
}

// SetResourceID sets value to ResourceID
func (o *MobileGatewaySIMInfo) SetResourceID(v string) {
	o.ResourceID = v
}

// GetRegisteredDate returns value of RegisteredDate
func (o *MobileGatewaySIMInfo) GetRegisteredDate() time.Time {
	return o.RegisteredDate
}

// SetRegisteredDate sets value to RegisteredDate
func (o *MobileGatewaySIMInfo) SetRegisteredDate(v time.Time) {
	o.RegisteredDate = v
}

// GetActivatedDate returns value of ActivatedDate
func (o *MobileGatewaySIMInfo) GetActivatedDate() time.Time {
	return o.ActivatedDate
}

// SetActivatedDate sets value to ActivatedDate
func (o *MobileGatewaySIMInfo) SetActivatedDate(v time.Time) {
	o.ActivatedDate = v
}

// GetDeactivatedDate returns value of DeactivatedDate
func (o *MobileGatewaySIMInfo) GetDeactivatedDate() time.Time {
	return o.DeactivatedDate
}

// SetDeactivatedDate sets value to DeactivatedDate
func (o *MobileGatewaySIMInfo) SetDeactivatedDate(v time.Time) {
	o.DeactivatedDate = v
}

// GetSIMGroupID returns value of SIMGroupID
func (o *MobileGatewaySIMInfo) GetSIMGroupID() string {
	return o.SIMGroupID
}

// SetSIMGroupID sets value to SIMGroupID
func (o *MobileGatewaySIMInfo) SetSIMGroupID(v string) {
	o.SIMGroupID = v
}

// GetTrafficBytesOfCurrentMonth returns value of TrafficBytesOfCurrentMonth
func (o *MobileGatewaySIMInfo) GetTrafficBytesOfCurrentMonth() *SIMTrafficBytes {
	return o.TrafficBytesOfCurrentMonth
}

// SetTrafficBytesOfCurrentMonth sets value to TrafficBytesOfCurrentMonth
func (o *MobileGatewaySIMInfo) SetTrafficBytesOfCurrentMonth(v *SIMTrafficBytes) {
	o.TrafficBytesOfCurrentMonth = v
}

// GetConnectedIMEI returns value of ConnectedIMEI
func (o *MobileGatewaySIMInfo) GetConnectedIMEI() string {
	return o.ConnectedIMEI
}

// SetConnectedIMEI sets value to ConnectedIMEI
func (o *MobileGatewaySIMInfo) SetConnectedIMEI(v string) {
	o.ConnectedIMEI = v
}

/*************************************************
* SIMTrafficBytes
*************************************************/

// SIMTrafficBytes represents API parameter/response structure
type SIMTrafficBytes struct {
	UplinkBytes   int64
	DownlinkBytes int64
}

// Validate validates by field tags
func (o *SIMTrafficBytes) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIMTrafficBytes) setDefaults() interface{} {
	return &struct {
		UplinkBytes   int64
		DownlinkBytes int64
	}{
		UplinkBytes:   o.UplinkBytes,
		DownlinkBytes: o.DownlinkBytes,
	}
}

// GetUplinkBytes returns value of UplinkBytes
func (o *SIMTrafficBytes) GetUplinkBytes() int64 {
	return o.UplinkBytes
}

// SetUplinkBytes sets value to UplinkBytes
func (o *SIMTrafficBytes) SetUplinkBytes(v int64) {
	o.UplinkBytes = v
}

// GetDownlinkBytes returns value of DownlinkBytes
func (o *SIMTrafficBytes) GetDownlinkBytes() int64 {
	return o.DownlinkBytes
}

// SetDownlinkBytes sets value to DownlinkBytes
func (o *SIMTrafficBytes) SetDownlinkBytes(v int64) {
	o.DownlinkBytes = v
}

/*************************************************
* MobileGatewayAddSIMRequest
*************************************************/

// MobileGatewayAddSIMRequest represents API parameter/response structure
type MobileGatewayAddSIMRequest struct {
	SIMID string `json:"resource_id" mapconv:"ResourceID"`
}

// Validate validates by field tags
func (o *MobileGatewayAddSIMRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayAddSIMRequest) setDefaults() interface{} {
	return &struct {
		SIMID string `json:"resource_id" mapconv:"ResourceID"`
	}{
		SIMID: o.SIMID,
	}
}

// GetSIMID returns value of SIMID
func (o *MobileGatewayAddSIMRequest) GetSIMID() string {
	return o.SIMID
}

// SetSIMID sets value to SIMID
func (o *MobileGatewayAddSIMRequest) SetSIMID(v string) {
	o.SIMID = v
}

/*************************************************
* MobileGatewaySIMLogs
*************************************************/

// MobileGatewaySIMLogs represents API parameter/response structure
type MobileGatewaySIMLogs struct {
	Date          time.Time
	SessionStatus string
	ResourceID    string
	IMEI          string
	IMSI          string
}

// Validate validates by field tags
func (o *MobileGatewaySIMLogs) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewaySIMLogs) setDefaults() interface{} {
	return &struct {
		Date          time.Time
		SessionStatus string
		ResourceID    string
		IMEI          string
		IMSI          string
	}{
		Date:          o.Date,
		SessionStatus: o.SessionStatus,
		ResourceID:    o.ResourceID,
		IMEI:          o.IMEI,
		IMSI:          o.IMSI,
	}
}

// GetDate returns value of Date
func (o *MobileGatewaySIMLogs) GetDate() time.Time {
	return o.Date
}

// SetDate sets value to Date
func (o *MobileGatewaySIMLogs) SetDate(v time.Time) {
	o.Date = v
}

// GetSessionStatus returns value of SessionStatus
func (o *MobileGatewaySIMLogs) GetSessionStatus() string {
	return o.SessionStatus
}

// SetSessionStatus sets value to SessionStatus
func (o *MobileGatewaySIMLogs) SetSessionStatus(v string) {
	o.SessionStatus = v
}

// GetResourceID returns value of ResourceID
func (o *MobileGatewaySIMLogs) GetResourceID() string {
	return o.ResourceID
}

// SetResourceID sets value to ResourceID
func (o *MobileGatewaySIMLogs) SetResourceID(v string) {
	o.ResourceID = v
}

// GetIMEI returns value of IMEI
func (o *MobileGatewaySIMLogs) GetIMEI() string {
	return o.IMEI
}

// SetIMEI sets value to IMEI
func (o *MobileGatewaySIMLogs) SetIMEI(v string) {
	o.IMEI = v
}

// GetIMSI returns value of IMSI
func (o *MobileGatewaySIMLogs) GetIMSI() string {
	return o.IMSI
}

// SetIMSI sets value to IMSI
func (o *MobileGatewaySIMLogs) SetIMSI(v string) {
	o.IMSI = v
}

/*************************************************
* MobileGatewayTrafficControl
*************************************************/

// MobileGatewayTrafficControl represents API parameter/response structure
type MobileGatewayTrafficControl struct {
	TrafficQuotaInMB       int
	BandWidthLimitInKbps   int
	EmailNotifyEnabled     bool   `mapconv:"EMailConfig.Enabled"`
	SlackNotifyEnabled     bool   `mapconv:"SlackConfig.Enabled"`
	SlackNotifyWebhooksURL string `mapconv:"SlackConfig.IncomingWebhooksURL"`
	AutoTrafficShaping     bool
}

// Validate validates by field tags
func (o *MobileGatewayTrafficControl) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayTrafficControl) setDefaults() interface{} {
	return &struct {
		TrafficQuotaInMB       int
		BandWidthLimitInKbps   int
		EmailNotifyEnabled     bool   `mapconv:"EMailConfig.Enabled"`
		SlackNotifyEnabled     bool   `mapconv:"SlackConfig.Enabled"`
		SlackNotifyWebhooksURL string `mapconv:"SlackConfig.IncomingWebhooksURL"`
		AutoTrafficShaping     bool
	}{
		TrafficQuotaInMB:       o.TrafficQuotaInMB,
		BandWidthLimitInKbps:   o.BandWidthLimitInKbps,
		EmailNotifyEnabled:     o.EmailNotifyEnabled,
		SlackNotifyEnabled:     o.SlackNotifyEnabled,
		SlackNotifyWebhooksURL: o.SlackNotifyWebhooksURL,
		AutoTrafficShaping:     o.AutoTrafficShaping,
	}
}

// GetTrafficQuotaInMB returns value of TrafficQuotaInMB
func (o *MobileGatewayTrafficControl) GetTrafficQuotaInMB() int {
	return o.TrafficQuotaInMB
}

// SetTrafficQuotaInMB sets value to TrafficQuotaInMB
func (o *MobileGatewayTrafficControl) SetTrafficQuotaInMB(v int) {
	o.TrafficQuotaInMB = v
}

// GetBandWidthLimitInKbps returns value of BandWidthLimitInKbps
func (o *MobileGatewayTrafficControl) GetBandWidthLimitInKbps() int {
	return o.BandWidthLimitInKbps
}

// SetBandWidthLimitInKbps sets value to BandWidthLimitInKbps
func (o *MobileGatewayTrafficControl) SetBandWidthLimitInKbps(v int) {
	o.BandWidthLimitInKbps = v
}

// GetEmailNotifyEnabled returns value of EmailNotifyEnabled
func (o *MobileGatewayTrafficControl) GetEmailNotifyEnabled() bool {
	return o.EmailNotifyEnabled
}

// SetEmailNotifyEnabled sets value to EmailNotifyEnabled
func (o *MobileGatewayTrafficControl) SetEmailNotifyEnabled(v bool) {
	o.EmailNotifyEnabled = v
}

// GetSlackNotifyEnabled returns value of SlackNotifyEnabled
func (o *MobileGatewayTrafficControl) GetSlackNotifyEnabled() bool {
	return o.SlackNotifyEnabled
}

// SetSlackNotifyEnabled sets value to SlackNotifyEnabled
func (o *MobileGatewayTrafficControl) SetSlackNotifyEnabled(v bool) {
	o.SlackNotifyEnabled = v
}

// GetSlackNotifyWebhooksURL returns value of SlackNotifyWebhooksURL
func (o *MobileGatewayTrafficControl) GetSlackNotifyWebhooksURL() string {
	return o.SlackNotifyWebhooksURL
}

// SetSlackNotifyWebhooksURL sets value to SlackNotifyWebhooksURL
func (o *MobileGatewayTrafficControl) SetSlackNotifyWebhooksURL(v string) {
	o.SlackNotifyWebhooksURL = v
}

// GetAutoTrafficShaping returns value of AutoTrafficShaping
func (o *MobileGatewayTrafficControl) GetAutoTrafficShaping() bool {
	return o.AutoTrafficShaping
}

// SetAutoTrafficShaping sets value to AutoTrafficShaping
func (o *MobileGatewayTrafficControl) SetAutoTrafficShaping(v bool) {
	o.AutoTrafficShaping = v
}

/*************************************************
* MobileGatewayTrafficStatus
*************************************************/

// MobileGatewayTrafficStatus represents API parameter/response structure
type MobileGatewayTrafficStatus struct {
	UplinkBytes    types.StringNumber
	DownlinkBytes  types.StringNumber
	TrafficShaping bool
}

// Validate validates by field tags
func (o *MobileGatewayTrafficStatus) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MobileGatewayTrafficStatus) setDefaults() interface{} {
	return &struct {
		UplinkBytes    types.StringNumber
		DownlinkBytes  types.StringNumber
		TrafficShaping bool
	}{
		UplinkBytes:    o.UplinkBytes,
		DownlinkBytes:  o.DownlinkBytes,
		TrafficShaping: o.TrafficShaping,
	}
}

// GetUplinkBytes returns value of UplinkBytes
func (o *MobileGatewayTrafficStatus) GetUplinkBytes() types.StringNumber {
	return o.UplinkBytes
}

// SetUplinkBytes sets value to UplinkBytes
func (o *MobileGatewayTrafficStatus) SetUplinkBytes(v types.StringNumber) {
	o.UplinkBytes = v
}

// GetDownlinkBytes returns value of DownlinkBytes
func (o *MobileGatewayTrafficStatus) GetDownlinkBytes() types.StringNumber {
	return o.DownlinkBytes
}

// SetDownlinkBytes sets value to DownlinkBytes
func (o *MobileGatewayTrafficStatus) SetDownlinkBytes(v types.StringNumber) {
	o.DownlinkBytes = v
}

// GetTrafficShaping returns value of TrafficShaping
func (o *MobileGatewayTrafficStatus) GetTrafficShaping() bool {
	return o.TrafficShaping
}

// SetTrafficShaping sets value to TrafficShaping
func (o *MobileGatewayTrafficStatus) SetTrafficShaping(v bool) {
	o.TrafficShaping = v
}

/*************************************************
* NFS
*************************************************/

// NFS represents API parameter/response structure
type NFS struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    types.Tags
	Availability            types.EAvailability
	Class                   string
	InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
	InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
	InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
	InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
	Interfaces              []*InterfaceView            `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
	PlanID                  types.ID                    `mapconv:"Remark.Plan.ID/Plan.ID"`
	SwitchID                types.ID                    `mapconv:"Remark.Switch.ID"`
	DefaultRoute            string                      `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	NetworkMaskLen          int                         `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	IPAddresses             []string                    `mapconv:"Remark.[]Servers.IPAddress"`
	ZoneID                  types.ID                    `mapconv:"Remark.Zone.ID"`
	IconID                  types.ID                    `mapconv:"Icon.ID"`
	CreatedAt               time.Time
	ModifiedAt              time.Time
}

// Validate validates by field tags
func (o *NFS) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *NFS) setDefaults() interface{} {
	return &struct {
		ID                      types.ID
		Name                    string `validate:"required"`
		Description             string `validate:"min=0,max=512"`
		Tags                    types.Tags
		Availability            types.EAvailability
		Class                   string
		InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
		InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
		InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
		InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
		Interfaces              []*InterfaceView            `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
		PlanID                  types.ID                    `mapconv:"Remark.Plan.ID/Plan.ID"`
		SwitchID                types.ID                    `mapconv:"Remark.Switch.ID"`
		DefaultRoute            string                      `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
		NetworkMaskLen          int                         `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
		IPAddresses             []string                    `mapconv:"Remark.[]Servers.IPAddress"`
		ZoneID                  types.ID                    `mapconv:"Remark.Zone.ID"`
		IconID                  types.ID                    `mapconv:"Icon.ID"`
		CreatedAt               time.Time
		ModifiedAt              time.Time
	}{
		ID:                      o.ID,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		Availability:            o.Availability,
		Class:                   o.Class,
		InstanceHostName:        o.InstanceHostName,
		InstanceHostInfoURL:     o.InstanceHostInfoURL,
		InstanceStatus:          o.InstanceStatus,
		InstanceStatusChangedAt: o.InstanceStatusChangedAt,
		Interfaces:              o.Interfaces,
		PlanID:                  o.PlanID,
		SwitchID:                o.SwitchID,
		DefaultRoute:            o.DefaultRoute,
		NetworkMaskLen:          o.NetworkMaskLen,
		IPAddresses:             o.IPAddresses,
		ZoneID:                  o.ZoneID,
		IconID:                  o.IconID,
		CreatedAt:               o.CreatedAt,
		ModifiedAt:              o.ModifiedAt,
	}
}

// GetID returns value of ID
func (o *NFS) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *NFS) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *NFS) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *NFS) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *NFS) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *NFS) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *NFS) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NFS) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *NFS) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *NFS) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *NFS) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NFS) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *NFS) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *NFS) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *NFS) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *NFS) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *NFS) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *NFS) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetClass returns value of Class
func (o *NFS) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NFS) SetClass(v string) {
	o.Class = v
}

// GetInstanceHostName returns value of InstanceHostName
func (o *NFS) GetInstanceHostName() string {
	return o.InstanceHostName
}

// SetInstanceHostName sets value to InstanceHostName
func (o *NFS) SetInstanceHostName(v string) {
	o.InstanceHostName = v
}

// GetInstanceHostInfoURL returns value of InstanceHostInfoURL
func (o *NFS) GetInstanceHostInfoURL() string {
	return o.InstanceHostInfoURL
}

// SetInstanceHostInfoURL sets value to InstanceHostInfoURL
func (o *NFS) SetInstanceHostInfoURL(v string) {
	o.InstanceHostInfoURL = v
}

// GetInstanceStatus returns value of InstanceStatus
func (o *NFS) GetInstanceStatus() types.EServerInstanceStatus {
	return o.InstanceStatus
}

// SetInstanceStatus sets value to InstanceStatus
func (o *NFS) SetInstanceStatus(v types.EServerInstanceStatus) {
	o.InstanceStatus = v
}

// GetInstanceStatusChangedAt returns value of InstanceStatusChangedAt
func (o *NFS) GetInstanceStatusChangedAt() time.Time {
	return o.InstanceStatusChangedAt
}

// SetInstanceStatusChangedAt sets value to InstanceStatusChangedAt
func (o *NFS) SetInstanceStatusChangedAt(v time.Time) {
	o.InstanceStatusChangedAt = v
}

// GetInterfaces returns value of Interfaces
func (o *NFS) GetInterfaces() []*InterfaceView {
	return o.Interfaces
}

// SetInterfaces sets value to Interfaces
func (o *NFS) SetInterfaces(v []*InterfaceView) {
	o.Interfaces = v
}

// GetPlanID returns value of PlanID
func (o *NFS) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *NFS) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetSwitchID returns value of SwitchID
func (o *NFS) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *NFS) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *NFS) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *NFS) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *NFS) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *NFS) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetIPAddresses returns value of IPAddresses
func (o *NFS) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *NFS) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetZoneID returns value of ZoneID
func (o *NFS) GetZoneID() types.ID {
	return o.ZoneID
}

// SetZoneID sets value to ZoneID
func (o *NFS) SetZoneID(v types.ID) {
	o.ZoneID = v
}

// GetIconID returns value of IconID
func (o *NFS) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NFS) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *NFS) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *NFS) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *NFS) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *NFS) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

/*************************************************
* NFSCreateRequest
*************************************************/

// NFSCreateRequest represents API parameter/response structure
type NFSCreateRequest struct {
	SwitchID       types.ID `mapconv:"Remark.Switch.ID"`
	PlanID         types.ID `mapconv:"Remark.Plan.ID/Plan.ID"`
	IPAddresses    []string `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
	NetworkMaskLen int      `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string   `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	Name           string   `validate:"required"`
	Description    string   `validate:"min=0,max=512"`
	Tags           types.Tags
	IconID         types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *NFSCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *NFSCreateRequest) setDefaults() interface{} {
	return &struct {
		SwitchID       types.ID `mapconv:"Remark.Switch.ID"`
		PlanID         types.ID `mapconv:"Remark.Plan.ID/Plan.ID"`
		IPAddresses    []string `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
		NetworkMaskLen int      `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
		DefaultRoute   string   `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
		Name           string   `validate:"required"`
		Description    string   `validate:"min=0,max=512"`
		Tags           types.Tags
		IconID         types.ID `mapconv:"Icon.ID"`
		Class          string
	}{
		SwitchID:       o.SwitchID,
		PlanID:         o.PlanID,
		IPAddresses:    o.IPAddresses,
		NetworkMaskLen: o.NetworkMaskLen,
		DefaultRoute:   o.DefaultRoute,
		Name:           o.Name,
		Description:    o.Description,
		Tags:           o.Tags,
		IconID:         o.IconID,
		Class:          "nfs",
	}
}

// GetSwitchID returns value of SwitchID
func (o *NFSCreateRequest) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *NFSCreateRequest) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetPlanID returns value of PlanID
func (o *NFSCreateRequest) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *NFSCreateRequest) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetIPAddresses returns value of IPAddresses
func (o *NFSCreateRequest) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *NFSCreateRequest) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *NFSCreateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *NFSCreateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *NFSCreateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *NFSCreateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetName returns value of Name
func (o *NFSCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NFSCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *NFSCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *NFSCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *NFSCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NFSCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *NFSCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *NFSCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *NFSCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *NFSCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *NFSCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NFSCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* NFSUpdateRequest
*************************************************/

// NFSUpdateRequest represents API parameter/response structure
type NFSUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *NFSUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *NFSUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetName returns value of Name
func (o *NFSUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NFSUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *NFSUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *NFSUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *NFSUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NFSUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *NFSUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *NFSUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *NFSUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *NFSUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *NFSUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NFSUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* FreeDiskSizeActivity
*************************************************/

// FreeDiskSizeActivity represents API parameter/response structure
type FreeDiskSizeActivity struct {
	Values []*MonitorFreeDiskSizeValue `mapconv:"[]FreeDiskSize"`
}

// Validate validates by field tags
func (o *FreeDiskSizeActivity) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *FreeDiskSizeActivity) setDefaults() interface{} {
	return &struct {
		Values []*MonitorFreeDiskSizeValue `mapconv:"[]FreeDiskSize"`
	}{
		Values: o.Values,
	}
}

// GetValues returns value of Values
func (o *FreeDiskSizeActivity) GetValues() []*MonitorFreeDiskSizeValue {
	return o.Values
}

// SetValues sets value to Values
func (o *FreeDiskSizeActivity) SetValues(v []*MonitorFreeDiskSizeValue) {
	o.Values = v
}

/*************************************************
* MonitorFreeDiskSizeValue
*************************************************/

// MonitorFreeDiskSizeValue represents API parameter/response structure
type MonitorFreeDiskSizeValue struct {
	Time         time.Time `json:",omitempty" mapconv:",omitempty"`
	FreeDiskSize float64   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorFreeDiskSizeValue) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorFreeDiskSizeValue) setDefaults() interface{} {
	return &struct {
		Time         time.Time `json:",omitempty" mapconv:",omitempty"`
		FreeDiskSize float64   `json:",omitempty" mapconv:",omitempty"`
	}{
		Time:         o.Time,
		FreeDiskSize: o.FreeDiskSize,
	}
}

// GetTime returns value of Time
func (o *MonitorFreeDiskSizeValue) GetTime() time.Time {
	return o.Time
}

// SetTime sets value to Time
func (o *MonitorFreeDiskSizeValue) SetTime(v time.Time) {
	o.Time = v
}

// GetFreeDiskSize returns value of FreeDiskSize
func (o *MonitorFreeDiskSizeValue) GetFreeDiskSize() float64 {
	return o.FreeDiskSize
}

// SetFreeDiskSize sets value to FreeDiskSize
func (o *MonitorFreeDiskSizeValue) SetFreeDiskSize(v float64) {
	o.FreeDiskSize = v
}

/*************************************************
* Note
*************************************************/

// Note represents API parameter/response structure
type Note struct {
	ID           types.ID
	Name         string `validate:"required"`
	Description  string `validate:"min=0,max=512"`
	Tags         types.Tags
	Availability types.EAvailability
	Scope        types.EScope
	Class        string
	Content      string
	IconID       types.ID `mapconv:"Icon.ID"`
	CreatedAt    time.Time
	ModifiedAt   time.Time
}

// Validate validates by field tags
func (o *Note) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Note) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		Description  string `validate:"min=0,max=512"`
		Tags         types.Tags
		Availability types.EAvailability
		Scope        types.EScope
		Class        string
		Content      string
		IconID       types.ID `mapconv:"Icon.ID"`
		CreatedAt    time.Time
		ModifiedAt   time.Time
	}{
		ID:           o.ID,
		Name:         o.Name,
		Description:  o.Description,
		Tags:         o.Tags,
		Availability: o.Availability,
		Scope:        o.Scope,
		Class:        o.Class,
		Content:      o.Content,
		IconID:       o.IconID,
		CreatedAt:    o.CreatedAt,
		ModifiedAt:   o.ModifiedAt,
	}
}

// GetID returns value of ID
func (o *Note) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Note) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Note) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Note) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Note) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Note) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Note) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Note) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Note) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Note) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Note) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Note) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *Note) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *Note) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *Note) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *Note) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *Note) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Note) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *Note) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *Note) SetScope(v types.EScope) {
	o.Scope = v
}

// GetClass returns value of Class
func (o *Note) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *Note) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *Note) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *Note) SetContent(v string) {
	o.Content = v
}

// GetIconID returns value of IconID
func (o *Note) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *Note) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Note) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Note) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Note) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Note) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

/*************************************************
* NoteCreateRequest
*************************************************/

// NoteCreateRequest represents API parameter/response structure
type NoteCreateRequest struct {
	Name    string `validate:"required"`
	Tags    types.Tags
	IconID  types.ID `mapconv:"Icon.ID"`
	Class   string
	Content string
}

// Validate validates by field tags
func (o *NoteCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *NoteCreateRequest) setDefaults() interface{} {
	return &struct {
		Name    string `validate:"required"`
		Tags    types.Tags
		IconID  types.ID `mapconv:"Icon.ID"`
		Class   string
		Content string
	}{
		Name:    o.Name,
		Tags:    o.Tags,
		IconID:  o.IconID,
		Class:   o.Class,
		Content: o.Content,
	}
}

// GetName returns value of Name
func (o *NoteCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NoteCreateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *NoteCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NoteCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *NoteCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *NoteCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *NoteCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *NoteCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *NoteCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NoteCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetClass returns value of Class
func (o *NoteCreateRequest) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NoteCreateRequest) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *NoteCreateRequest) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *NoteCreateRequest) SetContent(v string) {
	o.Content = v
}

/*************************************************
* NoteUpdateRequest
*************************************************/

// NoteUpdateRequest represents API parameter/response structure
type NoteUpdateRequest struct {
	Name    string `validate:"required"`
	Tags    types.Tags
	IconID  types.ID `mapconv:"Icon.ID"`
	Class   string
	Content string
}

// Validate validates by field tags
func (o *NoteUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *NoteUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name    string `validate:"required"`
		Tags    types.Tags
		IconID  types.ID `mapconv:"Icon.ID"`
		Class   string
		Content string
	}{
		Name:    o.Name,
		Tags:    o.Tags,
		IconID:  o.IconID,
		Class:   o.Class,
		Content: o.Content,
	}
}

// GetName returns value of Name
func (o *NoteUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NoteUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *NoteUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NoteUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *NoteUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *NoteUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *NoteUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *NoteUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *NoteUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NoteUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetClass returns value of Class
func (o *NoteUpdateRequest) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NoteUpdateRequest) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *NoteUpdateRequest) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *NoteUpdateRequest) SetContent(v string) {
	o.Content = v
}

/*************************************************
* PacketFilter
*************************************************/

// PacketFilter represents API parameter/response structure
type PacketFilter struct {
	ID                  types.ID
	Name                string `validate:"required"`
	Description         string `validate:"min=0,max=512"`
	RequiredHostVersion types.StringNumber
	Expression          []*PacketFilterExpression `mapconv:"[]Expression,recursive"`
	ExpressionHash      string
	CreatedAt           time.Time
}

// Validate validates by field tags
func (o *PacketFilter) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *PacketFilter) setDefaults() interface{} {
	return &struct {
		ID                  types.ID
		Name                string `validate:"required"`
		Description         string `validate:"min=0,max=512"`
		RequiredHostVersion types.StringNumber
		Expression          []*PacketFilterExpression `mapconv:"[]Expression,recursive"`
		ExpressionHash      string
		CreatedAt           time.Time
	}{
		ID:                  o.ID,
		Name:                o.Name,
		Description:         o.Description,
		RequiredHostVersion: o.RequiredHostVersion,
		Expression:          o.Expression,
		ExpressionHash:      o.ExpressionHash,
		CreatedAt:           o.CreatedAt,
	}
}

// GetID returns value of ID
func (o *PacketFilter) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *PacketFilter) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *PacketFilter) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *PacketFilter) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *PacketFilter) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *PacketFilter) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *PacketFilter) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *PacketFilter) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *PacketFilter) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *PacketFilter) SetDescription(v string) {
	o.Description = v
}

// GetRequiredHostVersion returns value of RequiredHostVersion
func (o *PacketFilter) GetRequiredHostVersion() types.StringNumber {
	return o.RequiredHostVersion
}

// SetRequiredHostVersion sets value to RequiredHostVersion
func (o *PacketFilter) SetRequiredHostVersion(v types.StringNumber) {
	o.RequiredHostVersion = v
}

// GetExpression returns value of Expression
func (o *PacketFilter) GetExpression() []*PacketFilterExpression {
	return o.Expression
}

// SetExpression sets value to Expression
func (o *PacketFilter) SetExpression(v []*PacketFilterExpression) {
	o.Expression = v
}

// GetExpressionHash returns value of ExpressionHash
func (o *PacketFilter) GetExpressionHash() string {
	return o.ExpressionHash
}

// SetExpressionHash sets value to ExpressionHash
func (o *PacketFilter) SetExpressionHash(v string) {
	o.ExpressionHash = v
}

// GetCreatedAt returns value of CreatedAt
func (o *PacketFilter) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *PacketFilter) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

/*************************************************
* PacketFilterExpression
*************************************************/

// PacketFilterExpression represents API parameter/response structure
type PacketFilterExpression struct {
	Protocol        types.Protocol
	SourceNetwork   types.PacketFilterNetwork
	SourcePort      types.PacketFilterPort
	DestinationPort types.PacketFilterPort
	Action          types.Action
}

// Validate validates by field tags
func (o *PacketFilterExpression) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *PacketFilterExpression) setDefaults() interface{} {
	return &struct {
		Protocol        types.Protocol
		SourceNetwork   types.PacketFilterNetwork
		SourcePort      types.PacketFilterPort
		DestinationPort types.PacketFilterPort
		Action          types.Action
	}{
		Protocol:        o.Protocol,
		SourceNetwork:   o.SourceNetwork,
		SourcePort:      o.SourcePort,
		DestinationPort: o.DestinationPort,
		Action:          o.Action,
	}
}

// GetProtocol returns value of Protocol
func (o *PacketFilterExpression) GetProtocol() types.Protocol {
	return o.Protocol
}

// SetProtocol sets value to Protocol
func (o *PacketFilterExpression) SetProtocol(v types.Protocol) {
	o.Protocol = v
}

// GetSourceNetwork returns value of SourceNetwork
func (o *PacketFilterExpression) GetSourceNetwork() types.PacketFilterNetwork {
	return o.SourceNetwork
}

// SetSourceNetwork sets value to SourceNetwork
func (o *PacketFilterExpression) SetSourceNetwork(v types.PacketFilterNetwork) {
	o.SourceNetwork = v
}

// GetSourcePort returns value of SourcePort
func (o *PacketFilterExpression) GetSourcePort() types.PacketFilterPort {
	return o.SourcePort
}

// SetSourcePort sets value to SourcePort
func (o *PacketFilterExpression) SetSourcePort(v types.PacketFilterPort) {
	o.SourcePort = v
}

// GetDestinationPort returns value of DestinationPort
func (o *PacketFilterExpression) GetDestinationPort() types.PacketFilterPort {
	return o.DestinationPort
}

// SetDestinationPort sets value to DestinationPort
func (o *PacketFilterExpression) SetDestinationPort(v types.PacketFilterPort) {
	o.DestinationPort = v
}

// GetAction returns value of Action
func (o *PacketFilterExpression) GetAction() types.Action {
	return o.Action
}

// SetAction sets value to Action
func (o *PacketFilterExpression) SetAction(v types.Action) {
	o.Action = v
}

/*************************************************
* PacketFilterCreateRequest
*************************************************/

// PacketFilterCreateRequest represents API parameter/response structure
type PacketFilterCreateRequest struct {
	Name        string                    `validate:"required"`
	Description string                    `validate:"min=0,max=512"`
	Expression  []*PacketFilterExpression `mapconv:"[]Expression,recursive"`
}

// Validate validates by field tags
func (o *PacketFilterCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *PacketFilterCreateRequest) setDefaults() interface{} {
	return &struct {
		Name        string                    `validate:"required"`
		Description string                    `validate:"min=0,max=512"`
		Expression  []*PacketFilterExpression `mapconv:"[]Expression,recursive"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Expression:  o.Expression,
	}
}

// GetName returns value of Name
func (o *PacketFilterCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *PacketFilterCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *PacketFilterCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *PacketFilterCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetExpression returns value of Expression
func (o *PacketFilterCreateRequest) GetExpression() []*PacketFilterExpression {
	return o.Expression
}

// SetExpression sets value to Expression
func (o *PacketFilterCreateRequest) SetExpression(v []*PacketFilterExpression) {
	o.Expression = v
}

/*************************************************
* PacketFilterUpdateRequest
*************************************************/

// PacketFilterUpdateRequest represents API parameter/response structure
type PacketFilterUpdateRequest struct {
	Name        string                    `validate:"required"`
	Description string                    `validate:"min=0,max=512"`
	Expression  []*PacketFilterExpression `mapconv:"[]Expression,recursive"`
}

// Validate validates by field tags
func (o *PacketFilterUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *PacketFilterUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string                    `validate:"required"`
		Description string                    `validate:"min=0,max=512"`
		Expression  []*PacketFilterExpression `mapconv:"[]Expression,recursive"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Expression:  o.Expression,
	}
}

// GetName returns value of Name
func (o *PacketFilterUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *PacketFilterUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *PacketFilterUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *PacketFilterUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetExpression returns value of Expression
func (o *PacketFilterUpdateRequest) GetExpression() []*PacketFilterExpression {
	return o.Expression
}

// SetExpression sets value to Expression
func (o *PacketFilterUpdateRequest) SetExpression(v []*PacketFilterExpression) {
	o.Expression = v
}

/*************************************************
* PrivateHost
*************************************************/

// PrivateHost represents API parameter/response structure
type PrivateHost struct {
	ID               types.ID
	Name             string `validate:"required"`
	Description      string `validate:"min=0,max=512"`
	Tags             types.Tags
	IconID           types.ID `mapconv:"Icon.ID"`
	CreatedAt        time.Time
	PlanID           types.ID `mapconv:"Plan.ID,omitempty"`
	PlanName         string
	PlanClass        string
	CPU              int `mapconv:"Plan.CPU"`
	MemoryMB         int `mapconv:"Plan.MemoryMB"`
	AssignedCPU      int
	AssignedMemoryMB int
	HostName         string `mapconv:"Host.Name"`
}

// Validate validates by field tags
func (o *PrivateHost) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *PrivateHost) setDefaults() interface{} {
	return &struct {
		ID               types.ID
		Name             string `validate:"required"`
		Description      string `validate:"min=0,max=512"`
		Tags             types.Tags
		IconID           types.ID `mapconv:"Icon.ID"`
		CreatedAt        time.Time
		PlanID           types.ID `mapconv:"Plan.ID,omitempty"`
		PlanName         string
		PlanClass        string
		CPU              int `mapconv:"Plan.CPU"`
		MemoryMB         int `mapconv:"Plan.MemoryMB"`
		AssignedCPU      int
		AssignedMemoryMB int
		HostName         string `mapconv:"Host.Name"`
	}{
		ID:               o.ID,
		Name:             o.Name,
		Description:      o.Description,
		Tags:             o.Tags,
		IconID:           o.IconID,
		CreatedAt:        o.CreatedAt,
		PlanID:           o.PlanID,
		PlanName:         o.PlanName,
		PlanClass:        o.PlanClass,
		CPU:              o.CPU,
		MemoryMB:         o.MemoryMB,
		AssignedCPU:      o.AssignedCPU,
		AssignedMemoryMB: o.AssignedMemoryMB,
		HostName:         o.HostName,
	}
}

// GetID returns value of ID
func (o *PrivateHost) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *PrivateHost) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *PrivateHost) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *PrivateHost) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *PrivateHost) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *PrivateHost) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *PrivateHost) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *PrivateHost) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *PrivateHost) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *PrivateHost) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *PrivateHost) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *PrivateHost) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *PrivateHost) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *PrivateHost) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *PrivateHost) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *PrivateHost) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *PrivateHost) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *PrivateHost) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *PrivateHost) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *PrivateHost) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetPlanID returns value of PlanID
func (o *PrivateHost) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *PrivateHost) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetPlanName returns value of PlanName
func (o *PrivateHost) GetPlanName() string {
	return o.PlanName
}

// SetPlanName sets value to PlanName
func (o *PrivateHost) SetPlanName(v string) {
	o.PlanName = v
}

// GetPlanClass returns value of PlanClass
func (o *PrivateHost) GetPlanClass() string {
	return o.PlanClass
}

// SetPlanClass sets value to PlanClass
func (o *PrivateHost) SetPlanClass(v string) {
	o.PlanClass = v
}

// GetCPU returns value of CPU
func (o *PrivateHost) GetCPU() int {
	return o.CPU
}

// SetCPU sets value to CPU
func (o *PrivateHost) SetCPU(v int) {
	o.CPU = v
}

// GetMemoryMB returns value of MemoryMB
func (o *PrivateHost) GetMemoryMB() int {
	return o.MemoryMB
}

// SetMemoryMB sets value to MemoryMB
func (o *PrivateHost) SetMemoryMB(v int) {
	o.MemoryMB = v
}

// GetMemoryGB .
func (o *PrivateHost) GetMemoryGB() int {
	return accessor.GetMemoryGB(o)
}

// SetMemoryGB .
func (o *PrivateHost) SetMemoryGB(memory int) {
	accessor.SetMemoryGB(o, memory)
}

// GetAssignedCPU returns value of AssignedCPU
func (o *PrivateHost) GetAssignedCPU() int {
	return o.AssignedCPU
}

// SetAssignedCPU sets value to AssignedCPU
func (o *PrivateHost) SetAssignedCPU(v int) {
	o.AssignedCPU = v
}

// GetAssignedMemoryMB returns value of AssignedMemoryMB
func (o *PrivateHost) GetAssignedMemoryMB() int {
	return o.AssignedMemoryMB
}

// SetAssignedMemoryMB sets value to AssignedMemoryMB
func (o *PrivateHost) SetAssignedMemoryMB(v int) {
	o.AssignedMemoryMB = v
}

// GetHostName returns value of HostName
func (o *PrivateHost) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *PrivateHost) SetHostName(v string) {
	o.HostName = v
}

/*************************************************
* PrivateHostCreateRequest
*************************************************/

// PrivateHostCreateRequest represents API parameter/response structure
type PrivateHostCreateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
	PlanID      types.ID `mapconv:"Plan.ID,omitempty"`
}

// Validate validates by field tags
func (o *PrivateHostCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *PrivateHostCreateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
		PlanID      types.ID `mapconv:"Plan.ID,omitempty"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
		PlanID:      o.PlanID,
	}
}

// GetName returns value of Name
func (o *PrivateHostCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *PrivateHostCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *PrivateHostCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *PrivateHostCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *PrivateHostCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *PrivateHostCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *PrivateHostCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *PrivateHostCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *PrivateHostCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *PrivateHostCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *PrivateHostCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *PrivateHostCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetPlanID returns value of PlanID
func (o *PrivateHostCreateRequest) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *PrivateHostCreateRequest) SetPlanID(v types.ID) {
	o.PlanID = v
}

/*************************************************
* PrivateHostUpdateRequest
*************************************************/

// PrivateHostUpdateRequest represents API parameter/response structure
type PrivateHostUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *PrivateHostUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *PrivateHostUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetName returns value of Name
func (o *PrivateHostUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *PrivateHostUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *PrivateHostUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *PrivateHostUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *PrivateHostUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *PrivateHostUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *PrivateHostUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *PrivateHostUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *PrivateHostUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *PrivateHostUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *PrivateHostUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *PrivateHostUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* PrivateHostPlan
*************************************************/

// PrivateHostPlan represents API parameter/response structure
type PrivateHostPlan struct {
	ID           types.ID
	Name         string `validate:"required"`
	Class        string
	CPU          int
	MemoryMB     int
	Availability types.EAvailability
}

// Validate validates by field tags
func (o *PrivateHostPlan) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *PrivateHostPlan) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		Class        string
		CPU          int
		MemoryMB     int
		Availability types.EAvailability
	}{
		ID:           o.ID,
		Name:         o.Name,
		Class:        o.Class,
		CPU:          o.CPU,
		MemoryMB:     o.MemoryMB,
		Availability: o.Availability,
	}
}

// GetID returns value of ID
func (o *PrivateHostPlan) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *PrivateHostPlan) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *PrivateHostPlan) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *PrivateHostPlan) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *PrivateHostPlan) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *PrivateHostPlan) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *PrivateHostPlan) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *PrivateHostPlan) SetName(v string) {
	o.Name = v
}

// GetClass returns value of Class
func (o *PrivateHostPlan) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *PrivateHostPlan) SetClass(v string) {
	o.Class = v
}

// GetCPU returns value of CPU
func (o *PrivateHostPlan) GetCPU() int {
	return o.CPU
}

// SetCPU sets value to CPU
func (o *PrivateHostPlan) SetCPU(v int) {
	o.CPU = v
}

// GetMemoryMB returns value of MemoryMB
func (o *PrivateHostPlan) GetMemoryMB() int {
	return o.MemoryMB
}

// SetMemoryMB sets value to MemoryMB
func (o *PrivateHostPlan) SetMemoryMB(v int) {
	o.MemoryMB = v
}

// GetMemoryGB .
func (o *PrivateHostPlan) GetMemoryGB() int {
	return accessor.GetMemoryGB(o)
}

// SetMemoryGB .
func (o *PrivateHostPlan) SetMemoryGB(memory int) {
	accessor.SetMemoryGB(o, memory)
}

// GetAvailability returns value of Availability
func (o *PrivateHostPlan) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *PrivateHostPlan) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

/*************************************************
* ProxyLB
*************************************************/

// ProxyLB represents API parameter/response structure
type ProxyLB struct {
	ID             types.ID
	Name           string `validate:"required"`
	Description    string `validate:"min=0,max=512"`
	Tags           types.Tags
	Availability   types.EAvailability
	IconID         types.ID `mapconv:"Icon.ID"`
	CreatedAt      time.Time
	ModifiedAt     time.Time
	Plan           types.EProxyLBPlan    `mapconv:"ServiceClass"`
	HealthCheck    *ProxyLBHealthCheck   `mapconv:"Settings.ProxyLB.HealthCheck,recursive"`
	SorryServer    *ProxyLBSorryServer   `mapconv:"Settings.ProxyLB.SorryServer,recursive"`
	BindPorts      []*ProxyLBBindPort    `mapconv:"Settings.ProxyLB.[]BindPorts,recursive"`
	Servers        []*ProxyLBServer      `mapconv:"Settings.ProxyLB.[]Servers,recursive"`
	LetsEncrypt    *ProxyLBACMESetting   `mapconv:"Settings.ProxyLB.LetsEncrypt,recursive"`
	StickySession  *ProxyLBStickySession `mapconv:"Settings.ProxyLB.StickySession,recursive"`
	SettingsHash   string
	UseVIPFailover bool                 `mapconv:"Status.UseVIPFailover"`
	Region         types.EProxyLBRegion `mapconv:"Status.Region"`
	ProxyNetworks  []string             `mapconv:"Status.ProxyNetworks"`
	FQDN           string               `mapconv:"Status.FQDN"`
}

// Validate validates by field tags
func (o *ProxyLB) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLB) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		Name           string `validate:"required"`
		Description    string `validate:"min=0,max=512"`
		Tags           types.Tags
		Availability   types.EAvailability
		IconID         types.ID `mapconv:"Icon.ID"`
		CreatedAt      time.Time
		ModifiedAt     time.Time
		Plan           types.EProxyLBPlan    `mapconv:"ServiceClass"`
		HealthCheck    *ProxyLBHealthCheck   `mapconv:"Settings.ProxyLB.HealthCheck,recursive"`
		SorryServer    *ProxyLBSorryServer   `mapconv:"Settings.ProxyLB.SorryServer,recursive"`
		BindPorts      []*ProxyLBBindPort    `mapconv:"Settings.ProxyLB.[]BindPorts,recursive"`
		Servers        []*ProxyLBServer      `mapconv:"Settings.ProxyLB.[]Servers,recursive"`
		LetsEncrypt    *ProxyLBACMESetting   `mapconv:"Settings.ProxyLB.LetsEncrypt,recursive"`
		StickySession  *ProxyLBStickySession `mapconv:"Settings.ProxyLB.StickySession,recursive"`
		SettingsHash   string
		UseVIPFailover bool                 `mapconv:"Status.UseVIPFailover"`
		Region         types.EProxyLBRegion `mapconv:"Status.Region"`
		ProxyNetworks  []string             `mapconv:"Status.ProxyNetworks"`
		FQDN           string               `mapconv:"Status.FQDN"`
	}{
		ID:             o.ID,
		Name:           o.Name,
		Description:    o.Description,
		Tags:           o.Tags,
		Availability:   o.Availability,
		IconID:         o.IconID,
		CreatedAt:      o.CreatedAt,
		ModifiedAt:     o.ModifiedAt,
		Plan:           o.Plan,
		HealthCheck:    o.HealthCheck,
		SorryServer:    o.SorryServer,
		BindPorts:      o.BindPorts,
		Servers:        o.Servers,
		LetsEncrypt:    o.LetsEncrypt,
		StickySession:  o.StickySession,
		SettingsHash:   o.SettingsHash,
		UseVIPFailover: o.UseVIPFailover,
		Region:         o.Region,
		ProxyNetworks:  o.ProxyNetworks,
		FQDN:           o.FQDN,
	}
}

// GetID returns value of ID
func (o *ProxyLB) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *ProxyLB) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *ProxyLB) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *ProxyLB) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *ProxyLB) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *ProxyLB) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *ProxyLB) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ProxyLB) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ProxyLB) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ProxyLB) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ProxyLB) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ProxyLB) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *ProxyLB) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *ProxyLB) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *ProxyLB) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *ProxyLB) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *ProxyLB) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *ProxyLB) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetIconID returns value of IconID
func (o *ProxyLB) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ProxyLB) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *ProxyLB) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *ProxyLB) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *ProxyLB) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *ProxyLB) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetPlan returns value of Plan
func (o *ProxyLB) GetPlan() types.EProxyLBPlan {
	return o.Plan
}

// SetPlan sets value to Plan
func (o *ProxyLB) SetPlan(v types.EProxyLBPlan) {
	o.Plan = v
}

// GetHealthCheck returns value of HealthCheck
func (o *ProxyLB) GetHealthCheck() *ProxyLBHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *ProxyLB) SetHealthCheck(v *ProxyLBHealthCheck) {
	o.HealthCheck = v
}

// GetSorryServer returns value of SorryServer
func (o *ProxyLB) GetSorryServer() *ProxyLBSorryServer {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *ProxyLB) SetSorryServer(v *ProxyLBSorryServer) {
	o.SorryServer = v
}

// GetBindPorts returns value of BindPorts
func (o *ProxyLB) GetBindPorts() []*ProxyLBBindPort {
	return o.BindPorts
}

// SetBindPorts sets value to BindPorts
func (o *ProxyLB) SetBindPorts(v []*ProxyLBBindPort) {
	o.BindPorts = v
}

// GetServers returns value of Servers
func (o *ProxyLB) GetServers() []*ProxyLBServer {
	return o.Servers
}

// SetServers sets value to Servers
func (o *ProxyLB) SetServers(v []*ProxyLBServer) {
	o.Servers = v
}

// GetLetsEncrypt returns value of LetsEncrypt
func (o *ProxyLB) GetLetsEncrypt() *ProxyLBACMESetting {
	return o.LetsEncrypt
}

// SetLetsEncrypt sets value to LetsEncrypt
func (o *ProxyLB) SetLetsEncrypt(v *ProxyLBACMESetting) {
	o.LetsEncrypt = v
}

// GetStickySession returns value of StickySession
func (o *ProxyLB) GetStickySession() *ProxyLBStickySession {
	return o.StickySession
}

// SetStickySession sets value to StickySession
func (o *ProxyLB) SetStickySession(v *ProxyLBStickySession) {
	o.StickySession = v
}

// GetSettingsHash returns value of SettingsHash
func (o *ProxyLB) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *ProxyLB) SetSettingsHash(v string) {
	o.SettingsHash = v
}

// GetUseVIPFailover returns value of UseVIPFailover
func (o *ProxyLB) GetUseVIPFailover() bool {
	return o.UseVIPFailover
}

// SetUseVIPFailover sets value to UseVIPFailover
func (o *ProxyLB) SetUseVIPFailover(v bool) {
	o.UseVIPFailover = v
}

// GetRegion returns value of Region
func (o *ProxyLB) GetRegion() types.EProxyLBRegion {
	return o.Region
}

// SetRegion sets value to Region
func (o *ProxyLB) SetRegion(v types.EProxyLBRegion) {
	o.Region = v
}

// GetProxyNetworks returns value of ProxyNetworks
func (o *ProxyLB) GetProxyNetworks() []string {
	return o.ProxyNetworks
}

// SetProxyNetworks sets value to ProxyNetworks
func (o *ProxyLB) SetProxyNetworks(v []string) {
	o.ProxyNetworks = v
}

// GetFQDN returns value of FQDN
func (o *ProxyLB) GetFQDN() string {
	return o.FQDN
}

// SetFQDN sets value to FQDN
func (o *ProxyLB) SetFQDN(v string) {
	o.FQDN = v
}

/*************************************************
* ProxyLBHealthCheck
*************************************************/

// ProxyLBHealthCheck represents API parameter/response structure
type ProxyLBHealthCheck struct {
	Protocol  types.EProxyLBHealthCheckProtocol
	Path      string
	DelayLoop int
}

// Validate validates by field tags
func (o *ProxyLBHealthCheck) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBHealthCheck) setDefaults() interface{} {
	return &struct {
		Protocol  types.EProxyLBHealthCheckProtocol
		Path      string
		DelayLoop int
	}{
		Protocol:  o.Protocol,
		Path:      o.Path,
		DelayLoop: o.DelayLoop,
	}
}

// GetProtocol returns value of Protocol
func (o *ProxyLBHealthCheck) GetProtocol() types.EProxyLBHealthCheckProtocol {
	return o.Protocol
}

// SetProtocol sets value to Protocol
func (o *ProxyLBHealthCheck) SetProtocol(v types.EProxyLBHealthCheckProtocol) {
	o.Protocol = v
}

// GetPath returns value of Path
func (o *ProxyLBHealthCheck) GetPath() string {
	return o.Path
}

// SetPath sets value to Path
func (o *ProxyLBHealthCheck) SetPath(v string) {
	o.Path = v
}

// GetDelayLoop returns value of DelayLoop
func (o *ProxyLBHealthCheck) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *ProxyLBHealthCheck) SetDelayLoop(v int) {
	o.DelayLoop = v
}

/*************************************************
* ProxyLBSorryServer
*************************************************/

// ProxyLBSorryServer represents API parameter/response structure
type ProxyLBSorryServer struct {
	IPAddress string `validate:"ipv4"`
	Port      int    `validate:"min=0,max=65535"`
}

// Validate validates by field tags
func (o *ProxyLBSorryServer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBSorryServer) setDefaults() interface{} {
	return &struct {
		IPAddress string `validate:"ipv4"`
		Port      int    `validate:"min=0,max=65535"`
	}{
		IPAddress: o.IPAddress,
		Port:      o.Port,
	}
}

// GetIPAddress returns value of IPAddress
func (o *ProxyLBSorryServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *ProxyLBSorryServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetPort returns value of Port
func (o *ProxyLBSorryServer) GetPort() int {
	return o.Port
}

// SetPort sets value to Port
func (o *ProxyLBSorryServer) SetPort(v int) {
	o.Port = v
}

/*************************************************
* ProxyLBBindPort
*************************************************/

// ProxyLBBindPort represents API parameter/response structure
type ProxyLBBindPort struct {
	ProxyMode       types.EProxyLBProxyMode
	Port            int `validate:"min=0,max=65535"`
	RedirectToHTTPS bool
	SupportHTTP2    bool
}

// Validate validates by field tags
func (o *ProxyLBBindPort) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBBindPort) setDefaults() interface{} {
	return &struct {
		ProxyMode       types.EProxyLBProxyMode
		Port            int `validate:"min=0,max=65535"`
		RedirectToHTTPS bool
		SupportHTTP2    bool
	}{
		ProxyMode:       o.ProxyMode,
		Port:            o.Port,
		RedirectToHTTPS: o.RedirectToHTTPS,
		SupportHTTP2:    o.SupportHTTP2,
	}
}

// GetProxyMode returns value of ProxyMode
func (o *ProxyLBBindPort) GetProxyMode() types.EProxyLBProxyMode {
	return o.ProxyMode
}

// SetProxyMode sets value to ProxyMode
func (o *ProxyLBBindPort) SetProxyMode(v types.EProxyLBProxyMode) {
	o.ProxyMode = v
}

// GetPort returns value of Port
func (o *ProxyLBBindPort) GetPort() int {
	return o.Port
}

// SetPort sets value to Port
func (o *ProxyLBBindPort) SetPort(v int) {
	o.Port = v
}

// GetRedirectToHTTPS returns value of RedirectToHTTPS
func (o *ProxyLBBindPort) GetRedirectToHTTPS() bool {
	return o.RedirectToHTTPS
}

// SetRedirectToHTTPS sets value to RedirectToHTTPS
func (o *ProxyLBBindPort) SetRedirectToHTTPS(v bool) {
	o.RedirectToHTTPS = v
}

// GetSupportHTTP2 returns value of SupportHTTP2
func (o *ProxyLBBindPort) GetSupportHTTP2() bool {
	return o.SupportHTTP2
}

// SetSupportHTTP2 sets value to SupportHTTP2
func (o *ProxyLBBindPort) SetSupportHTTP2(v bool) {
	o.SupportHTTP2 = v
}

/*************************************************
* ProxyLBServer
*************************************************/

// ProxyLBServer represents API parameter/response structure
type ProxyLBServer struct {
	IPAddress string `validate:"ipv4"`
	Port      int    `validate:"min=0,max=65535"`
	Enabled   bool
}

// Validate validates by field tags
func (o *ProxyLBServer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBServer) setDefaults() interface{} {
	return &struct {
		IPAddress string `validate:"ipv4"`
		Port      int    `validate:"min=0,max=65535"`
		Enabled   bool
	}{
		IPAddress: o.IPAddress,
		Port:      o.Port,
		Enabled:   o.Enabled,
	}
}

// GetIPAddress returns value of IPAddress
func (o *ProxyLBServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *ProxyLBServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetPort returns value of Port
func (o *ProxyLBServer) GetPort() int {
	return o.Port
}

// SetPort sets value to Port
func (o *ProxyLBServer) SetPort(v int) {
	o.Port = v
}

// GetEnabled returns value of Enabled
func (o *ProxyLBServer) GetEnabled() bool {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *ProxyLBServer) SetEnabled(v bool) {
	o.Enabled = v
}

/*************************************************
* ProxyLBACMESetting
*************************************************/

// ProxyLBACMESetting represents API parameter/response structure
type ProxyLBACMESetting struct {
	CommonName string
	Enabled    bool
}

// Validate validates by field tags
func (o *ProxyLBACMESetting) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBACMESetting) setDefaults() interface{} {
	return &struct {
		CommonName string
		Enabled    bool
	}{
		CommonName: o.CommonName,
		Enabled:    o.Enabled,
	}
}

// GetCommonName returns value of CommonName
func (o *ProxyLBACMESetting) GetCommonName() string {
	return o.CommonName
}

// SetCommonName sets value to CommonName
func (o *ProxyLBACMESetting) SetCommonName(v string) {
	o.CommonName = v
}

// GetEnabled returns value of Enabled
func (o *ProxyLBACMESetting) GetEnabled() bool {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *ProxyLBACMESetting) SetEnabled(v bool) {
	o.Enabled = v
}

/*************************************************
* ProxyLBStickySession
*************************************************/

// ProxyLBStickySession represents API parameter/response structure
type ProxyLBStickySession struct {
	Method  string
	Enabled bool
}

// Validate validates by field tags
func (o *ProxyLBStickySession) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBStickySession) setDefaults() interface{} {
	return &struct {
		Method  string
		Enabled bool
	}{
		Method:  o.Method,
		Enabled: o.Enabled,
	}
}

// GetMethod returns value of Method
func (o *ProxyLBStickySession) GetMethod() string {
	return o.Method
}

// SetMethod sets value to Method
func (o *ProxyLBStickySession) SetMethod(v string) {
	o.Method = v
}

// GetEnabled returns value of Enabled
func (o *ProxyLBStickySession) GetEnabled() bool {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *ProxyLBStickySession) SetEnabled(v bool) {
	o.Enabled = v
}

/*************************************************
* ProxyLBCreateRequest
*************************************************/

// ProxyLBCreateRequest represents API parameter/response structure
type ProxyLBCreateRequest struct {
	Plan           types.EProxyLBPlan    `mapconv:"ServiceClass"`
	HealthCheck    *ProxyLBHealthCheck   `mapconv:"Settings.ProxyLB.HealthCheck,recursive"`
	SorryServer    *ProxyLBSorryServer   `mapconv:"Settings.ProxyLB.SorryServer,recursive"`
	BindPorts      []*ProxyLBBindPort    `mapconv:"Settings.ProxyLB.[]BindPorts,recursive"`
	Servers        []*ProxyLBServer      `mapconv:"Settings.ProxyLB.[]Servers,recursive"`
	LetsEncrypt    *ProxyLBACMESetting   `mapconv:"Settings.ProxyLB.LetsEncrypt,recursive"`
	StickySession  *ProxyLBStickySession `mapconv:"Settings.ProxyLB.StickySession,recursive"`
	UseVIPFailover bool                  `mapconv:"Status.UseVIPFailover"`
	Region         types.EProxyLBRegion  `mapconv:"Status.Region"`
	Name           string                `validate:"required"`
	Description    string                `validate:"min=0,max=512"`
	Tags           types.Tags
	IconID         types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ProxyLBCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBCreateRequest) setDefaults() interface{} {
	return &struct {
		Plan           types.EProxyLBPlan    `mapconv:"ServiceClass"`
		HealthCheck    *ProxyLBHealthCheck   `mapconv:"Settings.ProxyLB.HealthCheck,recursive"`
		SorryServer    *ProxyLBSorryServer   `mapconv:"Settings.ProxyLB.SorryServer,recursive"`
		BindPorts      []*ProxyLBBindPort    `mapconv:"Settings.ProxyLB.[]BindPorts,recursive"`
		Servers        []*ProxyLBServer      `mapconv:"Settings.ProxyLB.[]Servers,recursive"`
		LetsEncrypt    *ProxyLBACMESetting   `mapconv:"Settings.ProxyLB.LetsEncrypt,recursive"`
		StickySession  *ProxyLBStickySession `mapconv:"Settings.ProxyLB.StickySession,recursive"`
		UseVIPFailover bool                  `mapconv:"Status.UseVIPFailover"`
		Region         types.EProxyLBRegion  `mapconv:"Status.Region"`
		Name           string                `validate:"required"`
		Description    string                `validate:"min=0,max=512"`
		Tags           types.Tags
		IconID         types.ID `mapconv:"Icon.ID"`
		Class          string   `mapconv:"Provider.Class"`
	}{
		Plan:           o.Plan,
		HealthCheck:    o.HealthCheck,
		SorryServer:    o.SorryServer,
		BindPorts:      o.BindPorts,
		Servers:        o.Servers,
		LetsEncrypt:    o.LetsEncrypt,
		StickySession:  o.StickySession,
		UseVIPFailover: o.UseVIPFailover,
		Region:         o.Region,
		Name:           o.Name,
		Description:    o.Description,
		Tags:           o.Tags,
		IconID:         o.IconID,
		Class:          "proxylb",
	}
}

// GetPlan returns value of Plan
func (o *ProxyLBCreateRequest) GetPlan() types.EProxyLBPlan {
	return o.Plan
}

// SetPlan sets value to Plan
func (o *ProxyLBCreateRequest) SetPlan(v types.EProxyLBPlan) {
	o.Plan = v
}

// GetHealthCheck returns value of HealthCheck
func (o *ProxyLBCreateRequest) GetHealthCheck() *ProxyLBHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *ProxyLBCreateRequest) SetHealthCheck(v *ProxyLBHealthCheck) {
	o.HealthCheck = v
}

// GetSorryServer returns value of SorryServer
func (o *ProxyLBCreateRequest) GetSorryServer() *ProxyLBSorryServer {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *ProxyLBCreateRequest) SetSorryServer(v *ProxyLBSorryServer) {
	o.SorryServer = v
}

// GetBindPorts returns value of BindPorts
func (o *ProxyLBCreateRequest) GetBindPorts() []*ProxyLBBindPort {
	return o.BindPorts
}

// SetBindPorts sets value to BindPorts
func (o *ProxyLBCreateRequest) SetBindPorts(v []*ProxyLBBindPort) {
	o.BindPorts = v
}

// GetServers returns value of Servers
func (o *ProxyLBCreateRequest) GetServers() []*ProxyLBServer {
	return o.Servers
}

// SetServers sets value to Servers
func (o *ProxyLBCreateRequest) SetServers(v []*ProxyLBServer) {
	o.Servers = v
}

// GetLetsEncrypt returns value of LetsEncrypt
func (o *ProxyLBCreateRequest) GetLetsEncrypt() *ProxyLBACMESetting {
	return o.LetsEncrypt
}

// SetLetsEncrypt sets value to LetsEncrypt
func (o *ProxyLBCreateRequest) SetLetsEncrypt(v *ProxyLBACMESetting) {
	o.LetsEncrypt = v
}

// GetStickySession returns value of StickySession
func (o *ProxyLBCreateRequest) GetStickySession() *ProxyLBStickySession {
	return o.StickySession
}

// SetStickySession sets value to StickySession
func (o *ProxyLBCreateRequest) SetStickySession(v *ProxyLBStickySession) {
	o.StickySession = v
}

// GetUseVIPFailover returns value of UseVIPFailover
func (o *ProxyLBCreateRequest) GetUseVIPFailover() bool {
	return o.UseVIPFailover
}

// SetUseVIPFailover sets value to UseVIPFailover
func (o *ProxyLBCreateRequest) SetUseVIPFailover(v bool) {
	o.UseVIPFailover = v
}

// GetRegion returns value of Region
func (o *ProxyLBCreateRequest) GetRegion() types.EProxyLBRegion {
	return o.Region
}

// SetRegion sets value to Region
func (o *ProxyLBCreateRequest) SetRegion(v types.EProxyLBRegion) {
	o.Region = v
}

// GetName returns value of Name
func (o *ProxyLBCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ProxyLBCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ProxyLBCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ProxyLBCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ProxyLBCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ProxyLBCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *ProxyLBCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *ProxyLBCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *ProxyLBCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *ProxyLBCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *ProxyLBCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ProxyLBCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* ProxyLBUpdateRequest
*************************************************/

// ProxyLBUpdateRequest represents API parameter/response structure
type ProxyLBUpdateRequest struct {
	HealthCheck   *ProxyLBHealthCheck   `mapconv:"Settings.ProxyLB.HealthCheck,recursive"`
	SorryServer   *ProxyLBSorryServer   `mapconv:"Settings.ProxyLB.SorryServer,recursive"`
	BindPorts     []*ProxyLBBindPort    `mapconv:"Settings.ProxyLB.[]BindPorts,recursive"`
	Servers       []*ProxyLBServer      `mapconv:"Settings.ProxyLB.[]Servers,recursive"`
	LetsEncrypt   *ProxyLBACMESetting   `mapconv:"Settings.ProxyLB.LetsEncrypt,recursive"`
	StickySession *ProxyLBStickySession `mapconv:"Settings.ProxyLB.StickySession,recursive"`
	Name          string                `validate:"required"`
	Description   string                `validate:"min=0,max=512"`
	Tags          types.Tags
	IconID        types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ProxyLBUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBUpdateRequest) setDefaults() interface{} {
	return &struct {
		HealthCheck   *ProxyLBHealthCheck   `mapconv:"Settings.ProxyLB.HealthCheck,recursive"`
		SorryServer   *ProxyLBSorryServer   `mapconv:"Settings.ProxyLB.SorryServer,recursive"`
		BindPorts     []*ProxyLBBindPort    `mapconv:"Settings.ProxyLB.[]BindPorts,recursive"`
		Servers       []*ProxyLBServer      `mapconv:"Settings.ProxyLB.[]Servers,recursive"`
		LetsEncrypt   *ProxyLBACMESetting   `mapconv:"Settings.ProxyLB.LetsEncrypt,recursive"`
		StickySession *ProxyLBStickySession `mapconv:"Settings.ProxyLB.StickySession,recursive"`
		Name          string                `validate:"required"`
		Description   string                `validate:"min=0,max=512"`
		Tags          types.Tags
		IconID        types.ID `mapconv:"Icon.ID"`
	}{
		HealthCheck:   o.HealthCheck,
		SorryServer:   o.SorryServer,
		BindPorts:     o.BindPorts,
		Servers:       o.Servers,
		LetsEncrypt:   o.LetsEncrypt,
		StickySession: o.StickySession,
		Name:          o.Name,
		Description:   o.Description,
		Tags:          o.Tags,
		IconID:        o.IconID,
	}
}

// GetHealthCheck returns value of HealthCheck
func (o *ProxyLBUpdateRequest) GetHealthCheck() *ProxyLBHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *ProxyLBUpdateRequest) SetHealthCheck(v *ProxyLBHealthCheck) {
	o.HealthCheck = v
}

// GetSorryServer returns value of SorryServer
func (o *ProxyLBUpdateRequest) GetSorryServer() *ProxyLBSorryServer {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *ProxyLBUpdateRequest) SetSorryServer(v *ProxyLBSorryServer) {
	o.SorryServer = v
}

// GetBindPorts returns value of BindPorts
func (o *ProxyLBUpdateRequest) GetBindPorts() []*ProxyLBBindPort {
	return o.BindPorts
}

// SetBindPorts sets value to BindPorts
func (o *ProxyLBUpdateRequest) SetBindPorts(v []*ProxyLBBindPort) {
	o.BindPorts = v
}

// GetServers returns value of Servers
func (o *ProxyLBUpdateRequest) GetServers() []*ProxyLBServer {
	return o.Servers
}

// SetServers sets value to Servers
func (o *ProxyLBUpdateRequest) SetServers(v []*ProxyLBServer) {
	o.Servers = v
}

// GetLetsEncrypt returns value of LetsEncrypt
func (o *ProxyLBUpdateRequest) GetLetsEncrypt() *ProxyLBACMESetting {
	return o.LetsEncrypt
}

// SetLetsEncrypt sets value to LetsEncrypt
func (o *ProxyLBUpdateRequest) SetLetsEncrypt(v *ProxyLBACMESetting) {
	o.LetsEncrypt = v
}

// GetStickySession returns value of StickySession
func (o *ProxyLBUpdateRequest) GetStickySession() *ProxyLBStickySession {
	return o.StickySession
}

// SetStickySession sets value to StickySession
func (o *ProxyLBUpdateRequest) SetStickySession(v *ProxyLBStickySession) {
	o.StickySession = v
}

// GetName returns value of Name
func (o *ProxyLBUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ProxyLBUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ProxyLBUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ProxyLBUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ProxyLBUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ProxyLBUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *ProxyLBUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *ProxyLBUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *ProxyLBUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *ProxyLBUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *ProxyLBUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ProxyLBUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* ProxyLBChangePlanRequest
*************************************************/

// ProxyLBChangePlanRequest represents API parameter/response structure
type ProxyLBChangePlanRequest struct {
	Plan types.EProxyLBPlan `mapconv:"ServiceClass"`
}

// Validate validates by field tags
func (o *ProxyLBChangePlanRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBChangePlanRequest) setDefaults() interface{} {
	return &struct {
		Plan types.EProxyLBPlan `mapconv:"ServiceClass"`
	}{
		Plan: o.Plan,
	}
}

// GetPlan returns value of Plan
func (o *ProxyLBChangePlanRequest) GetPlan() types.EProxyLBPlan {
	return o.Plan
}

// SetPlan sets value to Plan
func (o *ProxyLBChangePlanRequest) SetPlan(v types.EProxyLBPlan) {
	o.Plan = v
}

/*************************************************
* ProxyLBCertificates
*************************************************/

// ProxyLBCertificates represents API parameter/response structure
type ProxyLBCertificates struct {
	ServerCertificate       string
	IntermediateCertificate string
	PrivateKey              string
	CertificateEndDate      time.Time
	CertificateCommonName   string
	AdditionalCerts         []*ProxyLBAdditionalCert `mapconv:"[]AdditionalCerts, recursive"`
}

// Validate validates by field tags
func (o *ProxyLBCertificates) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBCertificates) setDefaults() interface{} {
	return &struct {
		ServerCertificate       string
		IntermediateCertificate string
		PrivateKey              string
		CertificateEndDate      time.Time
		CertificateCommonName   string
		AdditionalCerts         []*ProxyLBAdditionalCert `mapconv:"[]AdditionalCerts, recursive"`
	}{
		ServerCertificate:       o.ServerCertificate,
		IntermediateCertificate: o.IntermediateCertificate,
		PrivateKey:              o.PrivateKey,
		CertificateEndDate:      o.CertificateEndDate,
		CertificateCommonName:   o.CertificateCommonName,
		AdditionalCerts:         o.AdditionalCerts,
	}
}

// GetServerCertificate returns value of ServerCertificate
func (o *ProxyLBCertificates) GetServerCertificate() string {
	return o.ServerCertificate
}

// SetServerCertificate sets value to ServerCertificate
func (o *ProxyLBCertificates) SetServerCertificate(v string) {
	o.ServerCertificate = v
}

// GetIntermediateCertificate returns value of IntermediateCertificate
func (o *ProxyLBCertificates) GetIntermediateCertificate() string {
	return o.IntermediateCertificate
}

// SetIntermediateCertificate sets value to IntermediateCertificate
func (o *ProxyLBCertificates) SetIntermediateCertificate(v string) {
	o.IntermediateCertificate = v
}

// GetPrivateKey returns value of PrivateKey
func (o *ProxyLBCertificates) GetPrivateKey() string {
	return o.PrivateKey
}

// SetPrivateKey sets value to PrivateKey
func (o *ProxyLBCertificates) SetPrivateKey(v string) {
	o.PrivateKey = v
}

// GetCertificateEndDate returns value of CertificateEndDate
func (o *ProxyLBCertificates) GetCertificateEndDate() time.Time {
	return o.CertificateEndDate
}

// SetCertificateEndDate sets value to CertificateEndDate
func (o *ProxyLBCertificates) SetCertificateEndDate(v time.Time) {
	o.CertificateEndDate = v
}

// GetCertificateCommonName returns value of CertificateCommonName
func (o *ProxyLBCertificates) GetCertificateCommonName() string {
	return o.CertificateCommonName
}

// SetCertificateCommonName sets value to CertificateCommonName
func (o *ProxyLBCertificates) SetCertificateCommonName(v string) {
	o.CertificateCommonName = v
}

// GetAdditionalCerts returns value of AdditionalCerts
func (o *ProxyLBCertificates) GetAdditionalCerts() []*ProxyLBAdditionalCert {
	return o.AdditionalCerts
}

// SetAdditionalCerts sets value to AdditionalCerts
func (o *ProxyLBCertificates) SetAdditionalCerts(v []*ProxyLBAdditionalCert) {
	o.AdditionalCerts = v
}

/*************************************************
* ProxyLBAdditionalCert
*************************************************/

// ProxyLBAdditionalCert represents API parameter/response structure
type ProxyLBAdditionalCert struct {
	ServerCertificate       string
	IntermediateCertificate string
	PrivateKey              string
	CertificateEndDate      time.Time
	CertificateCommonName   string
}

// Validate validates by field tags
func (o *ProxyLBAdditionalCert) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBAdditionalCert) setDefaults() interface{} {
	return &struct {
		ServerCertificate       string
		IntermediateCertificate string
		PrivateKey              string
		CertificateEndDate      time.Time
		CertificateCommonName   string
	}{
		ServerCertificate:       o.ServerCertificate,
		IntermediateCertificate: o.IntermediateCertificate,
		PrivateKey:              o.PrivateKey,
		CertificateEndDate:      o.CertificateEndDate,
		CertificateCommonName:   o.CertificateCommonName,
	}
}

// GetServerCertificate returns value of ServerCertificate
func (o *ProxyLBAdditionalCert) GetServerCertificate() string {
	return o.ServerCertificate
}

// SetServerCertificate sets value to ServerCertificate
func (o *ProxyLBAdditionalCert) SetServerCertificate(v string) {
	o.ServerCertificate = v
}

// GetIntermediateCertificate returns value of IntermediateCertificate
func (o *ProxyLBAdditionalCert) GetIntermediateCertificate() string {
	return o.IntermediateCertificate
}

// SetIntermediateCertificate sets value to IntermediateCertificate
func (o *ProxyLBAdditionalCert) SetIntermediateCertificate(v string) {
	o.IntermediateCertificate = v
}

// GetPrivateKey returns value of PrivateKey
func (o *ProxyLBAdditionalCert) GetPrivateKey() string {
	return o.PrivateKey
}

// SetPrivateKey sets value to PrivateKey
func (o *ProxyLBAdditionalCert) SetPrivateKey(v string) {
	o.PrivateKey = v
}

// GetCertificateEndDate returns value of CertificateEndDate
func (o *ProxyLBAdditionalCert) GetCertificateEndDate() time.Time {
	return o.CertificateEndDate
}

// SetCertificateEndDate sets value to CertificateEndDate
func (o *ProxyLBAdditionalCert) SetCertificateEndDate(v time.Time) {
	o.CertificateEndDate = v
}

// GetCertificateCommonName returns value of CertificateCommonName
func (o *ProxyLBAdditionalCert) GetCertificateCommonName() string {
	return o.CertificateCommonName
}

// SetCertificateCommonName sets value to CertificateCommonName
func (o *ProxyLBAdditionalCert) SetCertificateCommonName(v string) {
	o.CertificateCommonName = v
}

/*************************************************
* ProxyLBSetCertificatesRequest
*************************************************/

// ProxyLBSetCertificatesRequest represents API parameter/response structure
type ProxyLBSetCertificatesRequest struct {
	ServerCertificate       string
	IntermediateCertificate string
	PrivateKey              string
	AdditionalCerts         []*ProxyLBAdditionalCert `mapconv:"[]AdditionalCerts, recursive"`
}

// Validate validates by field tags
func (o *ProxyLBSetCertificatesRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBSetCertificatesRequest) setDefaults() interface{} {
	return &struct {
		ServerCertificate       string
		IntermediateCertificate string
		PrivateKey              string
		AdditionalCerts         []*ProxyLBAdditionalCert `mapconv:"[]AdditionalCerts, recursive"`
	}{
		ServerCertificate:       o.ServerCertificate,
		IntermediateCertificate: o.IntermediateCertificate,
		PrivateKey:              o.PrivateKey,
		AdditionalCerts:         o.AdditionalCerts,
	}
}

// GetServerCertificate returns value of ServerCertificate
func (o *ProxyLBSetCertificatesRequest) GetServerCertificate() string {
	return o.ServerCertificate
}

// SetServerCertificate sets value to ServerCertificate
func (o *ProxyLBSetCertificatesRequest) SetServerCertificate(v string) {
	o.ServerCertificate = v
}

// GetIntermediateCertificate returns value of IntermediateCertificate
func (o *ProxyLBSetCertificatesRequest) GetIntermediateCertificate() string {
	return o.IntermediateCertificate
}

// SetIntermediateCertificate sets value to IntermediateCertificate
func (o *ProxyLBSetCertificatesRequest) SetIntermediateCertificate(v string) {
	o.IntermediateCertificate = v
}

// GetPrivateKey returns value of PrivateKey
func (o *ProxyLBSetCertificatesRequest) GetPrivateKey() string {
	return o.PrivateKey
}

// SetPrivateKey sets value to PrivateKey
func (o *ProxyLBSetCertificatesRequest) SetPrivateKey(v string) {
	o.PrivateKey = v
}

// GetAdditionalCerts returns value of AdditionalCerts
func (o *ProxyLBSetCertificatesRequest) GetAdditionalCerts() []*ProxyLBAdditionalCert {
	return o.AdditionalCerts
}

// SetAdditionalCerts sets value to AdditionalCerts
func (o *ProxyLBSetCertificatesRequest) SetAdditionalCerts(v []*ProxyLBAdditionalCert) {
	o.AdditionalCerts = v
}

/*************************************************
* ProxyLBHealth
*************************************************/

// ProxyLBHealth represents API parameter/response structure
type ProxyLBHealth struct {
	ActiveConn int
	CPS        int
	CurrentVIP string
	Servers    []*LoadBalancerServerStatus `mapconv:"[]Servers,recursive"`
}

// Validate validates by field tags
func (o *ProxyLBHealth) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ProxyLBHealth) setDefaults() interface{} {
	return &struct {
		ActiveConn int
		CPS        int
		CurrentVIP string
		Servers    []*LoadBalancerServerStatus `mapconv:"[]Servers,recursive"`
	}{
		ActiveConn: o.ActiveConn,
		CPS:        o.CPS,
		CurrentVIP: o.CurrentVIP,
		Servers:    o.Servers,
	}
}

// GetActiveConn returns value of ActiveConn
func (o *ProxyLBHealth) GetActiveConn() int {
	return o.ActiveConn
}

// SetActiveConn sets value to ActiveConn
func (o *ProxyLBHealth) SetActiveConn(v int) {
	o.ActiveConn = v
}

// GetCPS returns value of CPS
func (o *ProxyLBHealth) GetCPS() int {
	return o.CPS
}

// SetCPS sets value to CPS
func (o *ProxyLBHealth) SetCPS(v int) {
	o.CPS = v
}

// GetCurrentVIP returns value of CurrentVIP
func (o *ProxyLBHealth) GetCurrentVIP() string {
	return o.CurrentVIP
}

// SetCurrentVIP sets value to CurrentVIP
func (o *ProxyLBHealth) SetCurrentVIP(v string) {
	o.CurrentVIP = v
}

// GetServers returns value of Servers
func (o *ProxyLBHealth) GetServers() []*LoadBalancerServerStatus {
	return o.Servers
}

// SetServers sets value to Servers
func (o *ProxyLBHealth) SetServers(v []*LoadBalancerServerStatus) {
	o.Servers = v
}

/*************************************************
* Server
*************************************************/

// Server represents API parameter/response structure
type Server struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    types.Tags
	Availability            types.EAvailability
	HostName                string
	InterfaceDriver         types.EInterfaceDriver      `mapconv:",default=virtio"`
	ServerPlanID            types.ID                    `mapconv:"ServerPlan.ID"`
	ServerPlanName          string                      `mapconv:"ServerPlan.Name"`
	CPU                     int                         `mapconv:"ServerPlan.CPU"`
	MemoryMB                int                         `mapconv:"ServerPlan.MemoryMB"`
	ServerPlanCommitment    types.ECommitment           `mapconv:"ServerPlan.Commitment,default=standard"`
	ServerPlanGeneration    types.EPlanGeneration       `mapconv:"ServerPlan.Generation"`
	Zone                    *ZoneInfo                   `json:",omitempty" mapconv:",omitempty,recursive"`
	InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
	InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
	InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
	InstanceBeforeStatus    types.EServerInstanceStatus `mapconv:"Instance.BeforeStatus"`
	InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
	InstanceWarnings        string                      `mapconv:"Instance.Warnings"`
	InstanceWarningsValue   int                         `mapconv:"Instance.WarningsValue"`
	Disks                   []*Disk                     `json:",omitempty" mapconv:",recursive"`
	Interfaces              []*InterfaceView            `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
	CDROMID                 types.ID                    `mapconv:"Instance.CDROM.ID"`
	PrivateHostID           types.ID                    `mapconv:"PrivateHost.ID"`
	PrivateHostName         string                      `mapconv:"PrivateHost.Name"`
	BundleInfo              *BundleInfo                 `json:",omitempty" mapconv:",omitempty,recursive"`
	IconID                  types.ID                    `mapconv:"Icon.ID"`
	CreatedAt               time.Time
	ModifiedAt              time.Time
}

// Validate validates by field tags
func (o *Server) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Server) setDefaults() interface{} {
	return &struct {
		ID                      types.ID
		Name                    string `validate:"required"`
		Description             string `validate:"min=0,max=512"`
		Tags                    types.Tags
		Availability            types.EAvailability
		HostName                string
		InterfaceDriver         types.EInterfaceDriver      `mapconv:",default=virtio"`
		ServerPlanID            types.ID                    `mapconv:"ServerPlan.ID"`
		ServerPlanName          string                      `mapconv:"ServerPlan.Name"`
		CPU                     int                         `mapconv:"ServerPlan.CPU"`
		MemoryMB                int                         `mapconv:"ServerPlan.MemoryMB"`
		ServerPlanCommitment    types.ECommitment           `mapconv:"ServerPlan.Commitment,default=standard"`
		ServerPlanGeneration    types.EPlanGeneration       `mapconv:"ServerPlan.Generation"`
		Zone                    *ZoneInfo                   `json:",omitempty" mapconv:",omitempty,recursive"`
		InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
		InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
		InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
		InstanceBeforeStatus    types.EServerInstanceStatus `mapconv:"Instance.BeforeStatus"`
		InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
		InstanceWarnings        string                      `mapconv:"Instance.Warnings"`
		InstanceWarningsValue   int                         `mapconv:"Instance.WarningsValue"`
		Disks                   []*Disk                     `json:",omitempty" mapconv:",recursive"`
		Interfaces              []*InterfaceView            `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
		CDROMID                 types.ID                    `mapconv:"Instance.CDROM.ID"`
		PrivateHostID           types.ID                    `mapconv:"PrivateHost.ID"`
		PrivateHostName         string                      `mapconv:"PrivateHost.Name"`
		BundleInfo              *BundleInfo                 `json:",omitempty" mapconv:",omitempty,recursive"`
		IconID                  types.ID                    `mapconv:"Icon.ID"`
		CreatedAt               time.Time
		ModifiedAt              time.Time
	}{
		ID:                      o.ID,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		Availability:            o.Availability,
		HostName:                o.HostName,
		InterfaceDriver:         o.InterfaceDriver,
		ServerPlanID:            o.ServerPlanID,
		ServerPlanName:          o.ServerPlanName,
		CPU:                     o.CPU,
		MemoryMB:                o.MemoryMB,
		ServerPlanCommitment:    o.ServerPlanCommitment,
		ServerPlanGeneration:    o.ServerPlanGeneration,
		Zone:                    o.Zone,
		InstanceHostName:        o.InstanceHostName,
		InstanceHostInfoURL:     o.InstanceHostInfoURL,
		InstanceStatus:          o.InstanceStatus,
		InstanceBeforeStatus:    o.InstanceBeforeStatus,
		InstanceStatusChangedAt: o.InstanceStatusChangedAt,
		InstanceWarnings:        o.InstanceWarnings,
		InstanceWarningsValue:   o.InstanceWarningsValue,
		Disks:                   o.Disks,
		Interfaces:              o.Interfaces,
		CDROMID:                 o.CDROMID,
		PrivateHostID:           o.PrivateHostID,
		PrivateHostName:         o.PrivateHostName,
		BundleInfo:              o.BundleInfo,
		IconID:                  o.IconID,
		CreatedAt:               o.CreatedAt,
		ModifiedAt:              o.ModifiedAt,
	}
}

// GetID returns value of ID
func (o *Server) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Server) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Server) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Server) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Server) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Server) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Server) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Server) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Server) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Server) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Server) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Server) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *Server) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *Server) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *Server) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *Server) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *Server) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Server) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetHostName returns value of HostName
func (o *Server) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *Server) SetHostName(v string) {
	o.HostName = v
}

// GetInterfaceDriver returns value of InterfaceDriver
func (o *Server) GetInterfaceDriver() types.EInterfaceDriver {
	return o.InterfaceDriver
}

// SetInterfaceDriver sets value to InterfaceDriver
func (o *Server) SetInterfaceDriver(v types.EInterfaceDriver) {
	o.InterfaceDriver = v
}

// GetServerPlanID returns value of ServerPlanID
func (o *Server) GetServerPlanID() types.ID {
	return o.ServerPlanID
}

// SetServerPlanID sets value to ServerPlanID
func (o *Server) SetServerPlanID(v types.ID) {
	o.ServerPlanID = v
}

// GetServerPlanName returns value of ServerPlanName
func (o *Server) GetServerPlanName() string {
	return o.ServerPlanName
}

// SetServerPlanName sets value to ServerPlanName
func (o *Server) SetServerPlanName(v string) {
	o.ServerPlanName = v
}

// GetCPU returns value of CPU
func (o *Server) GetCPU() int {
	return o.CPU
}

// SetCPU sets value to CPU
func (o *Server) SetCPU(v int) {
	o.CPU = v
}

// GetMemoryMB returns value of MemoryMB
func (o *Server) GetMemoryMB() int {
	return o.MemoryMB
}

// SetMemoryMB sets value to MemoryMB
func (o *Server) SetMemoryMB(v int) {
	o.MemoryMB = v
}

// GetMemoryGB .
func (o *Server) GetMemoryGB() int {
	return accessor.GetMemoryGB(o)
}

// GetServerPlanCommitment returns value of ServerPlanCommitment
func (o *Server) GetServerPlanCommitment() types.ECommitment {
	return o.ServerPlanCommitment
}

// SetServerPlanCommitment sets value to ServerPlanCommitment
func (o *Server) SetServerPlanCommitment(v types.ECommitment) {
	o.ServerPlanCommitment = v
}

// GetServerPlanGeneration returns value of ServerPlanGeneration
func (o *Server) GetServerPlanGeneration() types.EPlanGeneration {
	return o.ServerPlanGeneration
}

// SetServerPlanGeneration sets value to ServerPlanGeneration
func (o *Server) SetServerPlanGeneration(v types.EPlanGeneration) {
	o.ServerPlanGeneration = v
}

// GetZone returns value of Zone
func (o *Server) GetZone() *ZoneInfo {
	return o.Zone
}

// SetZone sets value to Zone
func (o *Server) SetZone(v *ZoneInfo) {
	o.Zone = v
}

// GetInstanceHostName returns value of InstanceHostName
func (o *Server) GetInstanceHostName() string {
	return o.InstanceHostName
}

// SetInstanceHostName sets value to InstanceHostName
func (o *Server) SetInstanceHostName(v string) {
	o.InstanceHostName = v
}

// GetInstanceHostInfoURL returns value of InstanceHostInfoURL
func (o *Server) GetInstanceHostInfoURL() string {
	return o.InstanceHostInfoURL
}

// SetInstanceHostInfoURL sets value to InstanceHostInfoURL
func (o *Server) SetInstanceHostInfoURL(v string) {
	o.InstanceHostInfoURL = v
}

// GetInstanceStatus returns value of InstanceStatus
func (o *Server) GetInstanceStatus() types.EServerInstanceStatus {
	return o.InstanceStatus
}

// SetInstanceStatus sets value to InstanceStatus
func (o *Server) SetInstanceStatus(v types.EServerInstanceStatus) {
	o.InstanceStatus = v
}

// GetInstanceBeforeStatus returns value of InstanceBeforeStatus
func (o *Server) GetInstanceBeforeStatus() types.EServerInstanceStatus {
	return o.InstanceBeforeStatus
}

// SetInstanceBeforeStatus sets value to InstanceBeforeStatus
func (o *Server) SetInstanceBeforeStatus(v types.EServerInstanceStatus) {
	o.InstanceBeforeStatus = v
}

// GetInstanceStatusChangedAt returns value of InstanceStatusChangedAt
func (o *Server) GetInstanceStatusChangedAt() time.Time {
	return o.InstanceStatusChangedAt
}

// SetInstanceStatusChangedAt sets value to InstanceStatusChangedAt
func (o *Server) SetInstanceStatusChangedAt(v time.Time) {
	o.InstanceStatusChangedAt = v
}

// GetInstanceWarnings returns value of InstanceWarnings
func (o *Server) GetInstanceWarnings() string {
	return o.InstanceWarnings
}

// SetInstanceWarnings sets value to InstanceWarnings
func (o *Server) SetInstanceWarnings(v string) {
	o.InstanceWarnings = v
}

// GetInstanceWarningsValue returns value of InstanceWarningsValue
func (o *Server) GetInstanceWarningsValue() int {
	return o.InstanceWarningsValue
}

// SetInstanceWarningsValue sets value to InstanceWarningsValue
func (o *Server) SetInstanceWarningsValue(v int) {
	o.InstanceWarningsValue = v
}

// GetDisks returns value of Disks
func (o *Server) GetDisks() []*Disk {
	return o.Disks
}

// SetDisks sets value to Disks
func (o *Server) SetDisks(v []*Disk) {
	o.Disks = v
}

// GetInterfaces returns value of Interfaces
func (o *Server) GetInterfaces() []*InterfaceView {
	return o.Interfaces
}

// SetInterfaces sets value to Interfaces
func (o *Server) SetInterfaces(v []*InterfaceView) {
	o.Interfaces = v
}

// GetCDROMID returns value of CDROMID
func (o *Server) GetCDROMID() types.ID {
	return o.CDROMID
}

// SetCDROMID sets value to CDROMID
func (o *Server) SetCDROMID(v types.ID) {
	o.CDROMID = v
}

// GetPrivateHostID returns value of PrivateHostID
func (o *Server) GetPrivateHostID() types.ID {
	return o.PrivateHostID
}

// SetPrivateHostID sets value to PrivateHostID
func (o *Server) SetPrivateHostID(v types.ID) {
	o.PrivateHostID = v
}

// GetPrivateHostName returns value of PrivateHostName
func (o *Server) GetPrivateHostName() string {
	return o.PrivateHostName
}

// SetPrivateHostName sets value to PrivateHostName
func (o *Server) SetPrivateHostName(v string) {
	o.PrivateHostName = v
}

// GetBundleInfo returns value of BundleInfo
func (o *Server) GetBundleInfo() *BundleInfo {
	return o.BundleInfo
}

// SetBundleInfo sets value to BundleInfo
func (o *Server) SetBundleInfo(v *BundleInfo) {
	o.BundleInfo = v
}

// GetIconID returns value of IconID
func (o *Server) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *Server) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Server) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Server) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Server) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Server) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

/*************************************************
* ZoneInfo
*************************************************/

// ZoneInfo represents API parameter/response structure
type ZoneInfo struct {
	ID          types.ID
	Name        string         `validate:"required"`
	DisplayName string         `json:",omitempty" mapconv:"Description,omitempty"`
	IsDummy     bool           `json:",omitempty" mapconv:",omitempty"`
	VNCProxy    *VNCProxy      `json:",omitempty" mapconv:",omitempty,recursive"`
	FTPServer   *FTPServerInfo `json:",omitempty" mapconv:",omitempty,recursive"`
	Region      *Region        `json:",omitempty" mapconv:",omitempty,recursive"`
}

// Validate validates by field tags
func (o *ZoneInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ZoneInfo) setDefaults() interface{} {
	return &struct {
		ID          types.ID
		Name        string         `validate:"required"`
		DisplayName string         `json:",omitempty" mapconv:"Description,omitempty"`
		IsDummy     bool           `json:",omitempty" mapconv:",omitempty"`
		VNCProxy    *VNCProxy      `json:",omitempty" mapconv:",omitempty,recursive"`
		FTPServer   *FTPServerInfo `json:",omitempty" mapconv:",omitempty,recursive"`
		Region      *Region        `json:",omitempty" mapconv:",omitempty,recursive"`
	}{
		ID:          o.ID,
		Name:        o.Name,
		DisplayName: o.DisplayName,
		IsDummy:     o.IsDummy,
		VNCProxy:    o.VNCProxy,
		FTPServer:   o.FTPServer,
		Region:      o.Region,
	}
}

// GetID returns value of ID
func (o *ZoneInfo) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *ZoneInfo) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *ZoneInfo) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *ZoneInfo) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *ZoneInfo) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *ZoneInfo) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *ZoneInfo) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ZoneInfo) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns value of DisplayName
func (o *ZoneInfo) GetDisplayName() string {
	return o.DisplayName
}

// SetDisplayName sets value to DisplayName
func (o *ZoneInfo) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetIsDummy returns value of IsDummy
func (o *ZoneInfo) GetIsDummy() bool {
	return o.IsDummy
}

// SetIsDummy sets value to IsDummy
func (o *ZoneInfo) SetIsDummy(v bool) {
	o.IsDummy = v
}

// GetVNCProxy returns value of VNCProxy
func (o *ZoneInfo) GetVNCProxy() *VNCProxy {
	return o.VNCProxy
}

// SetVNCProxy sets value to VNCProxy
func (o *ZoneInfo) SetVNCProxy(v *VNCProxy) {
	o.VNCProxy = v
}

// GetFTPServer returns value of FTPServer
func (o *ZoneInfo) GetFTPServer() *FTPServerInfo {
	return o.FTPServer
}

// SetFTPServer sets value to FTPServer
func (o *ZoneInfo) SetFTPServer(v *FTPServerInfo) {
	o.FTPServer = v
}

// GetRegion returns value of Region
func (o *ZoneInfo) GetRegion() *Region {
	return o.Region
}

// SetRegion sets value to Region
func (o *ZoneInfo) SetRegion(v *Region) {
	o.Region = v
}

/*************************************************
* VNCProxy
*************************************************/

// VNCProxy represents API parameter/response structure
type VNCProxy struct {
	HostName  string `json:",omitempty" mapconv:",omitempty"`
	IPAddress string `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *VNCProxy) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VNCProxy) setDefaults() interface{} {
	return &struct {
		HostName  string `json:",omitempty" mapconv:",omitempty"`
		IPAddress string `json:",omitempty" mapconv:",omitempty"`
	}{
		HostName:  o.HostName,
		IPAddress: o.IPAddress,
	}
}

// GetHostName returns value of HostName
func (o *VNCProxy) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *VNCProxy) SetHostName(v string) {
	o.HostName = v
}

// GetIPAddress returns value of IPAddress
func (o *VNCProxy) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *VNCProxy) SetIPAddress(v string) {
	o.IPAddress = v
}

/*************************************************
* FTPServerInfo
*************************************************/

// FTPServerInfo represents API parameter/response structure
type FTPServerInfo struct {
	HostName  string
	IPAddress string
}

// Validate validates by field tags
func (o *FTPServerInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *FTPServerInfo) setDefaults() interface{} {
	return &struct {
		HostName  string
		IPAddress string
	}{
		HostName:  o.HostName,
		IPAddress: o.IPAddress,
	}
}

// GetHostName returns value of HostName
func (o *FTPServerInfo) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *FTPServerInfo) SetHostName(v string) {
	o.HostName = v
}

// GetIPAddress returns value of IPAddress
func (o *FTPServerInfo) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *FTPServerInfo) SetIPAddress(v string) {
	o.IPAddress = v
}

/*************************************************
* ServerCreateRequest
*************************************************/

// ServerCreateRequest represents API parameter/response structure
type ServerCreateRequest struct {
	CPU                  int                    `mapconv:"ServerPlan.CPU"`
	MemoryMB             int                    `mapconv:"ServerPlan.MemoryMB"`
	ServerPlanCommitment types.ECommitment      `mapconv:"ServerPlan.Commitment,default=standard"`
	ServerPlanGeneration types.EPlanGeneration  `mapconv:"ServerPlan.Generation"`
	ConnectedSwitches    []*ConnectedSwitch     `json:",omitempty" mapconv:"[]ConnectedSwitches,recursive"`
	InterfaceDriver      types.EInterfaceDriver `mapconv:",default=virtio"`
	Name                 string                 `validate:"required"`
	Description          string                 `validate:"min=0,max=512"`
	Tags                 types.Tags
	IconID               types.ID `mapconv:"Icon.ID"`
	WaitDiskMigration    bool     `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *ServerCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ServerCreateRequest) setDefaults() interface{} {
	return &struct {
		CPU                  int                    `mapconv:"ServerPlan.CPU"`
		MemoryMB             int                    `mapconv:"ServerPlan.MemoryMB"`
		ServerPlanCommitment types.ECommitment      `mapconv:"ServerPlan.Commitment,default=standard"`
		ServerPlanGeneration types.EPlanGeneration  `mapconv:"ServerPlan.Generation"`
		ConnectedSwitches    []*ConnectedSwitch     `json:",omitempty" mapconv:"[]ConnectedSwitches,recursive"`
		InterfaceDriver      types.EInterfaceDriver `mapconv:",default=virtio"`
		Name                 string                 `validate:"required"`
		Description          string                 `validate:"min=0,max=512"`
		Tags                 types.Tags
		IconID               types.ID `mapconv:"Icon.ID"`
		WaitDiskMigration    bool     `json:",omitempty" mapconv:",omitempty"`
	}{
		CPU:                  o.CPU,
		MemoryMB:             o.MemoryMB,
		ServerPlanCommitment: o.ServerPlanCommitment,
		ServerPlanGeneration: o.ServerPlanGeneration,
		ConnectedSwitches:    o.ConnectedSwitches,
		InterfaceDriver:      o.InterfaceDriver,
		Name:                 o.Name,
		Description:          o.Description,
		Tags:                 o.Tags,
		IconID:               o.IconID,
		WaitDiskMigration:    o.WaitDiskMigration,
	}
}

// GetCPU returns value of CPU
func (o *ServerCreateRequest) GetCPU() int {
	return o.CPU
}

// SetCPU sets value to CPU
func (o *ServerCreateRequest) SetCPU(v int) {
	o.CPU = v
}

// GetMemoryMB returns value of MemoryMB
func (o *ServerCreateRequest) GetMemoryMB() int {
	return o.MemoryMB
}

// SetMemoryMB sets value to MemoryMB
func (o *ServerCreateRequest) SetMemoryMB(v int) {
	o.MemoryMB = v
}

// GetMemoryGB .
func (o *ServerCreateRequest) GetMemoryGB() int {
	return accessor.GetMemoryGB(o)
}

// GetServerPlanCommitment returns value of ServerPlanCommitment
func (o *ServerCreateRequest) GetServerPlanCommitment() types.ECommitment {
	return o.ServerPlanCommitment
}

// SetServerPlanCommitment sets value to ServerPlanCommitment
func (o *ServerCreateRequest) SetServerPlanCommitment(v types.ECommitment) {
	o.ServerPlanCommitment = v
}

// GetServerPlanGeneration returns value of ServerPlanGeneration
func (o *ServerCreateRequest) GetServerPlanGeneration() types.EPlanGeneration {
	return o.ServerPlanGeneration
}

// SetServerPlanGeneration sets value to ServerPlanGeneration
func (o *ServerCreateRequest) SetServerPlanGeneration(v types.EPlanGeneration) {
	o.ServerPlanGeneration = v
}

// GetConnectedSwitches returns value of ConnectedSwitches
func (o *ServerCreateRequest) GetConnectedSwitches() []*ConnectedSwitch {
	return o.ConnectedSwitches
}

// SetConnectedSwitches sets value to ConnectedSwitches
func (o *ServerCreateRequest) SetConnectedSwitches(v []*ConnectedSwitch) {
	o.ConnectedSwitches = v
}

// GetInterfaceDriver returns value of InterfaceDriver
func (o *ServerCreateRequest) GetInterfaceDriver() types.EInterfaceDriver {
	return o.InterfaceDriver
}

// SetInterfaceDriver sets value to InterfaceDriver
func (o *ServerCreateRequest) SetInterfaceDriver(v types.EInterfaceDriver) {
	o.InterfaceDriver = v
}

// GetName returns value of Name
func (o *ServerCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ServerCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ServerCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ServerCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ServerCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ServerCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *ServerCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *ServerCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *ServerCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *ServerCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *ServerCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ServerCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetWaitDiskMigration returns value of WaitDiskMigration
func (o *ServerCreateRequest) GetWaitDiskMigration() bool {
	return o.WaitDiskMigration
}

// SetWaitDiskMigration sets value to WaitDiskMigration
func (o *ServerCreateRequest) SetWaitDiskMigration(v bool) {
	o.WaitDiskMigration = v
}

/*************************************************
* ConnectedSwitch
*************************************************/

// ConnectedSwitch represents API parameter/response structure
type ConnectedSwitch struct {
	ID    types.ID
	Scope types.EScope
}

// Validate validates by field tags
func (o *ConnectedSwitch) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ConnectedSwitch) setDefaults() interface{} {
	return &struct {
		ID    types.ID
		Scope types.EScope
	}{
		ID:    o.ID,
		Scope: o.Scope,
	}
}

// GetID returns value of ID
func (o *ConnectedSwitch) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *ConnectedSwitch) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *ConnectedSwitch) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *ConnectedSwitch) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *ConnectedSwitch) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *ConnectedSwitch) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetScope returns value of Scope
func (o *ConnectedSwitch) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *ConnectedSwitch) SetScope(v types.EScope) {
	o.Scope = v
}

/*************************************************
* ServerUpdateRequest
*************************************************/

// ServerUpdateRequest represents API parameter/response structure
type ServerUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ServerUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ServerUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetName returns value of Name
func (o *ServerUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ServerUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ServerUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ServerUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ServerUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ServerUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *ServerUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *ServerUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *ServerUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *ServerUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *ServerUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ServerUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* ServerDeleteWithDisksRequest
*************************************************/

// ServerDeleteWithDisksRequest represents API parameter/response structure
type ServerDeleteWithDisksRequest struct {
	IDs []types.ID `mapconv:"WithDisk"`
}

// Validate validates by field tags
func (o *ServerDeleteWithDisksRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ServerDeleteWithDisksRequest) setDefaults() interface{} {
	return &struct {
		IDs []types.ID `mapconv:"WithDisk"`
	}{
		IDs: o.IDs,
	}
}

// GetIDs returns value of IDs
func (o *ServerDeleteWithDisksRequest) GetIDs() []types.ID {
	return o.IDs
}

// SetIDs sets value to IDs
func (o *ServerDeleteWithDisksRequest) SetIDs(v []types.ID) {
	o.IDs = v
}

/*************************************************
* ServerChangePlanRequest
*************************************************/

// ServerChangePlanRequest represents API parameter/response structure
type ServerChangePlanRequest struct {
	CPU                  int
	MemoryMB             int
	ServerPlanGeneration types.EPlanGeneration
	ServerPlanCommitment types.ECommitment `mapconv:"ServerPlan.Commitment,default=standard"`
}

// Validate validates by field tags
func (o *ServerChangePlanRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ServerChangePlanRequest) setDefaults() interface{} {
	return &struct {
		CPU                  int
		MemoryMB             int
		ServerPlanGeneration types.EPlanGeneration
		ServerPlanCommitment types.ECommitment `mapconv:"ServerPlan.Commitment,default=standard"`
	}{
		CPU:                  o.CPU,
		MemoryMB:             o.MemoryMB,
		ServerPlanGeneration: o.ServerPlanGeneration,
		ServerPlanCommitment: o.ServerPlanCommitment,
	}
}

// GetCPU returns value of CPU
func (o *ServerChangePlanRequest) GetCPU() int {
	return o.CPU
}

// SetCPU sets value to CPU
func (o *ServerChangePlanRequest) SetCPU(v int) {
	o.CPU = v
}

// GetMemoryMB returns value of MemoryMB
func (o *ServerChangePlanRequest) GetMemoryMB() int {
	return o.MemoryMB
}

// SetMemoryMB sets value to MemoryMB
func (o *ServerChangePlanRequest) SetMemoryMB(v int) {
	o.MemoryMB = v
}

// GetMemoryGB .
func (o *ServerChangePlanRequest) GetMemoryGB() int {
	return accessor.GetMemoryGB(o)
}

// SetMemoryGB .
func (o *ServerChangePlanRequest) SetMemoryGB(memory int) {
	accessor.SetMemoryGB(o, memory)
}

// GetServerPlanGeneration returns value of ServerPlanGeneration
func (o *ServerChangePlanRequest) GetServerPlanGeneration() types.EPlanGeneration {
	return o.ServerPlanGeneration
}

// SetServerPlanGeneration sets value to ServerPlanGeneration
func (o *ServerChangePlanRequest) SetServerPlanGeneration(v types.EPlanGeneration) {
	o.ServerPlanGeneration = v
}

// GetServerPlanCommitment returns value of ServerPlanCommitment
func (o *ServerChangePlanRequest) GetServerPlanCommitment() types.ECommitment {
	return o.ServerPlanCommitment
}

// SetServerPlanCommitment sets value to ServerPlanCommitment
func (o *ServerChangePlanRequest) SetServerPlanCommitment(v types.ECommitment) {
	o.ServerPlanCommitment = v
}

/*************************************************
* InsertCDROMRequest
*************************************************/

// InsertCDROMRequest represents API parameter/response structure
type InsertCDROMRequest struct {
	ID types.ID
}

// Validate validates by field tags
func (o *InsertCDROMRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *InsertCDROMRequest) setDefaults() interface{} {
	return &struct {
		ID types.ID
	}{
		ID: o.ID,
	}
}

// GetID returns value of ID
func (o *InsertCDROMRequest) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *InsertCDROMRequest) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *InsertCDROMRequest) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *InsertCDROMRequest) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *InsertCDROMRequest) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *InsertCDROMRequest) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

/*************************************************
* EjectCDROMRequest
*************************************************/

// EjectCDROMRequest represents API parameter/response structure
type EjectCDROMRequest struct {
	ID types.ID
}

// Validate validates by field tags
func (o *EjectCDROMRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *EjectCDROMRequest) setDefaults() interface{} {
	return &struct {
		ID types.ID
	}{
		ID: o.ID,
	}
}

// GetID returns value of ID
func (o *EjectCDROMRequest) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *EjectCDROMRequest) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *EjectCDROMRequest) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *EjectCDROMRequest) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *EjectCDROMRequest) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *EjectCDROMRequest) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

/*************************************************
* SendKeyRequest
*************************************************/

// SendKeyRequest represents API parameter/response structure
type SendKeyRequest struct {
	Key  string
	Keys []string
}

// Validate validates by field tags
func (o *SendKeyRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SendKeyRequest) setDefaults() interface{} {
	return &struct {
		Key  string
		Keys []string
	}{
		Key:  o.Key,
		Keys: o.Keys,
	}
}

// GetKey returns value of Key
func (o *SendKeyRequest) GetKey() string {
	return o.Key
}

// SetKey sets value to Key
func (o *SendKeyRequest) SetKey(v string) {
	o.Key = v
}

// GetKeys returns value of Keys
func (o *SendKeyRequest) GetKeys() []string {
	return o.Keys
}

// SetKeys sets value to Keys
func (o *SendKeyRequest) SetKeys(v []string) {
	o.Keys = v
}

/*************************************************
* VNCProxyInfo
*************************************************/

// VNCProxyInfo represents API parameter/response structure
type VNCProxyInfo struct {
	Status       string
	Host         string
	IOServerHost string
	Port         types.StringNumber
	Password     string
	VNCFile      string
}

// Validate validates by field tags
func (o *VNCProxyInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VNCProxyInfo) setDefaults() interface{} {
	return &struct {
		Status       string
		Host         string
		IOServerHost string
		Port         types.StringNumber
		Password     string
		VNCFile      string
	}{
		Status:       o.Status,
		Host:         o.Host,
		IOServerHost: o.IOServerHost,
		Port:         o.Port,
		Password:     o.Password,
		VNCFile:      o.VNCFile,
	}
}

// GetStatus returns value of Status
func (o *VNCProxyInfo) GetStatus() string {
	return o.Status
}

// SetStatus sets value to Status
func (o *VNCProxyInfo) SetStatus(v string) {
	o.Status = v
}

// GetHost returns value of Host
func (o *VNCProxyInfo) GetHost() string {
	return o.Host
}

// SetHost sets value to Host
func (o *VNCProxyInfo) SetHost(v string) {
	o.Host = v
}

// GetIOServerHost returns value of IOServerHost
func (o *VNCProxyInfo) GetIOServerHost() string {
	return o.IOServerHost
}

// SetIOServerHost sets value to IOServerHost
func (o *VNCProxyInfo) SetIOServerHost(v string) {
	o.IOServerHost = v
}

// GetPort returns value of Port
func (o *VNCProxyInfo) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *VNCProxyInfo) SetPort(v types.StringNumber) {
	o.Port = v
}

// GetPassword returns value of Password
func (o *VNCProxyInfo) GetPassword() string {
	return o.Password
}

// SetPassword sets value to Password
func (o *VNCProxyInfo) SetPassword(v string) {
	o.Password = v
}

// GetVNCFile returns value of VNCFile
func (o *VNCProxyInfo) GetVNCFile() string {
	return o.VNCFile
}

// SetVNCFile sets value to VNCFile
func (o *VNCProxyInfo) SetVNCFile(v string) {
	o.VNCFile = v
}

/*************************************************
* ServerPlan
*************************************************/

// ServerPlan represents API parameter/response structure
type ServerPlan struct {
	ID           types.ID
	Name         string `validate:"required"`
	CPU          int
	MemoryMB     int
	Commitment   types.ECommitment
	Generation   types.EPlanGeneration
	Availability types.EAvailability
}

// Validate validates by field tags
func (o *ServerPlan) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ServerPlan) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		CPU          int
		MemoryMB     int
		Commitment   types.ECommitment
		Generation   types.EPlanGeneration
		Availability types.EAvailability
	}{
		ID:           o.ID,
		Name:         o.Name,
		CPU:          o.CPU,
		MemoryMB:     o.MemoryMB,
		Commitment:   o.Commitment,
		Generation:   o.Generation,
		Availability: o.Availability,
	}
}

// GetID returns value of ID
func (o *ServerPlan) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *ServerPlan) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *ServerPlan) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *ServerPlan) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *ServerPlan) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *ServerPlan) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *ServerPlan) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ServerPlan) SetName(v string) {
	o.Name = v
}

// GetCPU returns value of CPU
func (o *ServerPlan) GetCPU() int {
	return o.CPU
}

// SetCPU sets value to CPU
func (o *ServerPlan) SetCPU(v int) {
	o.CPU = v
}

// GetMemoryMB returns value of MemoryMB
func (o *ServerPlan) GetMemoryMB() int {
	return o.MemoryMB
}

// SetMemoryMB sets value to MemoryMB
func (o *ServerPlan) SetMemoryMB(v int) {
	o.MemoryMB = v
}

// GetMemoryGB .
func (o *ServerPlan) GetMemoryGB() int {
	return accessor.GetMemoryGB(o)
}

// SetMemoryGB .
func (o *ServerPlan) SetMemoryGB(memory int) {
	accessor.SetMemoryGB(o, memory)
}

// GetCommitment returns value of Commitment
func (o *ServerPlan) GetCommitment() types.ECommitment {
	return o.Commitment
}

// SetCommitment sets value to Commitment
func (o *ServerPlan) SetCommitment(v types.ECommitment) {
	o.Commitment = v
}

// GetGeneration returns value of Generation
func (o *ServerPlan) GetGeneration() types.EPlanGeneration {
	return o.Generation
}

// SetGeneration sets value to Generation
func (o *ServerPlan) SetGeneration(v types.EPlanGeneration) {
	o.Generation = v
}

// GetAvailability returns value of Availability
func (o *ServerPlan) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *ServerPlan) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

/*************************************************
* ServiceClass
*************************************************/

// ServiceClass represents API parameter/response structure
type ServiceClass struct {
	ID               types.ID
	ServiceClassName string
	ServiceClassPath string
	DisplayName      string
	IsPublic         bool
	Price            *Price `mapconv:",recursive"`
}

// Validate validates by field tags
func (o *ServiceClass) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ServiceClass) setDefaults() interface{} {
	return &struct {
		ID               types.ID
		ServiceClassName string
		ServiceClassPath string
		DisplayName      string
		IsPublic         bool
		Price            *Price `mapconv:",recursive"`
	}{
		ID:               o.ID,
		ServiceClassName: o.ServiceClassName,
		ServiceClassPath: o.ServiceClassPath,
		DisplayName:      o.DisplayName,
		IsPublic:         o.IsPublic,
		Price:            o.Price,
	}
}

// GetID returns value of ID
func (o *ServiceClass) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *ServiceClass) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *ServiceClass) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *ServiceClass) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *ServiceClass) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *ServiceClass) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetServiceClassName returns value of ServiceClassName
func (o *ServiceClass) GetServiceClassName() string {
	return o.ServiceClassName
}

// SetServiceClassName sets value to ServiceClassName
func (o *ServiceClass) SetServiceClassName(v string) {
	o.ServiceClassName = v
}

// GetServiceClassPath returns value of ServiceClassPath
func (o *ServiceClass) GetServiceClassPath() string {
	return o.ServiceClassPath
}

// SetServiceClassPath sets value to ServiceClassPath
func (o *ServiceClass) SetServiceClassPath(v string) {
	o.ServiceClassPath = v
}

// GetDisplayName returns value of DisplayName
func (o *ServiceClass) GetDisplayName() string {
	return o.DisplayName
}

// SetDisplayName sets value to DisplayName
func (o *ServiceClass) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetIsPublic returns value of IsPublic
func (o *ServiceClass) GetIsPublic() bool {
	return o.IsPublic
}

// SetIsPublic sets value to IsPublic
func (o *ServiceClass) SetIsPublic(v bool) {
	o.IsPublic = v
}

// GetPrice returns value of Price
func (o *ServiceClass) GetPrice() *Price {
	return o.Price
}

// SetPrice sets value to Price
func (o *ServiceClass) SetPrice(v *Price) {
	o.Price = v
}

/*************************************************
* Price
*************************************************/

// Price represents API parameter/response structure
type Price struct {
	Base    int
	Daily   int
	Hourly  int
	Monthly int
	Zone    string
}

// Validate validates by field tags
func (o *Price) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Price) setDefaults() interface{} {
	return &struct {
		Base    int
		Daily   int
		Hourly  int
		Monthly int
		Zone    string
	}{
		Base:    o.Base,
		Daily:   o.Daily,
		Hourly:  o.Hourly,
		Monthly: o.Monthly,
		Zone:    o.Zone,
	}
}

// GetBase returns value of Base
func (o *Price) GetBase() int {
	return o.Base
}

// SetBase sets value to Base
func (o *Price) SetBase(v int) {
	o.Base = v
}

// GetDaily returns value of Daily
func (o *Price) GetDaily() int {
	return o.Daily
}

// SetDaily sets value to Daily
func (o *Price) SetDaily(v int) {
	o.Daily = v
}

// GetHourly returns value of Hourly
func (o *Price) GetHourly() int {
	return o.Hourly
}

// SetHourly sets value to Hourly
func (o *Price) SetHourly(v int) {
	o.Hourly = v
}

// GetMonthly returns value of Monthly
func (o *Price) GetMonthly() int {
	return o.Monthly
}

// SetMonthly sets value to Monthly
func (o *Price) SetMonthly(v int) {
	o.Monthly = v
}

// GetZone returns value of Zone
func (o *Price) GetZone() string {
	return o.Zone
}

// SetZone sets value to Zone
func (o *Price) SetZone(v string) {
	o.Zone = v
}

/*************************************************
* SIM
*************************************************/

// SIM represents API parameter/response structure
type SIM struct {
	ID           types.ID
	Name         string `validate:"required"`
	Description  string `validate:"min=0,max=512"`
	Tags         types.Tags
	Availability types.EAvailability
	Class        string
	ICCID        string   `mapconv:"Status.ICCID" validate:"numeric"`
	Info         *SIMInfo `mapconv:"Status.SIMInfo"`
	IconID       types.ID `mapconv:"Icon.ID"`
	CreatedAt    time.Time
	ModifiedAt   time.Time
}

// Validate validates by field tags
func (o *SIM) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIM) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		Description  string `validate:"min=0,max=512"`
		Tags         types.Tags
		Availability types.EAvailability
		Class        string
		ICCID        string   `mapconv:"Status.ICCID" validate:"numeric"`
		Info         *SIMInfo `mapconv:"Status.SIMInfo"`
		IconID       types.ID `mapconv:"Icon.ID"`
		CreatedAt    time.Time
		ModifiedAt   time.Time
	}{
		ID:           o.ID,
		Name:         o.Name,
		Description:  o.Description,
		Tags:         o.Tags,
		Availability: o.Availability,
		Class:        o.Class,
		ICCID:        o.ICCID,
		Info:         o.Info,
		IconID:       o.IconID,
		CreatedAt:    o.CreatedAt,
		ModifiedAt:   o.ModifiedAt,
	}
}

// GetID returns value of ID
func (o *SIM) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *SIM) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *SIM) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *SIM) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *SIM) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *SIM) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *SIM) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SIM) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SIM) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SIM) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SIM) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SIM) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SIM) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SIM) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SIM) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SIM) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *SIM) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *SIM) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetClass returns value of Class
func (o *SIM) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *SIM) SetClass(v string) {
	o.Class = v
}

// GetICCID returns value of ICCID
func (o *SIM) GetICCID() string {
	return o.ICCID
}

// SetICCID sets value to ICCID
func (o *SIM) SetICCID(v string) {
	o.ICCID = v
}

// GetInfo returns value of Info
func (o *SIM) GetInfo() *SIMInfo {
	return o.Info
}

// SetInfo sets value to Info
func (o *SIM) SetInfo(v *SIMInfo) {
	o.Info = v
}

// GetIconID returns value of IconID
func (o *SIM) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SIM) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *SIM) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *SIM) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *SIM) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *SIM) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

/*************************************************
* SIMInfo
*************************************************/

// SIMInfo represents API parameter/response structure
type SIMInfo struct {
	ICCID                      string
	IMSI                       []string
	IP                         string
	SessionStatus              string
	IMEILock                   bool
	Registered                 bool
	Activated                  bool
	ResourceID                 string
	RegisteredDate             time.Time
	ActivatedDate              time.Time
	DeactivatedDate            time.Time
	SIMGroupID                 string
	TrafficBytesOfCurrentMonth *SIMTrafficBytes `mapconv:",recursive"`
	ConnectedIMEI              string
}

// Validate validates by field tags
func (o *SIMInfo) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIMInfo) setDefaults() interface{} {
	return &struct {
		ICCID                      string
		IMSI                       []string
		IP                         string
		SessionStatus              string
		IMEILock                   bool
		Registered                 bool
		Activated                  bool
		ResourceID                 string
		RegisteredDate             time.Time
		ActivatedDate              time.Time
		DeactivatedDate            time.Time
		SIMGroupID                 string
		TrafficBytesOfCurrentMonth *SIMTrafficBytes `mapconv:",recursive"`
		ConnectedIMEI              string
	}{
		ICCID:                      o.ICCID,
		IMSI:                       o.IMSI,
		IP:                         o.IP,
		SessionStatus:              o.SessionStatus,
		IMEILock:                   o.IMEILock,
		Registered:                 o.Registered,
		Activated:                  o.Activated,
		ResourceID:                 o.ResourceID,
		RegisteredDate:             o.RegisteredDate,
		ActivatedDate:              o.ActivatedDate,
		DeactivatedDate:            o.DeactivatedDate,
		SIMGroupID:                 o.SIMGroupID,
		TrafficBytesOfCurrentMonth: o.TrafficBytesOfCurrentMonth,
		ConnectedIMEI:              o.ConnectedIMEI,
	}
}

// GetICCID returns value of ICCID
func (o *SIMInfo) GetICCID() string {
	return o.ICCID
}

// SetICCID sets value to ICCID
func (o *SIMInfo) SetICCID(v string) {
	o.ICCID = v
}

// GetIMSI returns value of IMSI
func (o *SIMInfo) GetIMSI() []string {
	return o.IMSI
}

// SetIMSI sets value to IMSI
func (o *SIMInfo) SetIMSI(v []string) {
	o.IMSI = v
}

// GetIP returns value of IP
func (o *SIMInfo) GetIP() string {
	return o.IP
}

// SetIP sets value to IP
func (o *SIMInfo) SetIP(v string) {
	o.IP = v
}

// GetSessionStatus returns value of SessionStatus
func (o *SIMInfo) GetSessionStatus() string {
	return o.SessionStatus
}

// SetSessionStatus sets value to SessionStatus
func (o *SIMInfo) SetSessionStatus(v string) {
	o.SessionStatus = v
}

// GetIMEILock returns value of IMEILock
func (o *SIMInfo) GetIMEILock() bool {
	return o.IMEILock
}

// SetIMEILock sets value to IMEILock
func (o *SIMInfo) SetIMEILock(v bool) {
	o.IMEILock = v
}

// GetRegistered returns value of Registered
func (o *SIMInfo) GetRegistered() bool {
	return o.Registered
}

// SetRegistered sets value to Registered
func (o *SIMInfo) SetRegistered(v bool) {
	o.Registered = v
}

// GetActivated returns value of Activated
func (o *SIMInfo) GetActivated() bool {
	return o.Activated
}

// SetActivated sets value to Activated
func (o *SIMInfo) SetActivated(v bool) {
	o.Activated = v
}

// GetResourceID returns value of ResourceID
func (o *SIMInfo) GetResourceID() string {
	return o.ResourceID
}

// SetResourceID sets value to ResourceID
func (o *SIMInfo) SetResourceID(v string) {
	o.ResourceID = v
}

// GetRegisteredDate returns value of RegisteredDate
func (o *SIMInfo) GetRegisteredDate() time.Time {
	return o.RegisteredDate
}

// SetRegisteredDate sets value to RegisteredDate
func (o *SIMInfo) SetRegisteredDate(v time.Time) {
	o.RegisteredDate = v
}

// GetActivatedDate returns value of ActivatedDate
func (o *SIMInfo) GetActivatedDate() time.Time {
	return o.ActivatedDate
}

// SetActivatedDate sets value to ActivatedDate
func (o *SIMInfo) SetActivatedDate(v time.Time) {
	o.ActivatedDate = v
}

// GetDeactivatedDate returns value of DeactivatedDate
func (o *SIMInfo) GetDeactivatedDate() time.Time {
	return o.DeactivatedDate
}

// SetDeactivatedDate sets value to DeactivatedDate
func (o *SIMInfo) SetDeactivatedDate(v time.Time) {
	o.DeactivatedDate = v
}

// GetSIMGroupID returns value of SIMGroupID
func (o *SIMInfo) GetSIMGroupID() string {
	return o.SIMGroupID
}

// SetSIMGroupID sets value to SIMGroupID
func (o *SIMInfo) SetSIMGroupID(v string) {
	o.SIMGroupID = v
}

// GetTrafficBytesOfCurrentMonth returns value of TrafficBytesOfCurrentMonth
func (o *SIMInfo) GetTrafficBytesOfCurrentMonth() *SIMTrafficBytes {
	return o.TrafficBytesOfCurrentMonth
}

// SetTrafficBytesOfCurrentMonth sets value to TrafficBytesOfCurrentMonth
func (o *SIMInfo) SetTrafficBytesOfCurrentMonth(v *SIMTrafficBytes) {
	o.TrafficBytesOfCurrentMonth = v
}

// GetConnectedIMEI returns value of ConnectedIMEI
func (o *SIMInfo) GetConnectedIMEI() string {
	return o.ConnectedIMEI
}

// SetConnectedIMEI sets value to ConnectedIMEI
func (o *SIMInfo) SetConnectedIMEI(v string) {
	o.ConnectedIMEI = v
}

/*************************************************
* SIMCreateRequest
*************************************************/

// SIMCreateRequest represents API parameter/response structure
type SIMCreateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
	ICCID       string   `mapconv:"Status.ICCID" validate:"numeric"`
	PassCode    string   `mapconv:"Remark.PassCode"`
}

// Validate validates by field tags
func (o *SIMCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIMCreateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
		ICCID       string   `mapconv:"Status.ICCID" validate:"numeric"`
		PassCode    string   `mapconv:"Remark.PassCode"`
		Class       string   `mapconv:"Provider.Class"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
		ICCID:       o.ICCID,
		PassCode:    o.PassCode,
		Class:       "sim",
	}
}

// GetName returns value of Name
func (o *SIMCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SIMCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SIMCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SIMCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SIMCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SIMCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SIMCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SIMCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SIMCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SIMCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *SIMCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SIMCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetICCID returns value of ICCID
func (o *SIMCreateRequest) GetICCID() string {
	return o.ICCID
}

// SetICCID sets value to ICCID
func (o *SIMCreateRequest) SetICCID(v string) {
	o.ICCID = v
}

// GetPassCode returns value of PassCode
func (o *SIMCreateRequest) GetPassCode() string {
	return o.PassCode
}

// SetPassCode sets value to PassCode
func (o *SIMCreateRequest) SetPassCode(v string) {
	o.PassCode = v
}

/*************************************************
* SIMUpdateRequest
*************************************************/

// SIMUpdateRequest represents API parameter/response structure
type SIMUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SIMUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIMUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID `mapconv:"Icon.ID"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
	}
}

// GetName returns value of Name
func (o *SIMUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SIMUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SIMUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SIMUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SIMUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SIMUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SIMUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SIMUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SIMUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SIMUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *SIMUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SIMUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* SIMAssignIPRequest
*************************************************/

// SIMAssignIPRequest represents API parameter/response structure
type SIMAssignIPRequest struct {
	IP string
}

// Validate validates by field tags
func (o *SIMAssignIPRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIMAssignIPRequest) setDefaults() interface{} {
	return &struct {
		IP string
	}{
		IP: o.IP,
	}
}

// GetIP returns value of IP
func (o *SIMAssignIPRequest) GetIP() string {
	return o.IP
}

// SetIP sets value to IP
func (o *SIMAssignIPRequest) SetIP(v string) {
	o.IP = v
}

/*************************************************
* SIMIMEILockRequest
*************************************************/

// SIMIMEILockRequest represents API parameter/response structure
type SIMIMEILockRequest struct {
	IMEI string
}

// Validate validates by field tags
func (o *SIMIMEILockRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIMIMEILockRequest) setDefaults() interface{} {
	return &struct {
		IMEI string
	}{
		IMEI: o.IMEI,
	}
}

// GetIMEI returns value of IMEI
func (o *SIMIMEILockRequest) GetIMEI() string {
	return o.IMEI
}

// SetIMEI sets value to IMEI
func (o *SIMIMEILockRequest) SetIMEI(v string) {
	o.IMEI = v
}

/*************************************************
* SIMLog
*************************************************/

// SIMLog represents API parameter/response structure
type SIMLog struct {
	Date          time.Time
	SessionStatus string
	ResourceID    string
	IMEI          string
	IMSI          string
}

// Validate validates by field tags
func (o *SIMLog) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIMLog) setDefaults() interface{} {
	return &struct {
		Date          time.Time
		SessionStatus string
		ResourceID    string
		IMEI          string
		IMSI          string
	}{
		Date:          o.Date,
		SessionStatus: o.SessionStatus,
		ResourceID:    o.ResourceID,
		IMEI:          o.IMEI,
		IMSI:          o.IMSI,
	}
}

// GetDate returns value of Date
func (o *SIMLog) GetDate() time.Time {
	return o.Date
}

// SetDate sets value to Date
func (o *SIMLog) SetDate(v time.Time) {
	o.Date = v
}

// GetSessionStatus returns value of SessionStatus
func (o *SIMLog) GetSessionStatus() string {
	return o.SessionStatus
}

// SetSessionStatus sets value to SessionStatus
func (o *SIMLog) SetSessionStatus(v string) {
	o.SessionStatus = v
}

// GetResourceID returns value of ResourceID
func (o *SIMLog) GetResourceID() string {
	return o.ResourceID
}

// SetResourceID sets value to ResourceID
func (o *SIMLog) SetResourceID(v string) {
	o.ResourceID = v
}

// GetIMEI returns value of IMEI
func (o *SIMLog) GetIMEI() string {
	return o.IMEI
}

// SetIMEI sets value to IMEI
func (o *SIMLog) SetIMEI(v string) {
	o.IMEI = v
}

// GetIMSI returns value of IMSI
func (o *SIMLog) GetIMSI() string {
	return o.IMSI
}

// SetIMSI sets value to IMSI
func (o *SIMLog) SetIMSI(v string) {
	o.IMSI = v
}

/*************************************************
* SIMNetworkOperatorConfig
*************************************************/

// SIMNetworkOperatorConfig represents API parameter/response structure
type SIMNetworkOperatorConfig struct {
	Allow       bool
	CountryCode string
	Name        string
}

// Validate validates by field tags
func (o *SIMNetworkOperatorConfig) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SIMNetworkOperatorConfig) setDefaults() interface{} {
	return &struct {
		Allow       bool
		CountryCode string
		Name        string
	}{
		Allow:       o.Allow,
		CountryCode: o.CountryCode,
		Name:        o.Name,
	}
}

// GetAllow returns value of Allow
func (o *SIMNetworkOperatorConfig) GetAllow() bool {
	return o.Allow
}

// SetAllow sets value to Allow
func (o *SIMNetworkOperatorConfig) SetAllow(v bool) {
	o.Allow = v
}

// GetCountryCode returns value of CountryCode
func (o *SIMNetworkOperatorConfig) GetCountryCode() string {
	return o.CountryCode
}

// SetCountryCode sets value to CountryCode
func (o *SIMNetworkOperatorConfig) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetName returns value of Name
func (o *SIMNetworkOperatorConfig) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SIMNetworkOperatorConfig) SetName(v string) {
	o.Name = v
}

/*************************************************
* LinkActivity
*************************************************/

// LinkActivity represents API parameter/response structure
type LinkActivity struct {
	Values []*MonitorLinkValue `mapconv:"[]Link"`
}

// Validate validates by field tags
func (o *LinkActivity) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *LinkActivity) setDefaults() interface{} {
	return &struct {
		Values []*MonitorLinkValue `mapconv:"[]Link"`
	}{
		Values: o.Values,
	}
}

// GetValues returns value of Values
func (o *LinkActivity) GetValues() []*MonitorLinkValue {
	return o.Values
}

// SetValues sets value to Values
func (o *LinkActivity) SetValues(v []*MonitorLinkValue) {
	o.Values = v
}

/*************************************************
* MonitorLinkValue
*************************************************/

// MonitorLinkValue represents API parameter/response structure
type MonitorLinkValue struct {
	Time        time.Time `json:",omitempty" mapconv:",omitempty"`
	UplinkBPS   float64   `json:",omitempty" mapconv:",omitempty"`
	DownlinkBPS float64   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorLinkValue) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorLinkValue) setDefaults() interface{} {
	return &struct {
		Time        time.Time `json:",omitempty" mapconv:",omitempty"`
		UplinkBPS   float64   `json:",omitempty" mapconv:",omitempty"`
		DownlinkBPS float64   `json:",omitempty" mapconv:",omitempty"`
	}{
		Time:        o.Time,
		UplinkBPS:   o.UplinkBPS,
		DownlinkBPS: o.DownlinkBPS,
	}
}

// GetTime returns value of Time
func (o *MonitorLinkValue) GetTime() time.Time {
	return o.Time
}

// SetTime sets value to Time
func (o *MonitorLinkValue) SetTime(v time.Time) {
	o.Time = v
}

// GetUplinkBPS returns value of UplinkBPS
func (o *MonitorLinkValue) GetUplinkBPS() float64 {
	return o.UplinkBPS
}

// SetUplinkBPS sets value to UplinkBPS
func (o *MonitorLinkValue) SetUplinkBPS(v float64) {
	o.UplinkBPS = v
}

// GetDownlinkBPS returns value of DownlinkBPS
func (o *MonitorLinkValue) GetDownlinkBPS() float64 {
	return o.DownlinkBPS
}

// SetDownlinkBPS sets value to DownlinkBPS
func (o *MonitorLinkValue) SetDownlinkBPS(v float64) {
	o.DownlinkBPS = v
}

/*************************************************
* SimpleMonitor
*************************************************/

// SimpleMonitor represents API parameter/response structure
type SimpleMonitor struct {
	ID                 types.ID
	Name               string `validate:"required"`
	Description        string `validate:"min=0,max=512"`
	Tags               types.Tags
	Availability       types.EAvailability
	IconID             types.ID `mapconv:"Icon.ID"`
	CreatedAt          time.Time
	ModifiedAt         time.Time
	Class              string
	Target             string `mapconv:"Status.Target"`
	SettingsHash       string
	DelayLoop          int                       `mapconv:"Settings.SimpleMonitor.DelayLoop,default=60" validate:"min=60,max=3600"`
	Enabled            types.StringFlag          `mapconv:"Settings.SimpleMonitor.Enabled"`
	HealthCheck        *SimpleMonitorHealthCheck `mapconv:"Settings.SimpleMonitor.HealthCheck,recursive"`
	NotifyEmailEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.Enabled"`
	NotifyEmailHTML    types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.HTML"`
	NotifySlackEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifySlack.Enabled"`
	SlackWebhooksURL   string                    `mapconv:"Settings.SimpleMonitor.NotifySlack.IncomingWebhooksURL"`
}

// Validate validates by field tags
func (o *SimpleMonitor) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SimpleMonitor) setDefaults() interface{} {
	return &struct {
		ID                 types.ID
		Name               string `validate:"required"`
		Description        string `validate:"min=0,max=512"`
		Tags               types.Tags
		Availability       types.EAvailability
		IconID             types.ID `mapconv:"Icon.ID"`
		CreatedAt          time.Time
		ModifiedAt         time.Time
		Class              string
		Target             string `mapconv:"Status.Target"`
		SettingsHash       string
		DelayLoop          int                       `mapconv:"Settings.SimpleMonitor.DelayLoop,default=60" validate:"min=60,max=3600"`
		Enabled            types.StringFlag          `mapconv:"Settings.SimpleMonitor.Enabled"`
		HealthCheck        *SimpleMonitorHealthCheck `mapconv:"Settings.SimpleMonitor.HealthCheck,recursive"`
		NotifyEmailEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.Enabled"`
		NotifyEmailHTML    types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.HTML"`
		NotifySlackEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifySlack.Enabled"`
		SlackWebhooksURL   string                    `mapconv:"Settings.SimpleMonitor.NotifySlack.IncomingWebhooksURL"`
	}{
		ID:                 o.ID,
		Name:               o.Name,
		Description:        o.Description,
		Tags:               o.Tags,
		Availability:       o.Availability,
		IconID:             o.IconID,
		CreatedAt:          o.CreatedAt,
		ModifiedAt:         o.ModifiedAt,
		Class:              o.Class,
		Target:             o.Target,
		SettingsHash:       o.SettingsHash,
		DelayLoop:          o.DelayLoop,
		Enabled:            o.Enabled,
		HealthCheck:        o.HealthCheck,
		NotifyEmailEnabled: o.NotifyEmailEnabled,
		NotifyEmailHTML:    o.NotifyEmailHTML,
		NotifySlackEnabled: o.NotifySlackEnabled,
		SlackWebhooksURL:   o.SlackWebhooksURL,
	}
}

// GetID returns value of ID
func (o *SimpleMonitor) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *SimpleMonitor) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *SimpleMonitor) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *SimpleMonitor) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *SimpleMonitor) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *SimpleMonitor) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *SimpleMonitor) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SimpleMonitor) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SimpleMonitor) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SimpleMonitor) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SimpleMonitor) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SimpleMonitor) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SimpleMonitor) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SimpleMonitor) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SimpleMonitor) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SimpleMonitor) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *SimpleMonitor) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *SimpleMonitor) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetIconID returns value of IconID
func (o *SimpleMonitor) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SimpleMonitor) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *SimpleMonitor) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *SimpleMonitor) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *SimpleMonitor) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *SimpleMonitor) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetClass returns value of Class
func (o *SimpleMonitor) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *SimpleMonitor) SetClass(v string) {
	o.Class = v
}

// GetTarget returns value of Target
func (o *SimpleMonitor) GetTarget() string {
	return o.Target
}

// SetTarget sets value to Target
func (o *SimpleMonitor) SetTarget(v string) {
	o.Target = v
}

// GetSettingsHash returns value of SettingsHash
func (o *SimpleMonitor) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *SimpleMonitor) SetSettingsHash(v string) {
	o.SettingsHash = v
}

// GetDelayLoop returns value of DelayLoop
func (o *SimpleMonitor) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *SimpleMonitor) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetEnabled returns value of Enabled
func (o *SimpleMonitor) GetEnabled() types.StringFlag {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *SimpleMonitor) SetEnabled(v types.StringFlag) {
	o.Enabled = v
}

// GetHealthCheck returns value of HealthCheck
func (o *SimpleMonitor) GetHealthCheck() *SimpleMonitorHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *SimpleMonitor) SetHealthCheck(v *SimpleMonitorHealthCheck) {
	o.HealthCheck = v
}

// GetNotifyEmailEnabled returns value of NotifyEmailEnabled
func (o *SimpleMonitor) GetNotifyEmailEnabled() types.StringFlag {
	return o.NotifyEmailEnabled
}

// SetNotifyEmailEnabled sets value to NotifyEmailEnabled
func (o *SimpleMonitor) SetNotifyEmailEnabled(v types.StringFlag) {
	o.NotifyEmailEnabled = v
}

// GetNotifyEmailHTML returns value of NotifyEmailHTML
func (o *SimpleMonitor) GetNotifyEmailHTML() types.StringFlag {
	return o.NotifyEmailHTML
}

// SetNotifyEmailHTML sets value to NotifyEmailHTML
func (o *SimpleMonitor) SetNotifyEmailHTML(v types.StringFlag) {
	o.NotifyEmailHTML = v
}

// GetNotifySlackEnabled returns value of NotifySlackEnabled
func (o *SimpleMonitor) GetNotifySlackEnabled() types.StringFlag {
	return o.NotifySlackEnabled
}

// SetNotifySlackEnabled sets value to NotifySlackEnabled
func (o *SimpleMonitor) SetNotifySlackEnabled(v types.StringFlag) {
	o.NotifySlackEnabled = v
}

// GetSlackWebhooksURL returns value of SlackWebhooksURL
func (o *SimpleMonitor) GetSlackWebhooksURL() string {
	return o.SlackWebhooksURL
}

// SetSlackWebhooksURL sets value to SlackWebhooksURL
func (o *SimpleMonitor) SetSlackWebhooksURL(v string) {
	o.SlackWebhooksURL = v
}

/*************************************************
* SimpleMonitorHealthCheck
*************************************************/

// SimpleMonitorHealthCheck represents API parameter/response structure
type SimpleMonitorHealthCheck struct {
	Protocol          types.ESimpleMonitorProtocol
	Port              types.StringNumber
	Path              string
	Status            types.StringNumber
	SNI               types.StringFlag
	Host              string
	BasicAuthUsername string
	BasicAuthPassword string
	QName             string
	ExpectedData      string
	Community         string
	SNMPVersion       string
	OID               string
	RemainingDays     int
}

// Validate validates by field tags
func (o *SimpleMonitorHealthCheck) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SimpleMonitorHealthCheck) setDefaults() interface{} {
	return &struct {
		Protocol          types.ESimpleMonitorProtocol
		Port              types.StringNumber
		Path              string
		Status            types.StringNumber
		SNI               types.StringFlag
		Host              string
		BasicAuthUsername string
		BasicAuthPassword string
		QName             string
		ExpectedData      string
		Community         string
		SNMPVersion       string
		OID               string
		RemainingDays     int
	}{
		Protocol:          o.Protocol,
		Port:              o.Port,
		Path:              o.Path,
		Status:            o.Status,
		SNI:               o.SNI,
		Host:              o.Host,
		BasicAuthUsername: o.BasicAuthUsername,
		BasicAuthPassword: o.BasicAuthPassword,
		QName:             o.QName,
		ExpectedData:      o.ExpectedData,
		Community:         o.Community,
		SNMPVersion:       o.SNMPVersion,
		OID:               o.OID,
		RemainingDays:     o.RemainingDays,
	}
}

// GetProtocol returns value of Protocol
func (o *SimpleMonitorHealthCheck) GetProtocol() types.ESimpleMonitorProtocol {
	return o.Protocol
}

// SetProtocol sets value to Protocol
func (o *SimpleMonitorHealthCheck) SetProtocol(v types.ESimpleMonitorProtocol) {
	o.Protocol = v
}

// GetPort returns value of Port
func (o *SimpleMonitorHealthCheck) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *SimpleMonitorHealthCheck) SetPort(v types.StringNumber) {
	o.Port = v
}

// GetPath returns value of Path
func (o *SimpleMonitorHealthCheck) GetPath() string {
	return o.Path
}

// SetPath sets value to Path
func (o *SimpleMonitorHealthCheck) SetPath(v string) {
	o.Path = v
}

// GetStatus returns value of Status
func (o *SimpleMonitorHealthCheck) GetStatus() types.StringNumber {
	return o.Status
}

// SetStatus sets value to Status
func (o *SimpleMonitorHealthCheck) SetStatus(v types.StringNumber) {
	o.Status = v
}

// GetSNI returns value of SNI
func (o *SimpleMonitorHealthCheck) GetSNI() types.StringFlag {
	return o.SNI
}

// SetSNI sets value to SNI
func (o *SimpleMonitorHealthCheck) SetSNI(v types.StringFlag) {
	o.SNI = v
}

// GetHost returns value of Host
func (o *SimpleMonitorHealthCheck) GetHost() string {
	return o.Host
}

// SetHost sets value to Host
func (o *SimpleMonitorHealthCheck) SetHost(v string) {
	o.Host = v
}

// GetBasicAuthUsername returns value of BasicAuthUsername
func (o *SimpleMonitorHealthCheck) GetBasicAuthUsername() string {
	return o.BasicAuthUsername
}

// SetBasicAuthUsername sets value to BasicAuthUsername
func (o *SimpleMonitorHealthCheck) SetBasicAuthUsername(v string) {
	o.BasicAuthUsername = v
}

// GetBasicAuthPassword returns value of BasicAuthPassword
func (o *SimpleMonitorHealthCheck) GetBasicAuthPassword() string {
	return o.BasicAuthPassword
}

// SetBasicAuthPassword sets value to BasicAuthPassword
func (o *SimpleMonitorHealthCheck) SetBasicAuthPassword(v string) {
	o.BasicAuthPassword = v
}

// GetQName returns value of QName
func (o *SimpleMonitorHealthCheck) GetQName() string {
	return o.QName
}

// SetQName sets value to QName
func (o *SimpleMonitorHealthCheck) SetQName(v string) {
	o.QName = v
}

// GetExpectedData returns value of ExpectedData
func (o *SimpleMonitorHealthCheck) GetExpectedData() string {
	return o.ExpectedData
}

// SetExpectedData sets value to ExpectedData
func (o *SimpleMonitorHealthCheck) SetExpectedData(v string) {
	o.ExpectedData = v
}

// GetCommunity returns value of Community
func (o *SimpleMonitorHealthCheck) GetCommunity() string {
	return o.Community
}

// SetCommunity sets value to Community
func (o *SimpleMonitorHealthCheck) SetCommunity(v string) {
	o.Community = v
}

// GetSNMPVersion returns value of SNMPVersion
func (o *SimpleMonitorHealthCheck) GetSNMPVersion() string {
	return o.SNMPVersion
}

// SetSNMPVersion sets value to SNMPVersion
func (o *SimpleMonitorHealthCheck) SetSNMPVersion(v string) {
	o.SNMPVersion = v
}

// GetOID returns value of OID
func (o *SimpleMonitorHealthCheck) GetOID() string {
	return o.OID
}

// SetOID sets value to OID
func (o *SimpleMonitorHealthCheck) SetOID(v string) {
	o.OID = v
}

// GetRemainingDays returns value of RemainingDays
func (o *SimpleMonitorHealthCheck) GetRemainingDays() int {
	return o.RemainingDays
}

// SetRemainingDays sets value to RemainingDays
func (o *SimpleMonitorHealthCheck) SetRemainingDays(v int) {
	o.RemainingDays = v
}

/*************************************************
* SimpleMonitorCreateRequest
*************************************************/

// SimpleMonitorCreateRequest represents API parameter/response structure
type SimpleMonitorCreateRequest struct {
	Target             string                    `mapconv:"Name/Status.Target" validate:"required"`
	DelayLoop          int                       `mapconv:"Settings.SimpleMonitor.DelayLoop,default=60" validate:"min=60,max=3600"`
	Enabled            types.StringFlag          `mapconv:"Settings.SimpleMonitor.Enabled"`
	HealthCheck        *SimpleMonitorHealthCheck `mapconv:"Settings.SimpleMonitor.HealthCheck,recursive"`
	NotifyEmailEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.Enabled"`
	NotifyEmailHTML    types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.HTML"`
	NotifySlackEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifySlack.Enabled"`
	SlackWebhooksURL   string                    `mapconv:"Settings.SimpleMonitor.NotifySlack.IncomingWebhooksURL"`
	Description        string                    `validate:"min=0,max=512"`
	Tags               types.Tags
	IconID             types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SimpleMonitorCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SimpleMonitorCreateRequest) setDefaults() interface{} {
	return &struct {
		Target             string                    `mapconv:"Name/Status.Target" validate:"required"`
		DelayLoop          int                       `mapconv:"Settings.SimpleMonitor.DelayLoop,default=60" validate:"min=60,max=3600"`
		Enabled            types.StringFlag          `mapconv:"Settings.SimpleMonitor.Enabled"`
		HealthCheck        *SimpleMonitorHealthCheck `mapconv:"Settings.SimpleMonitor.HealthCheck,recursive"`
		NotifyEmailEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.Enabled"`
		NotifyEmailHTML    types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.HTML"`
		NotifySlackEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifySlack.Enabled"`
		SlackWebhooksURL   string                    `mapconv:"Settings.SimpleMonitor.NotifySlack.IncomingWebhooksURL"`
		Description        string                    `validate:"min=0,max=512"`
		Tags               types.Tags
		IconID             types.ID `mapconv:"Icon.ID"`
		Class              string   `mapconv:"Provider.Class"`
	}{
		Target:             o.Target,
		DelayLoop:          o.DelayLoop,
		Enabled:            o.Enabled,
		HealthCheck:        o.HealthCheck,
		NotifyEmailEnabled: o.NotifyEmailEnabled,
		NotifyEmailHTML:    o.NotifyEmailHTML,
		NotifySlackEnabled: o.NotifySlackEnabled,
		SlackWebhooksURL:   o.SlackWebhooksURL,
		Description:        o.Description,
		Tags:               o.Tags,
		IconID:             o.IconID,
		Class:              "simplemon",
	}
}

// GetTarget returns value of Target
func (o *SimpleMonitorCreateRequest) GetTarget() string {
	return o.Target
}

// SetTarget sets value to Target
func (o *SimpleMonitorCreateRequest) SetTarget(v string) {
	o.Target = v
}

// GetDelayLoop returns value of DelayLoop
func (o *SimpleMonitorCreateRequest) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *SimpleMonitorCreateRequest) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetEnabled returns value of Enabled
func (o *SimpleMonitorCreateRequest) GetEnabled() types.StringFlag {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *SimpleMonitorCreateRequest) SetEnabled(v types.StringFlag) {
	o.Enabled = v
}

// GetHealthCheck returns value of HealthCheck
func (o *SimpleMonitorCreateRequest) GetHealthCheck() *SimpleMonitorHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *SimpleMonitorCreateRequest) SetHealthCheck(v *SimpleMonitorHealthCheck) {
	o.HealthCheck = v
}

// GetNotifyEmailEnabled returns value of NotifyEmailEnabled
func (o *SimpleMonitorCreateRequest) GetNotifyEmailEnabled() types.StringFlag {
	return o.NotifyEmailEnabled
}

// SetNotifyEmailEnabled sets value to NotifyEmailEnabled
func (o *SimpleMonitorCreateRequest) SetNotifyEmailEnabled(v types.StringFlag) {
	o.NotifyEmailEnabled = v
}

// GetNotifyEmailHTML returns value of NotifyEmailHTML
func (o *SimpleMonitorCreateRequest) GetNotifyEmailHTML() types.StringFlag {
	return o.NotifyEmailHTML
}

// SetNotifyEmailHTML sets value to NotifyEmailHTML
func (o *SimpleMonitorCreateRequest) SetNotifyEmailHTML(v types.StringFlag) {
	o.NotifyEmailHTML = v
}

// GetNotifySlackEnabled returns value of NotifySlackEnabled
func (o *SimpleMonitorCreateRequest) GetNotifySlackEnabled() types.StringFlag {
	return o.NotifySlackEnabled
}

// SetNotifySlackEnabled sets value to NotifySlackEnabled
func (o *SimpleMonitorCreateRequest) SetNotifySlackEnabled(v types.StringFlag) {
	o.NotifySlackEnabled = v
}

// GetSlackWebhooksURL returns value of SlackWebhooksURL
func (o *SimpleMonitorCreateRequest) GetSlackWebhooksURL() string {
	return o.SlackWebhooksURL
}

// SetSlackWebhooksURL sets value to SlackWebhooksURL
func (o *SimpleMonitorCreateRequest) SetSlackWebhooksURL(v string) {
	o.SlackWebhooksURL = v
}

// GetDescription returns value of Description
func (o *SimpleMonitorCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SimpleMonitorCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SimpleMonitorCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SimpleMonitorCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SimpleMonitorCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SimpleMonitorCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SimpleMonitorCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SimpleMonitorCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *SimpleMonitorCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SimpleMonitorCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* SimpleMonitorUpdateRequest
*************************************************/

// SimpleMonitorUpdateRequest represents API parameter/response structure
type SimpleMonitorUpdateRequest struct {
	DelayLoop          int                       `mapconv:"Settings.SimpleMonitor.DelayLoop,default=60" validate:"min=60,max=3600"`
	Enabled            types.StringFlag          `mapconv:"Settings.SimpleMonitor.Enabled"`
	HealthCheck        *SimpleMonitorHealthCheck `mapconv:"Settings.SimpleMonitor.HealthCheck,recursive"`
	NotifyEmailEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.Enabled"`
	NotifyEmailHTML    types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.HTML"`
	NotifySlackEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifySlack.Enabled"`
	SlackWebhooksURL   string                    `mapconv:"Settings.SimpleMonitor.NotifySlack.IncomingWebhooksURL"`
	Description        string                    `validate:"min=0,max=512"`
	Tags               types.Tags
	IconID             types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SimpleMonitorUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SimpleMonitorUpdateRequest) setDefaults() interface{} {
	return &struct {
		DelayLoop          int                       `mapconv:"Settings.SimpleMonitor.DelayLoop,default=60" validate:"min=60,max=3600"`
		Enabled            types.StringFlag          `mapconv:"Settings.SimpleMonitor.Enabled"`
		HealthCheck        *SimpleMonitorHealthCheck `mapconv:"Settings.SimpleMonitor.HealthCheck,recursive"`
		NotifyEmailEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.Enabled"`
		NotifyEmailHTML    types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifyEmail.HTML"`
		NotifySlackEnabled types.StringFlag          `mapconv:"Settings.SimpleMonitor.NotifySlack.Enabled"`
		SlackWebhooksURL   string                    `mapconv:"Settings.SimpleMonitor.NotifySlack.IncomingWebhooksURL"`
		Description        string                    `validate:"min=0,max=512"`
		Tags               types.Tags
		IconID             types.ID `mapconv:"Icon.ID"`
	}{
		DelayLoop:          o.DelayLoop,
		Enabled:            o.Enabled,
		HealthCheck:        o.HealthCheck,
		NotifyEmailEnabled: o.NotifyEmailEnabled,
		NotifyEmailHTML:    o.NotifyEmailHTML,
		NotifySlackEnabled: o.NotifySlackEnabled,
		SlackWebhooksURL:   o.SlackWebhooksURL,
		Description:        o.Description,
		Tags:               o.Tags,
		IconID:             o.IconID,
	}
}

// GetDelayLoop returns value of DelayLoop
func (o *SimpleMonitorUpdateRequest) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *SimpleMonitorUpdateRequest) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetEnabled returns value of Enabled
func (o *SimpleMonitorUpdateRequest) GetEnabled() types.StringFlag {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *SimpleMonitorUpdateRequest) SetEnabled(v types.StringFlag) {
	o.Enabled = v
}

// GetHealthCheck returns value of HealthCheck
func (o *SimpleMonitorUpdateRequest) GetHealthCheck() *SimpleMonitorHealthCheck {
	return o.HealthCheck
}

// SetHealthCheck sets value to HealthCheck
func (o *SimpleMonitorUpdateRequest) SetHealthCheck(v *SimpleMonitorHealthCheck) {
	o.HealthCheck = v
}

// GetNotifyEmailEnabled returns value of NotifyEmailEnabled
func (o *SimpleMonitorUpdateRequest) GetNotifyEmailEnabled() types.StringFlag {
	return o.NotifyEmailEnabled
}

// SetNotifyEmailEnabled sets value to NotifyEmailEnabled
func (o *SimpleMonitorUpdateRequest) SetNotifyEmailEnabled(v types.StringFlag) {
	o.NotifyEmailEnabled = v
}

// GetNotifyEmailHTML returns value of NotifyEmailHTML
func (o *SimpleMonitorUpdateRequest) GetNotifyEmailHTML() types.StringFlag {
	return o.NotifyEmailHTML
}

// SetNotifyEmailHTML sets value to NotifyEmailHTML
func (o *SimpleMonitorUpdateRequest) SetNotifyEmailHTML(v types.StringFlag) {
	o.NotifyEmailHTML = v
}

// GetNotifySlackEnabled returns value of NotifySlackEnabled
func (o *SimpleMonitorUpdateRequest) GetNotifySlackEnabled() types.StringFlag {
	return o.NotifySlackEnabled
}

// SetNotifySlackEnabled sets value to NotifySlackEnabled
func (o *SimpleMonitorUpdateRequest) SetNotifySlackEnabled(v types.StringFlag) {
	o.NotifySlackEnabled = v
}

// GetSlackWebhooksURL returns value of SlackWebhooksURL
func (o *SimpleMonitorUpdateRequest) GetSlackWebhooksURL() string {
	return o.SlackWebhooksURL
}

// SetSlackWebhooksURL sets value to SlackWebhooksURL
func (o *SimpleMonitorUpdateRequest) SetSlackWebhooksURL(v string) {
	o.SlackWebhooksURL = v
}

// GetDescription returns value of Description
func (o *SimpleMonitorUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SimpleMonitorUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SimpleMonitorUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SimpleMonitorUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SimpleMonitorUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SimpleMonitorUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SimpleMonitorUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SimpleMonitorUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *SimpleMonitorUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SimpleMonitorUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* ResponseTimeSecActivity
*************************************************/

// ResponseTimeSecActivity represents API parameter/response structure
type ResponseTimeSecActivity struct {
	Values []*MonitorResponseTimeSecValue `mapconv:"[]ResponseTimeSec"`
}

// Validate validates by field tags
func (o *ResponseTimeSecActivity) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ResponseTimeSecActivity) setDefaults() interface{} {
	return &struct {
		Values []*MonitorResponseTimeSecValue `mapconv:"[]ResponseTimeSec"`
	}{
		Values: o.Values,
	}
}

// GetValues returns value of Values
func (o *ResponseTimeSecActivity) GetValues() []*MonitorResponseTimeSecValue {
	return o.Values
}

// SetValues sets value to Values
func (o *ResponseTimeSecActivity) SetValues(v []*MonitorResponseTimeSecValue) {
	o.Values = v
}

/*************************************************
* MonitorResponseTimeSecValue
*************************************************/

// MonitorResponseTimeSecValue represents API parameter/response structure
type MonitorResponseTimeSecValue struct {
	Time            time.Time `json:",omitempty" mapconv:",omitempty"`
	ResponseTimeSec float64   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorResponseTimeSecValue) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *MonitorResponseTimeSecValue) setDefaults() interface{} {
	return &struct {
		Time            time.Time `json:",omitempty" mapconv:",omitempty"`
		ResponseTimeSec float64   `json:",omitempty" mapconv:",omitempty"`
	}{
		Time:            o.Time,
		ResponseTimeSec: o.ResponseTimeSec,
	}
}

// GetTime returns value of Time
func (o *MonitorResponseTimeSecValue) GetTime() time.Time {
	return o.Time
}

// SetTime sets value to Time
func (o *MonitorResponseTimeSecValue) SetTime(v time.Time) {
	o.Time = v
}

// GetResponseTimeSec returns value of ResponseTimeSec
func (o *MonitorResponseTimeSecValue) GetResponseTimeSec() float64 {
	return o.ResponseTimeSec
}

// SetResponseTimeSec sets value to ResponseTimeSec
func (o *MonitorResponseTimeSecValue) SetResponseTimeSec(v float64) {
	o.ResponseTimeSec = v
}

/*************************************************
* SimpleMonitorHealthStatus
*************************************************/

// SimpleMonitorHealthStatus represents API parameter/response structure
type SimpleMonitorHealthStatus struct {
	LastCheckedAt       time.Time
	LastHealthChangedAt time.Time
	Health              types.ESimpleMonitorHealth
}

// Validate validates by field tags
func (o *SimpleMonitorHealthStatus) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SimpleMonitorHealthStatus) setDefaults() interface{} {
	return &struct {
		LastCheckedAt       time.Time
		LastHealthChangedAt time.Time
		Health              types.ESimpleMonitorHealth
	}{
		LastCheckedAt:       o.LastCheckedAt,
		LastHealthChangedAt: o.LastHealthChangedAt,
		Health:              o.Health,
	}
}

// GetLastCheckedAt returns value of LastCheckedAt
func (o *SimpleMonitorHealthStatus) GetLastCheckedAt() time.Time {
	return o.LastCheckedAt
}

// SetLastCheckedAt sets value to LastCheckedAt
func (o *SimpleMonitorHealthStatus) SetLastCheckedAt(v time.Time) {
	o.LastCheckedAt = v
}

// GetLastHealthChangedAt returns value of LastHealthChangedAt
func (o *SimpleMonitorHealthStatus) GetLastHealthChangedAt() time.Time {
	return o.LastHealthChangedAt
}

// SetLastHealthChangedAt sets value to LastHealthChangedAt
func (o *SimpleMonitorHealthStatus) SetLastHealthChangedAt(v time.Time) {
	o.LastHealthChangedAt = v
}

// GetHealth returns value of Health
func (o *SimpleMonitorHealthStatus) GetHealth() types.ESimpleMonitorHealth {
	return o.Health
}

// SetHealth sets value to Health
func (o *SimpleMonitorHealthStatus) SetHealth(v types.ESimpleMonitorHealth) {
	o.Health = v
}

/*************************************************
* SSHKey
*************************************************/

// SSHKey represents API parameter/response structure
type SSHKey struct {
	ID          types.ID
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	CreatedAt   time.Time
	PublicKey   string
	Fingerprint string
}

// Validate validates by field tags
func (o *SSHKey) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SSHKey) setDefaults() interface{} {
	return &struct {
		ID          types.ID
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		CreatedAt   time.Time
		PublicKey   string
		Fingerprint string
	}{
		ID:          o.ID,
		Name:        o.Name,
		Description: o.Description,
		CreatedAt:   o.CreatedAt,
		PublicKey:   o.PublicKey,
		Fingerprint: o.Fingerprint,
	}
}

// GetID returns value of ID
func (o *SSHKey) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *SSHKey) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *SSHKey) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *SSHKey) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *SSHKey) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *SSHKey) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *SSHKey) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SSHKey) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SSHKey) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SSHKey) SetDescription(v string) {
	o.Description = v
}

// GetCreatedAt returns value of CreatedAt
func (o *SSHKey) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *SSHKey) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetPublicKey returns value of PublicKey
func (o *SSHKey) GetPublicKey() string {
	return o.PublicKey
}

// SetPublicKey sets value to PublicKey
func (o *SSHKey) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetFingerprint returns value of Fingerprint
func (o *SSHKey) GetFingerprint() string {
	return o.Fingerprint
}

// SetFingerprint sets value to Fingerprint
func (o *SSHKey) SetFingerprint(v string) {
	o.Fingerprint = v
}

/*************************************************
* SSHKeyCreateRequest
*************************************************/

// SSHKeyCreateRequest represents API parameter/response structure
type SSHKeyCreateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	PublicKey   string
}

// Validate validates by field tags
func (o *SSHKeyCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SSHKeyCreateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		PublicKey   string
	}{
		Name:        o.Name,
		Description: o.Description,
		PublicKey:   o.PublicKey,
	}
}

// GetName returns value of Name
func (o *SSHKeyCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SSHKeyCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SSHKeyCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SSHKeyCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetPublicKey returns value of PublicKey
func (o *SSHKeyCreateRequest) GetPublicKey() string {
	return o.PublicKey
}

// SetPublicKey sets value to PublicKey
func (o *SSHKeyCreateRequest) SetPublicKey(v string) {
	o.PublicKey = v
}

/*************************************************
* SSHKeyGenerated
*************************************************/

// SSHKeyGenerated represents API parameter/response structure
type SSHKeyGenerated struct {
	ID          types.ID
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	CreatedAt   time.Time
	PublicKey   string
	Fingerprint string
	PrivateKey  string
}

// Validate validates by field tags
func (o *SSHKeyGenerated) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SSHKeyGenerated) setDefaults() interface{} {
	return &struct {
		ID          types.ID
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		CreatedAt   time.Time
		PublicKey   string
		Fingerprint string
		PrivateKey  string
	}{
		ID:          o.ID,
		Name:        o.Name,
		Description: o.Description,
		CreatedAt:   o.CreatedAt,
		PublicKey:   o.PublicKey,
		Fingerprint: o.Fingerprint,
		PrivateKey:  o.PrivateKey,
	}
}

// GetID returns value of ID
func (o *SSHKeyGenerated) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *SSHKeyGenerated) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *SSHKeyGenerated) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *SSHKeyGenerated) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *SSHKeyGenerated) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *SSHKeyGenerated) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *SSHKeyGenerated) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SSHKeyGenerated) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SSHKeyGenerated) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SSHKeyGenerated) SetDescription(v string) {
	o.Description = v
}

// GetCreatedAt returns value of CreatedAt
func (o *SSHKeyGenerated) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *SSHKeyGenerated) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetPublicKey returns value of PublicKey
func (o *SSHKeyGenerated) GetPublicKey() string {
	return o.PublicKey
}

// SetPublicKey sets value to PublicKey
func (o *SSHKeyGenerated) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetFingerprint returns value of Fingerprint
func (o *SSHKeyGenerated) GetFingerprint() string {
	return o.Fingerprint
}

// SetFingerprint sets value to Fingerprint
func (o *SSHKeyGenerated) SetFingerprint(v string) {
	o.Fingerprint = v
}

// GetPrivateKey returns value of PrivateKey
func (o *SSHKeyGenerated) GetPrivateKey() string {
	return o.PrivateKey
}

// SetPrivateKey sets value to PrivateKey
func (o *SSHKeyGenerated) SetPrivateKey(v string) {
	o.PrivateKey = v
}

/*************************************************
* SSHKeyGenerateRequest
*************************************************/

// SSHKeyGenerateRequest represents API parameter/response structure
type SSHKeyGenerateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	PassPhrase  string
}

// Validate validates by field tags
func (o *SSHKeyGenerateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SSHKeyGenerateRequest) setDefaults() interface{} {
	return &struct {
		Name           string `validate:"required"`
		Description    string `validate:"min=0,max=512"`
		PassPhrase     string
		GenerateFormat string
	}{
		Name:           o.Name,
		Description:    o.Description,
		PassPhrase:     o.PassPhrase,
		GenerateFormat: "openssh",
	}
}

// GetName returns value of Name
func (o *SSHKeyGenerateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SSHKeyGenerateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SSHKeyGenerateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SSHKeyGenerateRequest) SetDescription(v string) {
	o.Description = v
}

// GetPassPhrase returns value of PassPhrase
func (o *SSHKeyGenerateRequest) GetPassPhrase() string {
	return o.PassPhrase
}

// SetPassPhrase sets value to PassPhrase
func (o *SSHKeyGenerateRequest) SetPassPhrase(v string) {
	o.PassPhrase = v
}

/*************************************************
* SSHKeyUpdateRequest
*************************************************/

// SSHKeyUpdateRequest represents API parameter/response structure
type SSHKeyUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
}

// Validate validates by field tags
func (o *SSHKeyUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SSHKeyUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
	}{
		Name:        o.Name,
		Description: o.Description,
	}
}

// GetName returns value of Name
func (o *SSHKeyUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SSHKeyUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SSHKeyUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SSHKeyUpdateRequest) SetDescription(v string) {
	o.Description = v
}

/*************************************************
* Switch
*************************************************/

// Switch represents API parameter/response structure
type Switch struct {
	ID             types.ID
	Name           string `validate:"required"`
	Description    string `validate:"min=0,max=512"`
	Tags           types.Tags
	IconID         types.ID `mapconv:"Icon.ID"`
	CreatedAt      time.Time
	ModifiedAt     time.Time
	Scope          types.EScope
	NetworkMaskLen int             `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string          `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
	Subnets        []*SwitchSubnet `json:",omitempty" mapconv:"[]Subnets,omitempty,recursive"`
	BridgeID       types.ID        `mapconv:"Bridge.ID,omitempty"`
}

// Validate validates by field tags
func (o *Switch) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Switch) setDefaults() interface{} {
	return &struct {
		ID             types.ID
		Name           string `validate:"required"`
		Description    string `validate:"min=0,max=512"`
		Tags           types.Tags
		IconID         types.ID `mapconv:"Icon.ID"`
		CreatedAt      time.Time
		ModifiedAt     time.Time
		Scope          types.EScope
		NetworkMaskLen int             `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
		DefaultRoute   string          `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
		Subnets        []*SwitchSubnet `json:",omitempty" mapconv:"[]Subnets,omitempty,recursive"`
		BridgeID       types.ID        `mapconv:"Bridge.ID,omitempty"`
	}{
		ID:             o.ID,
		Name:           o.Name,
		Description:    o.Description,
		Tags:           o.Tags,
		IconID:         o.IconID,
		CreatedAt:      o.CreatedAt,
		ModifiedAt:     o.ModifiedAt,
		Scope:          o.Scope,
		NetworkMaskLen: o.NetworkMaskLen,
		DefaultRoute:   o.DefaultRoute,
		Subnets:        o.Subnets,
		BridgeID:       o.BridgeID,
	}
}

// GetID returns value of ID
func (o *Switch) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Switch) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Switch) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Switch) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Switch) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Switch) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Switch) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Switch) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Switch) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Switch) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Switch) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Switch) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *Switch) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *Switch) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *Switch) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *Switch) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *Switch) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *Switch) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Switch) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Switch) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Switch) GetModifiedAt() time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Switch) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetScope returns value of Scope
func (o *Switch) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *Switch) SetScope(v types.EScope) {
	o.Scope = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *Switch) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *Switch) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *Switch) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *Switch) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetSubnets returns value of Subnets
func (o *Switch) GetSubnets() []*SwitchSubnet {
	return o.Subnets
}

// SetSubnets sets value to Subnets
func (o *Switch) SetSubnets(v []*SwitchSubnet) {
	o.Subnets = v
}

// GetBridgeID returns value of BridgeID
func (o *Switch) GetBridgeID() types.ID {
	return o.BridgeID
}

// SetBridgeID sets value to BridgeID
func (o *Switch) SetBridgeID(v types.ID) {
	o.BridgeID = v
}

/*************************************************
* SwitchSubnet
*************************************************/

// SwitchSubnet represents API parameter/response structure
type SwitchSubnet struct {
	ID                   types.ID
	DefaultRoute         string `validate:"ipv4"`
	NextHop              string `validate:"ipv4"`
	StaticRoute          string `validate:"ipv4"`
	NetworkAddress       string `validate:"ipv4"`
	NetworkMaskLen       int    `validate:"min=24,max=28"`
	Internet             *Internet
	AssignedIPAddressMax string `mapconv:"IPAddresses.Max"`
	AssignedIPAddressMin string `mapconv:"IPAddresses.Min"`
}

// Validate validates by field tags
func (o *SwitchSubnet) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SwitchSubnet) setDefaults() interface{} {
	return &struct {
		ID                   types.ID
		DefaultRoute         string `validate:"ipv4"`
		NextHop              string `validate:"ipv4"`
		StaticRoute          string `validate:"ipv4"`
		NetworkAddress       string `validate:"ipv4"`
		NetworkMaskLen       int    `validate:"min=24,max=28"`
		Internet             *Internet
		AssignedIPAddressMax string `mapconv:"IPAddresses.Max"`
		AssignedIPAddressMin string `mapconv:"IPAddresses.Min"`
	}{
		ID:                   o.ID,
		DefaultRoute:         o.DefaultRoute,
		NextHop:              o.NextHop,
		StaticRoute:          o.StaticRoute,
		NetworkAddress:       o.NetworkAddress,
		NetworkMaskLen:       o.NetworkMaskLen,
		Internet:             o.Internet,
		AssignedIPAddressMax: o.AssignedIPAddressMax,
		AssignedIPAddressMin: o.AssignedIPAddressMin,
	}
}

// GetAssignedIPAddresses 割り当てられたIPアドレスのリスト
func (o *SwitchSubnet) GetAssignedIPAddresses() []string {
	return accessor.GetAssignedIPAddresses(o)
}

// GetID returns value of ID
func (o *SwitchSubnet) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *SwitchSubnet) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *SwitchSubnet) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *SwitchSubnet) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *SwitchSubnet) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *SwitchSubnet) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetDefaultRoute returns value of DefaultRoute
func (o *SwitchSubnet) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *SwitchSubnet) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNextHop returns value of NextHop
func (o *SwitchSubnet) GetNextHop() string {
	return o.NextHop
}

// SetNextHop sets value to NextHop
func (o *SwitchSubnet) SetNextHop(v string) {
	o.NextHop = v
}

// GetStaticRoute returns value of StaticRoute
func (o *SwitchSubnet) GetStaticRoute() string {
	return o.StaticRoute
}

// SetStaticRoute sets value to StaticRoute
func (o *SwitchSubnet) SetStaticRoute(v string) {
	o.StaticRoute = v
}

// GetNetworkAddress returns value of NetworkAddress
func (o *SwitchSubnet) GetNetworkAddress() string {
	return o.NetworkAddress
}

// SetNetworkAddress sets value to NetworkAddress
func (o *SwitchSubnet) SetNetworkAddress(v string) {
	o.NetworkAddress = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *SwitchSubnet) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *SwitchSubnet) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetInternet returns value of Internet
func (o *SwitchSubnet) GetInternet() *Internet {
	return o.Internet
}

// SetInternet sets value to Internet
func (o *SwitchSubnet) SetInternet(v *Internet) {
	o.Internet = v
}

// GetAssignedIPAddressMax returns value of AssignedIPAddressMax
func (o *SwitchSubnet) GetAssignedIPAddressMax() string {
	return o.AssignedIPAddressMax
}

// SetAssignedIPAddressMax sets value to AssignedIPAddressMax
func (o *SwitchSubnet) SetAssignedIPAddressMax(v string) {
	o.AssignedIPAddressMax = v
}

// GetAssignedIPAddressMin returns value of AssignedIPAddressMin
func (o *SwitchSubnet) GetAssignedIPAddressMin() string {
	return o.AssignedIPAddressMin
}

// SetAssignedIPAddressMin sets value to AssignedIPAddressMin
func (o *SwitchSubnet) SetAssignedIPAddressMin(v string) {
	o.AssignedIPAddressMin = v
}

/*************************************************
* SwitchCreateRequest
*************************************************/

// SwitchCreateRequest represents API parameter/response structure
type SwitchCreateRequest struct {
	Name           string `validate:"required"`
	NetworkMaskLen int    `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
	Description    string `validate:"min=0,max=512"`
	Tags           types.Tags
	IconID         types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SwitchCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SwitchCreateRequest) setDefaults() interface{} {
	return &struct {
		Name           string `validate:"required"`
		NetworkMaskLen int    `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
		DefaultRoute   string `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
		Description    string `validate:"min=0,max=512"`
		Tags           types.Tags
		IconID         types.ID `mapconv:"Icon.ID"`
	}{
		Name:           o.Name,
		NetworkMaskLen: o.NetworkMaskLen,
		DefaultRoute:   o.DefaultRoute,
		Description:    o.Description,
		Tags:           o.Tags,
		IconID:         o.IconID,
	}
}

// GetName returns value of Name
func (o *SwitchCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SwitchCreateRequest) SetName(v string) {
	o.Name = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *SwitchCreateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *SwitchCreateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *SwitchCreateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *SwitchCreateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetDescription returns value of Description
func (o *SwitchCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SwitchCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SwitchCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SwitchCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SwitchCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SwitchCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SwitchCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SwitchCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *SwitchCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SwitchCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* SwitchUpdateRequest
*************************************************/

// SwitchUpdateRequest represents API parameter/response structure
type SwitchUpdateRequest struct {
	Name           string `validate:"required"`
	NetworkMaskLen int    `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
	Description    string `validate:"min=0,max=512"`
	Tags           types.Tags
	IconID         types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SwitchUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *SwitchUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name           string `validate:"required"`
		NetworkMaskLen int    `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
		DefaultRoute   string `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
		Description    string `validate:"min=0,max=512"`
		Tags           types.Tags
		IconID         types.ID `mapconv:"Icon.ID"`
	}{
		Name:           o.Name,
		NetworkMaskLen: o.NetworkMaskLen,
		DefaultRoute:   o.DefaultRoute,
		Description:    o.Description,
		Tags:           o.Tags,
		IconID:         o.IconID,
	}
}

// GetName returns value of Name
func (o *SwitchUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SwitchUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *SwitchUpdateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *SwitchUpdateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *SwitchUpdateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *SwitchUpdateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetDescription returns value of Description
func (o *SwitchUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SwitchUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SwitchUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SwitchUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *SwitchUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *SwitchUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *SwitchUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *SwitchUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *SwitchUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SwitchUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

/*************************************************
* VPCRouter
*************************************************/

// VPCRouter represents API parameter/response structure
type VPCRouter struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    types.Tags
	Availability            types.EAvailability
	Class                   string
	IconID                  types.ID `mapconv:"Icon.ID"`
	CreatedAt               time.Time
	PlanID                  types.ID `mapconv:"Remark.Plan.ID/Plan.ID"`
	SettingsHash            string
	Settings                *VPCRouterSetting           `mapconv:",omitempty,recursive"`
	InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
	InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
	InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
	InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
	Interfaces              []*VPCRouterInterface       `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
	SwitchID                types.ID                    `mapconv:"Remark.Switch.ID"`
	IPAddresses             []string                    `mapconv:"Remark.[]Servers.IPAddress"`
	ZoneID                  types.ID                    `mapconv:"Remark.Zone.ID"`
}

// Validate validates by field tags
func (o *VPCRouter) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouter) setDefaults() interface{} {
	return &struct {
		ID                      types.ID
		Name                    string `validate:"required"`
		Description             string `validate:"min=0,max=512"`
		Tags                    types.Tags
		Availability            types.EAvailability
		Class                   string
		IconID                  types.ID `mapconv:"Icon.ID"`
		CreatedAt               time.Time
		PlanID                  types.ID `mapconv:"Remark.Plan.ID/Plan.ID"`
		SettingsHash            string
		Settings                *VPCRouterSetting           `mapconv:",omitempty,recursive"`
		InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
		InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
		InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
		InstanceStatusChangedAt time.Time                   `mapconv:"Instance.StatusChangedAt"`
		Interfaces              []*VPCRouterInterface       `json:",omitempty" mapconv:"[]Interfaces,recursive,omitempty"`
		SwitchID                types.ID                    `mapconv:"Remark.Switch.ID"`
		IPAddresses             []string                    `mapconv:"Remark.[]Servers.IPAddress"`
		ZoneID                  types.ID                    `mapconv:"Remark.Zone.ID"`
	}{
		ID:                      o.ID,
		Name:                    o.Name,
		Description:             o.Description,
		Tags:                    o.Tags,
		Availability:            o.Availability,
		Class:                   o.Class,
		IconID:                  o.IconID,
		CreatedAt:               o.CreatedAt,
		PlanID:                  o.PlanID,
		SettingsHash:            o.SettingsHash,
		Settings:                o.Settings,
		InstanceHostName:        o.InstanceHostName,
		InstanceHostInfoURL:     o.InstanceHostInfoURL,
		InstanceStatus:          o.InstanceStatus,
		InstanceStatusChangedAt: o.InstanceStatusChangedAt,
		Interfaces:              o.Interfaces,
		SwitchID:                o.SwitchID,
		IPAddresses:             o.IPAddresses,
		ZoneID:                  o.ZoneID,
	}
}

// GetID returns value of ID
func (o *VPCRouter) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *VPCRouter) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *VPCRouter) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *VPCRouter) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *VPCRouter) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *VPCRouter) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *VPCRouter) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *VPCRouter) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *VPCRouter) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *VPCRouter) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *VPCRouter) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *VPCRouter) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *VPCRouter) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *VPCRouter) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *VPCRouter) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *VPCRouter) ClearTags() {
	accessor.ClearTags(o)
}

// GetAvailability returns value of Availability
func (o *VPCRouter) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *VPCRouter) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetClass returns value of Class
func (o *VPCRouter) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *VPCRouter) SetClass(v string) {
	o.Class = v
}

// GetIconID returns value of IconID
func (o *VPCRouter) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *VPCRouter) SetIconID(v types.ID) {
	o.IconID = v
}

// GetCreatedAt returns value of CreatedAt
func (o *VPCRouter) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *VPCRouter) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetPlanID returns value of PlanID
func (o *VPCRouter) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *VPCRouter) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetSettingsHash returns value of SettingsHash
func (o *VPCRouter) GetSettingsHash() string {
	return o.SettingsHash
}

// SetSettingsHash sets value to SettingsHash
func (o *VPCRouter) SetSettingsHash(v string) {
	o.SettingsHash = v
}

// GetSettings returns value of Settings
func (o *VPCRouter) GetSettings() *VPCRouterSetting {
	return o.Settings
}

// SetSettings sets value to Settings
func (o *VPCRouter) SetSettings(v *VPCRouterSetting) {
	o.Settings = v
}

// GetInstanceHostName returns value of InstanceHostName
func (o *VPCRouter) GetInstanceHostName() string {
	return o.InstanceHostName
}

// SetInstanceHostName sets value to InstanceHostName
func (o *VPCRouter) SetInstanceHostName(v string) {
	o.InstanceHostName = v
}

// GetInstanceHostInfoURL returns value of InstanceHostInfoURL
func (o *VPCRouter) GetInstanceHostInfoURL() string {
	return o.InstanceHostInfoURL
}

// SetInstanceHostInfoURL sets value to InstanceHostInfoURL
func (o *VPCRouter) SetInstanceHostInfoURL(v string) {
	o.InstanceHostInfoURL = v
}

// GetInstanceStatus returns value of InstanceStatus
func (o *VPCRouter) GetInstanceStatus() types.EServerInstanceStatus {
	return o.InstanceStatus
}

// SetInstanceStatus sets value to InstanceStatus
func (o *VPCRouter) SetInstanceStatus(v types.EServerInstanceStatus) {
	o.InstanceStatus = v
}

// GetInstanceStatusChangedAt returns value of InstanceStatusChangedAt
func (o *VPCRouter) GetInstanceStatusChangedAt() time.Time {
	return o.InstanceStatusChangedAt
}

// SetInstanceStatusChangedAt sets value to InstanceStatusChangedAt
func (o *VPCRouter) SetInstanceStatusChangedAt(v time.Time) {
	o.InstanceStatusChangedAt = v
}

// GetInterfaces returns value of Interfaces
func (o *VPCRouter) GetInterfaces() []*VPCRouterInterface {
	return o.Interfaces
}

// SetInterfaces sets value to Interfaces
func (o *VPCRouter) SetInterfaces(v []*VPCRouterInterface) {
	o.Interfaces = v
}

// GetSwitchID returns value of SwitchID
func (o *VPCRouter) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *VPCRouter) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetIPAddresses returns value of IPAddresses
func (o *VPCRouter) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *VPCRouter) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetZoneID returns value of ZoneID
func (o *VPCRouter) GetZoneID() types.ID {
	return o.ZoneID
}

// SetZoneID sets value to ZoneID
func (o *VPCRouter) SetZoneID(v types.ID) {
	o.ZoneID = v
}

/*************************************************
* VPCRouterSetting
*************************************************/

// VPCRouterSetting represents API parameter/response structure
type VPCRouterSetting struct {
	VRID                      int                            `json:",omitempty" mapconv:"Router.VRID"`
	InternetConnectionEnabled types.StringFlag               `json:",omitempty" mapconv:"Router.InternetConnection.Enabled,omitempty"`
	Interfaces                []*VPCRouterInterfaceSetting   `json:",omitempty" mapconv:"Router.[]Interface,omitempty,recursive"`
	StaticNAT                 []*VPCRouterStaticNAT          `json:",omitempty" mapconv:"Router.StaticNAT.[]Config,omitempty,recursive"`
	Firewall                  []*VPCRouterFirewall           `json:",omitempty" mapconv:"Router.Firewall.[]Config,omitempty,recursive"`
	DHCPServer                []*VPCRouterDHCPServer         `json:",omitempty" mapconv:"Router.DHCPServer.[]Config,omitempty,recursive"`
	DHCPStaticMapping         []*VPCRouterDHCPStaticMapping  `json:",omitempty" mapconv:"Router.DHCPStaticMapping.[]Config,omitempty,recursive"`
	PPTPServer                *VPCRouterPPTPServer           `json:",omitempty" mapconv:"Router.PPTPServer.Config,omitempty,recursive"`
	PPTPServerEnabled         types.StringFlag               `json:",omitempty" mapconv:"Router.PPTPServer.Enabled,omitempty"`
	L2TPIPsecServer           *VPCRouterL2TPIPsecServer      `json:",omitempty" mapconv:"Router.L2TPIPsecServer.Config,omitempty,recursive"`
	L2TPIPsecServerEnabled    types.StringFlag               `json:",omitempty" mapconv:"Router.L2TPIPsecServer.Enabled,omitempty"`
	RemoteAccessUsers         []*VPCRouterRemoteAccessUser   `json:",omitempty" mapconv:"Router.RemoteAccessUsers.[]Config,omitempty,recursive"`
	SiteToSiteIPsecVPN        []*VPCRouterSiteToSiteIPsecVPN `json:",omitempty" mapconv:"Router.SiteToSiteIPsecVPN.[]Config,omitempty,recursive"`
	StaticRoute               []*VPCRouterStaticRoute        `json:",omitempty" mapconv:"Router.StaticRoutes.[]Config,omitempty,recursive"`
}

// Validate validates by field tags
func (o *VPCRouterSetting) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterSetting) setDefaults() interface{} {
	return &struct {
		VRID                      int                            `json:",omitempty" mapconv:"Router.VRID"`
		InternetConnectionEnabled types.StringFlag               `json:",omitempty" mapconv:"Router.InternetConnection.Enabled,omitempty"`
		Interfaces                []*VPCRouterInterfaceSetting   `json:",omitempty" mapconv:"Router.[]Interface,omitempty,recursive"`
		StaticNAT                 []*VPCRouterStaticNAT          `json:",omitempty" mapconv:"Router.StaticNAT.[]Config,omitempty,recursive"`
		Firewall                  []*VPCRouterFirewall           `json:",omitempty" mapconv:"Router.Firewall.[]Config,omitempty,recursive"`
		DHCPServer                []*VPCRouterDHCPServer         `json:",omitempty" mapconv:"Router.DHCPServer.[]Config,omitempty,recursive"`
		DHCPStaticMapping         []*VPCRouterDHCPStaticMapping  `json:",omitempty" mapconv:"Router.DHCPStaticMapping.[]Config,omitempty,recursive"`
		PPTPServer                *VPCRouterPPTPServer           `json:",omitempty" mapconv:"Router.PPTPServer.Config,omitempty,recursive"`
		PPTPServerEnabled         types.StringFlag               `json:",omitempty" mapconv:"Router.PPTPServer.Enabled,omitempty"`
		L2TPIPsecServer           *VPCRouterL2TPIPsecServer      `json:",omitempty" mapconv:"Router.L2TPIPsecServer.Config,omitempty,recursive"`
		L2TPIPsecServerEnabled    types.StringFlag               `json:",omitempty" mapconv:"Router.L2TPIPsecServer.Enabled,omitempty"`
		RemoteAccessUsers         []*VPCRouterRemoteAccessUser   `json:",omitempty" mapconv:"Router.RemoteAccessUsers.[]Config,omitempty,recursive"`
		SiteToSiteIPsecVPN        []*VPCRouterSiteToSiteIPsecVPN `json:",omitempty" mapconv:"Router.SiteToSiteIPsecVPN.[]Config,omitempty,recursive"`
		StaticRoute               []*VPCRouterStaticRoute        `json:",omitempty" mapconv:"Router.StaticRoutes.[]Config,omitempty,recursive"`
	}{
		VRID:                      o.VRID,
		InternetConnectionEnabled: o.InternetConnectionEnabled,
		Interfaces:                o.Interfaces,
		StaticNAT:                 o.StaticNAT,
		Firewall:                  o.Firewall,
		DHCPServer:                o.DHCPServer,
		DHCPStaticMapping:         o.DHCPStaticMapping,
		PPTPServer:                o.PPTPServer,
		PPTPServerEnabled:         o.PPTPServerEnabled,
		L2TPIPsecServer:           o.L2TPIPsecServer,
		L2TPIPsecServerEnabled:    o.L2TPIPsecServerEnabled,
		RemoteAccessUsers:         o.RemoteAccessUsers,
		SiteToSiteIPsecVPN:        o.SiteToSiteIPsecVPN,
		StaticRoute:               o.StaticRoute,
	}
}

// GetVRID returns value of VRID
func (o *VPCRouterSetting) GetVRID() int {
	return o.VRID
}

// SetVRID sets value to VRID
func (o *VPCRouterSetting) SetVRID(v int) {
	o.VRID = v
}

// GetInternetConnectionEnabled returns value of InternetConnectionEnabled
func (o *VPCRouterSetting) GetInternetConnectionEnabled() types.StringFlag {
	return o.InternetConnectionEnabled
}

// SetInternetConnectionEnabled sets value to InternetConnectionEnabled
func (o *VPCRouterSetting) SetInternetConnectionEnabled(v types.StringFlag) {
	o.InternetConnectionEnabled = v
}

// GetInterfaces returns value of Interfaces
func (o *VPCRouterSetting) GetInterfaces() []*VPCRouterInterfaceSetting {
	return o.Interfaces
}

// SetInterfaces sets value to Interfaces
func (o *VPCRouterSetting) SetInterfaces(v []*VPCRouterInterfaceSetting) {
	o.Interfaces = v
}

// GetStaticNAT returns value of StaticNAT
func (o *VPCRouterSetting) GetStaticNAT() []*VPCRouterStaticNAT {
	return o.StaticNAT
}

// SetStaticNAT sets value to StaticNAT
func (o *VPCRouterSetting) SetStaticNAT(v []*VPCRouterStaticNAT) {
	o.StaticNAT = v
}

// GetFirewall returns value of Firewall
func (o *VPCRouterSetting) GetFirewall() []*VPCRouterFirewall {
	return o.Firewall
}

// SetFirewall sets value to Firewall
func (o *VPCRouterSetting) SetFirewall(v []*VPCRouterFirewall) {
	o.Firewall = v
}

// GetDHCPServer returns value of DHCPServer
func (o *VPCRouterSetting) GetDHCPServer() []*VPCRouterDHCPServer {
	return o.DHCPServer
}

// SetDHCPServer sets value to DHCPServer
func (o *VPCRouterSetting) SetDHCPServer(v []*VPCRouterDHCPServer) {
	o.DHCPServer = v
}

// GetDHCPStaticMapping returns value of DHCPStaticMapping
func (o *VPCRouterSetting) GetDHCPStaticMapping() []*VPCRouterDHCPStaticMapping {
	return o.DHCPStaticMapping
}

// SetDHCPStaticMapping sets value to DHCPStaticMapping
func (o *VPCRouterSetting) SetDHCPStaticMapping(v []*VPCRouterDHCPStaticMapping) {
	o.DHCPStaticMapping = v
}

// GetPPTPServer returns value of PPTPServer
func (o *VPCRouterSetting) GetPPTPServer() *VPCRouterPPTPServer {
	return o.PPTPServer
}

// SetPPTPServer sets value to PPTPServer
func (o *VPCRouterSetting) SetPPTPServer(v *VPCRouterPPTPServer) {
	o.PPTPServer = v
}

// GetPPTPServerEnabled returns value of PPTPServerEnabled
func (o *VPCRouterSetting) GetPPTPServerEnabled() types.StringFlag {
	return o.PPTPServerEnabled
}

// SetPPTPServerEnabled sets value to PPTPServerEnabled
func (o *VPCRouterSetting) SetPPTPServerEnabled(v types.StringFlag) {
	o.PPTPServerEnabled = v
}

// GetL2TPIPsecServer returns value of L2TPIPsecServer
func (o *VPCRouterSetting) GetL2TPIPsecServer() *VPCRouterL2TPIPsecServer {
	return o.L2TPIPsecServer
}

// SetL2TPIPsecServer sets value to L2TPIPsecServer
func (o *VPCRouterSetting) SetL2TPIPsecServer(v *VPCRouterL2TPIPsecServer) {
	o.L2TPIPsecServer = v
}

// GetL2TPIPsecServerEnabled returns value of L2TPIPsecServerEnabled
func (o *VPCRouterSetting) GetL2TPIPsecServerEnabled() types.StringFlag {
	return o.L2TPIPsecServerEnabled
}

// SetL2TPIPsecServerEnabled sets value to L2TPIPsecServerEnabled
func (o *VPCRouterSetting) SetL2TPIPsecServerEnabled(v types.StringFlag) {
	o.L2TPIPsecServerEnabled = v
}

// GetRemoteAccessUsers returns value of RemoteAccessUsers
func (o *VPCRouterSetting) GetRemoteAccessUsers() []*VPCRouterRemoteAccessUser {
	return o.RemoteAccessUsers
}

// SetRemoteAccessUsers sets value to RemoteAccessUsers
func (o *VPCRouterSetting) SetRemoteAccessUsers(v []*VPCRouterRemoteAccessUser) {
	o.RemoteAccessUsers = v
}

// GetSiteToSiteIPsecVPN returns value of SiteToSiteIPsecVPN
func (o *VPCRouterSetting) GetSiteToSiteIPsecVPN() []*VPCRouterSiteToSiteIPsecVPN {
	return o.SiteToSiteIPsecVPN
}

// SetSiteToSiteIPsecVPN sets value to SiteToSiteIPsecVPN
func (o *VPCRouterSetting) SetSiteToSiteIPsecVPN(v []*VPCRouterSiteToSiteIPsecVPN) {
	o.SiteToSiteIPsecVPN = v
}

// GetStaticRoute returns value of StaticRoute
func (o *VPCRouterSetting) GetStaticRoute() []*VPCRouterStaticRoute {
	return o.StaticRoute
}

// SetStaticRoute sets value to StaticRoute
func (o *VPCRouterSetting) SetStaticRoute(v []*VPCRouterStaticRoute) {
	o.StaticRoute = v
}

/*************************************************
* VPCRouterInterfaceSetting
*************************************************/

// VPCRouterInterfaceSetting represents API parameter/response structure
type VPCRouterInterfaceSetting struct {
	Enabled          types.StringFlag `mapconv:",omitempty"`
	IPAddress        []string
	VirtualIPAddress string
	IPAliases        []string
	NetworkMaskLen   int
	Index            int
}

// Validate validates by field tags
func (o *VPCRouterInterfaceSetting) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterInterfaceSetting) setDefaults() interface{} {
	return &struct {
		Enabled          types.StringFlag `mapconv:",omitempty"`
		IPAddress        []string
		VirtualIPAddress string
		IPAliases        []string
		NetworkMaskLen   int
		Index            int
	}{
		Enabled:          o.Enabled,
		IPAddress:        o.IPAddress,
		VirtualIPAddress: o.VirtualIPAddress,
		IPAliases:        o.IPAliases,
		NetworkMaskLen:   o.NetworkMaskLen,
		Index:            o.Index,
	}
}

// GetEnabled returns value of Enabled
func (o *VPCRouterInterfaceSetting) GetEnabled() types.StringFlag {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *VPCRouterInterfaceSetting) SetEnabled(v types.StringFlag) {
	o.Enabled = v
}

// GetIPAddress returns value of IPAddress
func (o *VPCRouterInterfaceSetting) GetIPAddress() []string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *VPCRouterInterfaceSetting) SetIPAddress(v []string) {
	o.IPAddress = v
}

// GetVirtualIPAddress returns value of VirtualIPAddress
func (o *VPCRouterInterfaceSetting) GetVirtualIPAddress() string {
	return o.VirtualIPAddress
}

// SetVirtualIPAddress sets value to VirtualIPAddress
func (o *VPCRouterInterfaceSetting) SetVirtualIPAddress(v string) {
	o.VirtualIPAddress = v
}

// GetIPAliases returns value of IPAliases
func (o *VPCRouterInterfaceSetting) GetIPAliases() []string {
	return o.IPAliases
}

// SetIPAliases sets value to IPAliases
func (o *VPCRouterInterfaceSetting) SetIPAliases(v []string) {
	o.IPAliases = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *VPCRouterInterfaceSetting) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *VPCRouterInterfaceSetting) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetIndex returns value of Index
func (o *VPCRouterInterfaceSetting) GetIndex() int {
	return o.Index
}

// SetIndex sets value to Index
func (o *VPCRouterInterfaceSetting) SetIndex(v int) {
	o.Index = v
}

/*************************************************
* VPCRouterStaticNAT
*************************************************/

// VPCRouterStaticNAT represents API parameter/response structure
type VPCRouterStaticNAT struct {
	GlobalAddress  string `mapconv:"GlobalAddress" validate:"ipv4"`
	PrivateAddress string `mapconv:"PrivateAddress" validate:"ipv4"`
	Description    string
}

// Validate validates by field tags
func (o *VPCRouterStaticNAT) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterStaticNAT) setDefaults() interface{} {
	return &struct {
		GlobalAddress  string `mapconv:"GlobalAddress" validate:"ipv4"`
		PrivateAddress string `mapconv:"PrivateAddress" validate:"ipv4"`
		Description    string
	}{
		GlobalAddress:  o.GlobalAddress,
		PrivateAddress: o.PrivateAddress,
		Description:    o.Description,
	}
}

// GetGlobalAddress returns value of GlobalAddress
func (o *VPCRouterStaticNAT) GetGlobalAddress() string {
	return o.GlobalAddress
}

// SetGlobalAddress sets value to GlobalAddress
func (o *VPCRouterStaticNAT) SetGlobalAddress(v string) {
	o.GlobalAddress = v
}

// GetPrivateAddress returns value of PrivateAddress
func (o *VPCRouterStaticNAT) GetPrivateAddress() string {
	return o.PrivateAddress
}

// SetPrivateAddress sets value to PrivateAddress
func (o *VPCRouterStaticNAT) SetPrivateAddress(v string) {
	o.PrivateAddress = v
}

// GetDescription returns value of Description
func (o *VPCRouterStaticNAT) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *VPCRouterStaticNAT) SetDescription(v string) {
	o.Description = v
}

/*************************************************
* VPCRouterFirewall
*************************************************/

// VPCRouterFirewall represents API parameter/response structure
type VPCRouterFirewall struct {
	Send    []*VPCRouterFirewallRule
	Receive []*VPCRouterFirewallRule
}

// Validate validates by field tags
func (o *VPCRouterFirewall) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterFirewall) setDefaults() interface{} {
	return &struct {
		Send    []*VPCRouterFirewallRule
		Receive []*VPCRouterFirewallRule
	}{
		Send:    o.Send,
		Receive: o.Receive,
	}
}

// GetSend returns value of Send
func (o *VPCRouterFirewall) GetSend() []*VPCRouterFirewallRule {
	return o.Send
}

// SetSend sets value to Send
func (o *VPCRouterFirewall) SetSend(v []*VPCRouterFirewallRule) {
	o.Send = v
}

// GetReceive returns value of Receive
func (o *VPCRouterFirewall) GetReceive() []*VPCRouterFirewallRule {
	return o.Receive
}

// SetReceive sets value to Receive
func (o *VPCRouterFirewall) SetReceive(v []*VPCRouterFirewallRule) {
	o.Receive = v
}

/*************************************************
* VPCRouterFirewallRule
*************************************************/

// VPCRouterFirewallRule represents API parameter/response structure
type VPCRouterFirewallRule struct {
	Protocol           types.Protocol
	SourceNetwork      types.VPCFirewallNetwork
	SourcePort         types.VPCFirewallPort
	DestinationNetwork types.VPCFirewallNetwork
	DestinationPort    types.VPCFirewallPort
	Action             types.Action
	Logging            types.StringFlag
	Description        string
}

// Validate validates by field tags
func (o *VPCRouterFirewallRule) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterFirewallRule) setDefaults() interface{} {
	return &struct {
		Protocol           types.Protocol
		SourceNetwork      types.VPCFirewallNetwork
		SourcePort         types.VPCFirewallPort
		DestinationNetwork types.VPCFirewallNetwork
		DestinationPort    types.VPCFirewallPort
		Action             types.Action
		Logging            types.StringFlag
		Description        string
	}{
		Protocol:           o.Protocol,
		SourceNetwork:      o.SourceNetwork,
		SourcePort:         o.SourcePort,
		DestinationNetwork: o.DestinationNetwork,
		DestinationPort:    o.DestinationPort,
		Action:             o.Action,
		Logging:            o.Logging,
		Description:        o.Description,
	}
}

// GetProtocol returns value of Protocol
func (o *VPCRouterFirewallRule) GetProtocol() types.Protocol {
	return o.Protocol
}

// SetProtocol sets value to Protocol
func (o *VPCRouterFirewallRule) SetProtocol(v types.Protocol) {
	o.Protocol = v
}

// GetSourceNetwork returns value of SourceNetwork
func (o *VPCRouterFirewallRule) GetSourceNetwork() types.VPCFirewallNetwork {
	return o.SourceNetwork
}

// SetSourceNetwork sets value to SourceNetwork
func (o *VPCRouterFirewallRule) SetSourceNetwork(v types.VPCFirewallNetwork) {
	o.SourceNetwork = v
}

// GetSourcePort returns value of SourcePort
func (o *VPCRouterFirewallRule) GetSourcePort() types.VPCFirewallPort {
	return o.SourcePort
}

// SetSourcePort sets value to SourcePort
func (o *VPCRouterFirewallRule) SetSourcePort(v types.VPCFirewallPort) {
	o.SourcePort = v
}

// GetDestinationNetwork returns value of DestinationNetwork
func (o *VPCRouterFirewallRule) GetDestinationNetwork() types.VPCFirewallNetwork {
	return o.DestinationNetwork
}

// SetDestinationNetwork sets value to DestinationNetwork
func (o *VPCRouterFirewallRule) SetDestinationNetwork(v types.VPCFirewallNetwork) {
	o.DestinationNetwork = v
}

// GetDestinationPort returns value of DestinationPort
func (o *VPCRouterFirewallRule) GetDestinationPort() types.VPCFirewallPort {
	return o.DestinationPort
}

// SetDestinationPort sets value to DestinationPort
func (o *VPCRouterFirewallRule) SetDestinationPort(v types.VPCFirewallPort) {
	o.DestinationPort = v
}

// GetAction returns value of Action
func (o *VPCRouterFirewallRule) GetAction() types.Action {
	return o.Action
}

// SetAction sets value to Action
func (o *VPCRouterFirewallRule) SetAction(v types.Action) {
	o.Action = v
}

// GetLogging returns value of Logging
func (o *VPCRouterFirewallRule) GetLogging() types.StringFlag {
	return o.Logging
}

// SetLogging sets value to Logging
func (o *VPCRouterFirewallRule) SetLogging(v types.StringFlag) {
	o.Logging = v
}

// GetDescription returns value of Description
func (o *VPCRouterFirewallRule) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *VPCRouterFirewallRule) SetDescription(v string) {
	o.Description = v
}

/*************************************************
* VPCRouterDHCPServer
*************************************************/

// VPCRouterDHCPServer represents API parameter/response structure
type VPCRouterDHCPServer struct {
	Interface  string
	RangeStart string   `validate:"ipv4"`
	RangeStop  string   `validate:"ipv4"`
	DNSServers []string `validate:"dive,ipv4"`
}

// Validate validates by field tags
func (o *VPCRouterDHCPServer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterDHCPServer) setDefaults() interface{} {
	return &struct {
		Interface  string
		RangeStart string   `validate:"ipv4"`
		RangeStop  string   `validate:"ipv4"`
		DNSServers []string `validate:"dive,ipv4"`
	}{
		Interface:  o.Interface,
		RangeStart: o.RangeStart,
		RangeStop:  o.RangeStop,
		DNSServers: o.DNSServers,
	}
}

// GetInterface returns value of Interface
func (o *VPCRouterDHCPServer) GetInterface() string {
	return o.Interface
}

// SetInterface sets value to Interface
func (o *VPCRouterDHCPServer) SetInterface(v string) {
	o.Interface = v
}

// GetRangeStart returns value of RangeStart
func (o *VPCRouterDHCPServer) GetRangeStart() string {
	return o.RangeStart
}

// SetRangeStart sets value to RangeStart
func (o *VPCRouterDHCPServer) SetRangeStart(v string) {
	o.RangeStart = v
}

// GetRangeStop returns value of RangeStop
func (o *VPCRouterDHCPServer) GetRangeStop() string {
	return o.RangeStop
}

// SetRangeStop sets value to RangeStop
func (o *VPCRouterDHCPServer) SetRangeStop(v string) {
	o.RangeStop = v
}

// GetDNSServers returns value of DNSServers
func (o *VPCRouterDHCPServer) GetDNSServers() []string {
	return o.DNSServers
}

// SetDNSServers sets value to DNSServers
func (o *VPCRouterDHCPServer) SetDNSServers(v []string) {
	o.DNSServers = v
}

/*************************************************
* VPCRouterDHCPStaticMapping
*************************************************/

// VPCRouterDHCPStaticMapping represents API parameter/response structure
type VPCRouterDHCPStaticMapping struct {
	MACAddress string
	IPAddress  string `validate:"ipv4"`
}

// Validate validates by field tags
func (o *VPCRouterDHCPStaticMapping) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterDHCPStaticMapping) setDefaults() interface{} {
	return &struct {
		MACAddress string
		IPAddress  string `validate:"ipv4"`
	}{
		MACAddress: o.MACAddress,
		IPAddress:  o.IPAddress,
	}
}

// GetMACAddress returns value of MACAddress
func (o *VPCRouterDHCPStaticMapping) GetMACAddress() string {
	return o.MACAddress
}

// SetMACAddress sets value to MACAddress
func (o *VPCRouterDHCPStaticMapping) SetMACAddress(v string) {
	o.MACAddress = v
}

// GetIPAddress returns value of IPAddress
func (o *VPCRouterDHCPStaticMapping) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *VPCRouterDHCPStaticMapping) SetIPAddress(v string) {
	o.IPAddress = v
}

/*************************************************
* VPCRouterPPTPServer
*************************************************/

// VPCRouterPPTPServer represents API parameter/response structure
type VPCRouterPPTPServer struct {
	RangeStart string `validate:"ipv4"`
	RangeStop  string `validate:"ipv4"`
}

// Validate validates by field tags
func (o *VPCRouterPPTPServer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterPPTPServer) setDefaults() interface{} {
	return &struct {
		RangeStart string `validate:"ipv4"`
		RangeStop  string `validate:"ipv4"`
	}{
		RangeStart: o.RangeStart,
		RangeStop:  o.RangeStop,
	}
}

// GetRangeStart returns value of RangeStart
func (o *VPCRouterPPTPServer) GetRangeStart() string {
	return o.RangeStart
}

// SetRangeStart sets value to RangeStart
func (o *VPCRouterPPTPServer) SetRangeStart(v string) {
	o.RangeStart = v
}

// GetRangeStop returns value of RangeStop
func (o *VPCRouterPPTPServer) GetRangeStop() string {
	return o.RangeStop
}

// SetRangeStop sets value to RangeStop
func (o *VPCRouterPPTPServer) SetRangeStop(v string) {
	o.RangeStop = v
}

/*************************************************
* VPCRouterL2TPIPsecServer
*************************************************/

// VPCRouterL2TPIPsecServer represents API parameter/response structure
type VPCRouterL2TPIPsecServer struct {
	RangeStart      string `validate:"ipv4"`
	RangeStop       string `validate:"ipv4"`
	PreSharedSecret string
}

// Validate validates by field tags
func (o *VPCRouterL2TPIPsecServer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterL2TPIPsecServer) setDefaults() interface{} {
	return &struct {
		RangeStart      string `validate:"ipv4"`
		RangeStop       string `validate:"ipv4"`
		PreSharedSecret string
	}{
		RangeStart:      o.RangeStart,
		RangeStop:       o.RangeStop,
		PreSharedSecret: o.PreSharedSecret,
	}
}

// GetRangeStart returns value of RangeStart
func (o *VPCRouterL2TPIPsecServer) GetRangeStart() string {
	return o.RangeStart
}

// SetRangeStart sets value to RangeStart
func (o *VPCRouterL2TPIPsecServer) SetRangeStart(v string) {
	o.RangeStart = v
}

// GetRangeStop returns value of RangeStop
func (o *VPCRouterL2TPIPsecServer) GetRangeStop() string {
	return o.RangeStop
}

// SetRangeStop sets value to RangeStop
func (o *VPCRouterL2TPIPsecServer) SetRangeStop(v string) {
	o.RangeStop = v
}

// GetPreSharedSecret returns value of PreSharedSecret
func (o *VPCRouterL2TPIPsecServer) GetPreSharedSecret() string {
	return o.PreSharedSecret
}

// SetPreSharedSecret sets value to PreSharedSecret
func (o *VPCRouterL2TPIPsecServer) SetPreSharedSecret(v string) {
	o.PreSharedSecret = v
}

/*************************************************
* VPCRouterRemoteAccessUser
*************************************************/

// VPCRouterRemoteAccessUser represents API parameter/response structure
type VPCRouterRemoteAccessUser struct {
	UserName string
	Password string
}

// Validate validates by field tags
func (o *VPCRouterRemoteAccessUser) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterRemoteAccessUser) setDefaults() interface{} {
	return &struct {
		UserName string
		Password string
	}{
		UserName: o.UserName,
		Password: o.Password,
	}
}

// GetUserName returns value of UserName
func (o *VPCRouterRemoteAccessUser) GetUserName() string {
	return o.UserName
}

// SetUserName sets value to UserName
func (o *VPCRouterRemoteAccessUser) SetUserName(v string) {
	o.UserName = v
}

// GetPassword returns value of Password
func (o *VPCRouterRemoteAccessUser) GetPassword() string {
	return o.Password
}

// SetPassword sets value to Password
func (o *VPCRouterRemoteAccessUser) SetPassword(v string) {
	o.Password = v
}

/*************************************************
* VPCRouterSiteToSiteIPsecVPN
*************************************************/

// VPCRouterSiteToSiteIPsecVPN represents API parameter/response structure
type VPCRouterSiteToSiteIPsecVPN struct {
	Peer            string
	PreSharedSecret string
	RemoteID        string
	Routes          []string
	LocalPrefix     []string
}

// Validate validates by field tags
func (o *VPCRouterSiteToSiteIPsecVPN) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterSiteToSiteIPsecVPN) setDefaults() interface{} {
	return &struct {
		Peer            string
		PreSharedSecret string
		RemoteID        string
		Routes          []string
		LocalPrefix     []string
	}{
		Peer:            o.Peer,
		PreSharedSecret: o.PreSharedSecret,
		RemoteID:        o.RemoteID,
		Routes:          o.Routes,
		LocalPrefix:     o.LocalPrefix,
	}
}

// GetPeer returns value of Peer
func (o *VPCRouterSiteToSiteIPsecVPN) GetPeer() string {
	return o.Peer
}

// SetPeer sets value to Peer
func (o *VPCRouterSiteToSiteIPsecVPN) SetPeer(v string) {
	o.Peer = v
}

// GetPreSharedSecret returns value of PreSharedSecret
func (o *VPCRouterSiteToSiteIPsecVPN) GetPreSharedSecret() string {
	return o.PreSharedSecret
}

// SetPreSharedSecret sets value to PreSharedSecret
func (o *VPCRouterSiteToSiteIPsecVPN) SetPreSharedSecret(v string) {
	o.PreSharedSecret = v
}

// GetRemoteID returns value of RemoteID
func (o *VPCRouterSiteToSiteIPsecVPN) GetRemoteID() string {
	return o.RemoteID
}

// SetRemoteID sets value to RemoteID
func (o *VPCRouterSiteToSiteIPsecVPN) SetRemoteID(v string) {
	o.RemoteID = v
}

// GetRoutes returns value of Routes
func (o *VPCRouterSiteToSiteIPsecVPN) GetRoutes() []string {
	return o.Routes
}

// SetRoutes sets value to Routes
func (o *VPCRouterSiteToSiteIPsecVPN) SetRoutes(v []string) {
	o.Routes = v
}

// GetLocalPrefix returns value of LocalPrefix
func (o *VPCRouterSiteToSiteIPsecVPN) GetLocalPrefix() []string {
	return o.LocalPrefix
}

// SetLocalPrefix sets value to LocalPrefix
func (o *VPCRouterSiteToSiteIPsecVPN) SetLocalPrefix(v []string) {
	o.LocalPrefix = v
}

/*************************************************
* VPCRouterStaticRoute
*************************************************/

// VPCRouterStaticRoute represents API parameter/response structure
type VPCRouterStaticRoute struct {
	Prefix  string
	NextHop string
}

// Validate validates by field tags
func (o *VPCRouterStaticRoute) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterStaticRoute) setDefaults() interface{} {
	return &struct {
		Prefix  string
		NextHop string
	}{
		Prefix:  o.Prefix,
		NextHop: o.NextHop,
	}
}

// GetPrefix returns value of Prefix
func (o *VPCRouterStaticRoute) GetPrefix() string {
	return o.Prefix
}

// SetPrefix sets value to Prefix
func (o *VPCRouterStaticRoute) SetPrefix(v string) {
	o.Prefix = v
}

// GetNextHop returns value of NextHop
func (o *VPCRouterStaticRoute) GetNextHop() string {
	return o.NextHop
}

// SetNextHop sets value to NextHop
func (o *VPCRouterStaticRoute) SetNextHop(v string) {
	o.NextHop = v
}

/*************************************************
* VPCRouterInterface
*************************************************/

// VPCRouterInterface represents API parameter/response structure
type VPCRouterInterface struct {
	ID                              types.ID
	MACAddress                      string
	IPAddress                       string
	UserIPAddress                   string
	HostName                        string
	SwitchID                        types.ID           `mapconv:"Switch.ID"`
	SwitchName                      string             `mapconv:"Switch.Name"`
	SwitchScope                     types.EScope       `mapconv:"Switch.Scope"`
	UserSubnetDefaultRoute          string             `mapconv:"Switch.UserSubnet.DefaultRoute"`
	UserSubnetNetworkMaskLen        int                `mapconv:"Switch.UserSubnet.NetworkMaskLen"`
	SubnetDefaultRoute              string             `mapconv:"Switch.Subnet.DefaultRoute"`
	SubnetNetworkMaskLen            int                `mapconv:"Switch.Subnet.NetworkMaskLen"`
	SubnetNetworkAddress            string             `mapconv:"Switch.Subnet.NetworkAddress"`
	SubnetBandWidthMbps             int                `mapconv:"Switch.Subnet.Internet.BandWidthMbps"`
	PacketFilterID                  string             `mapconv:"PacketFilter.ID"`
	PacketFilterName                string             `mapconv:"PacketFilter.Name"`
	PacketFilterRequiredHostVersion types.StringNumber `mapconv:"PacketFilter.RequiredHostVersionn"`
	UpstreamType                    types.EUpstreamNetworkType
	Index                           int `mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *VPCRouterInterface) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterInterface) setDefaults() interface{} {
	return &struct {
		ID                              types.ID
		MACAddress                      string
		IPAddress                       string
		UserIPAddress                   string
		HostName                        string
		SwitchID                        types.ID           `mapconv:"Switch.ID"`
		SwitchName                      string             `mapconv:"Switch.Name"`
		SwitchScope                     types.EScope       `mapconv:"Switch.Scope"`
		UserSubnetDefaultRoute          string             `mapconv:"Switch.UserSubnet.DefaultRoute"`
		UserSubnetNetworkMaskLen        int                `mapconv:"Switch.UserSubnet.NetworkMaskLen"`
		SubnetDefaultRoute              string             `mapconv:"Switch.Subnet.DefaultRoute"`
		SubnetNetworkMaskLen            int                `mapconv:"Switch.Subnet.NetworkMaskLen"`
		SubnetNetworkAddress            string             `mapconv:"Switch.Subnet.NetworkAddress"`
		SubnetBandWidthMbps             int                `mapconv:"Switch.Subnet.Internet.BandWidthMbps"`
		PacketFilterID                  string             `mapconv:"PacketFilter.ID"`
		PacketFilterName                string             `mapconv:"PacketFilter.Name"`
		PacketFilterRequiredHostVersion types.StringNumber `mapconv:"PacketFilter.RequiredHostVersionn"`
		UpstreamType                    types.EUpstreamNetworkType
		Index                           int `mapconv:",omitempty"`
	}{
		ID:                              o.ID,
		MACAddress:                      o.MACAddress,
		IPAddress:                       o.IPAddress,
		UserIPAddress:                   o.UserIPAddress,
		HostName:                        o.HostName,
		SwitchID:                        o.SwitchID,
		SwitchName:                      o.SwitchName,
		SwitchScope:                     o.SwitchScope,
		UserSubnetDefaultRoute:          o.UserSubnetDefaultRoute,
		UserSubnetNetworkMaskLen:        o.UserSubnetNetworkMaskLen,
		SubnetDefaultRoute:              o.SubnetDefaultRoute,
		SubnetNetworkMaskLen:            o.SubnetNetworkMaskLen,
		SubnetNetworkAddress:            o.SubnetNetworkAddress,
		SubnetBandWidthMbps:             o.SubnetBandWidthMbps,
		PacketFilterID:                  o.PacketFilterID,
		PacketFilterName:                o.PacketFilterName,
		PacketFilterRequiredHostVersion: o.PacketFilterRequiredHostVersion,
		UpstreamType:                    o.UpstreamType,
		Index:                           o.Index,
	}
}

// GetID returns value of ID
func (o *VPCRouterInterface) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *VPCRouterInterface) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *VPCRouterInterface) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *VPCRouterInterface) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *VPCRouterInterface) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *VPCRouterInterface) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetMACAddress returns value of MACAddress
func (o *VPCRouterInterface) GetMACAddress() string {
	return o.MACAddress
}

// SetMACAddress sets value to MACAddress
func (o *VPCRouterInterface) SetMACAddress(v string) {
	o.MACAddress = v
}

// GetIPAddress returns value of IPAddress
func (o *VPCRouterInterface) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *VPCRouterInterface) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetUserIPAddress returns value of UserIPAddress
func (o *VPCRouterInterface) GetUserIPAddress() string {
	return o.UserIPAddress
}

// SetUserIPAddress sets value to UserIPAddress
func (o *VPCRouterInterface) SetUserIPAddress(v string) {
	o.UserIPAddress = v
}

// GetHostName returns value of HostName
func (o *VPCRouterInterface) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *VPCRouterInterface) SetHostName(v string) {
	o.HostName = v
}

// GetSwitchID returns value of SwitchID
func (o *VPCRouterInterface) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *VPCRouterInterface) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetSwitchName returns value of SwitchName
func (o *VPCRouterInterface) GetSwitchName() string {
	return o.SwitchName
}

// SetSwitchName sets value to SwitchName
func (o *VPCRouterInterface) SetSwitchName(v string) {
	o.SwitchName = v
}

// GetSwitchScope returns value of SwitchScope
func (o *VPCRouterInterface) GetSwitchScope() types.EScope {
	return o.SwitchScope
}

// SetSwitchScope sets value to SwitchScope
func (o *VPCRouterInterface) SetSwitchScope(v types.EScope) {
	o.SwitchScope = v
}

// GetUserSubnetDefaultRoute returns value of UserSubnetDefaultRoute
func (o *VPCRouterInterface) GetUserSubnetDefaultRoute() string {
	return o.UserSubnetDefaultRoute
}

// SetUserSubnetDefaultRoute sets value to UserSubnetDefaultRoute
func (o *VPCRouterInterface) SetUserSubnetDefaultRoute(v string) {
	o.UserSubnetDefaultRoute = v
}

// GetUserSubnetNetworkMaskLen returns value of UserSubnetNetworkMaskLen
func (o *VPCRouterInterface) GetUserSubnetNetworkMaskLen() int {
	return o.UserSubnetNetworkMaskLen
}

// SetUserSubnetNetworkMaskLen sets value to UserSubnetNetworkMaskLen
func (o *VPCRouterInterface) SetUserSubnetNetworkMaskLen(v int) {
	o.UserSubnetNetworkMaskLen = v
}

// GetSubnetDefaultRoute returns value of SubnetDefaultRoute
func (o *VPCRouterInterface) GetSubnetDefaultRoute() string {
	return o.SubnetDefaultRoute
}

// SetSubnetDefaultRoute sets value to SubnetDefaultRoute
func (o *VPCRouterInterface) SetSubnetDefaultRoute(v string) {
	o.SubnetDefaultRoute = v
}

// GetSubnetNetworkMaskLen returns value of SubnetNetworkMaskLen
func (o *VPCRouterInterface) GetSubnetNetworkMaskLen() int {
	return o.SubnetNetworkMaskLen
}

// SetSubnetNetworkMaskLen sets value to SubnetNetworkMaskLen
func (o *VPCRouterInterface) SetSubnetNetworkMaskLen(v int) {
	o.SubnetNetworkMaskLen = v
}

// GetSubnetNetworkAddress returns value of SubnetNetworkAddress
func (o *VPCRouterInterface) GetSubnetNetworkAddress() string {
	return o.SubnetNetworkAddress
}

// SetSubnetNetworkAddress sets value to SubnetNetworkAddress
func (o *VPCRouterInterface) SetSubnetNetworkAddress(v string) {
	o.SubnetNetworkAddress = v
}

// GetSubnetBandWidthMbps returns value of SubnetBandWidthMbps
func (o *VPCRouterInterface) GetSubnetBandWidthMbps() int {
	return o.SubnetBandWidthMbps
}

// SetSubnetBandWidthMbps sets value to SubnetBandWidthMbps
func (o *VPCRouterInterface) SetSubnetBandWidthMbps(v int) {
	o.SubnetBandWidthMbps = v
}

// GetPacketFilterID returns value of PacketFilterID
func (o *VPCRouterInterface) GetPacketFilterID() string {
	return o.PacketFilterID
}

// SetPacketFilterID sets value to PacketFilterID
func (o *VPCRouterInterface) SetPacketFilterID(v string) {
	o.PacketFilterID = v
}

// GetPacketFilterName returns value of PacketFilterName
func (o *VPCRouterInterface) GetPacketFilterName() string {
	return o.PacketFilterName
}

// SetPacketFilterName sets value to PacketFilterName
func (o *VPCRouterInterface) SetPacketFilterName(v string) {
	o.PacketFilterName = v
}

// GetPacketFilterRequiredHostVersion returns value of PacketFilterRequiredHostVersion
func (o *VPCRouterInterface) GetPacketFilterRequiredHostVersion() types.StringNumber {
	return o.PacketFilterRequiredHostVersion
}

// SetPacketFilterRequiredHostVersion sets value to PacketFilterRequiredHostVersion
func (o *VPCRouterInterface) SetPacketFilterRequiredHostVersion(v types.StringNumber) {
	o.PacketFilterRequiredHostVersion = v
}

// GetUpstreamType returns value of UpstreamType
func (o *VPCRouterInterface) GetUpstreamType() types.EUpstreamNetworkType {
	return o.UpstreamType
}

// SetUpstreamType sets value to UpstreamType
func (o *VPCRouterInterface) SetUpstreamType(v types.EUpstreamNetworkType) {
	o.UpstreamType = v
}

// GetIndex returns value of Index
func (o *VPCRouterInterface) GetIndex() int {
	return o.Index
}

// SetIndex sets value to Index
func (o *VPCRouterInterface) SetIndex(v int) {
	o.Index = v
}

/*************************************************
* VPCRouterCreateRequest
*************************************************/

// VPCRouterCreateRequest represents API parameter/response structure
type VPCRouterCreateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID                  `mapconv:"Icon.ID"`
	PlanID      types.ID                  `mapconv:"Plan.ID"`
	Switch      *ApplianceConnectedSwitch `json:",omitempty" mapconv:"Remark.Switch,recursive"`
	IPAddresses []string                  `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
	Settings    *VPCRouterSetting         `mapconv:",omitempty,recursive"`
}

// Validate validates by field tags
func (o *VPCRouterCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterCreateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID                  `mapconv:"Icon.ID"`
		PlanID      types.ID                  `mapconv:"Plan.ID"`
		Switch      *ApplianceConnectedSwitch `json:",omitempty" mapconv:"Remark.Switch,recursive"`
		IPAddresses []string                  `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
		Settings    *VPCRouterSetting         `mapconv:",omitempty,recursive"`
		Class       string
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
		PlanID:      o.PlanID,
		Switch:      o.Switch,
		IPAddresses: o.IPAddresses,
		Settings:    o.Settings,
		Class:       "vpcrouter",
	}
}

// GetName returns value of Name
func (o *VPCRouterCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *VPCRouterCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *VPCRouterCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *VPCRouterCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *VPCRouterCreateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *VPCRouterCreateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *VPCRouterCreateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *VPCRouterCreateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *VPCRouterCreateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *VPCRouterCreateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *VPCRouterCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *VPCRouterCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetPlanID returns value of PlanID
func (o *VPCRouterCreateRequest) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *VPCRouterCreateRequest) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetSwitch returns value of Switch
func (o *VPCRouterCreateRequest) GetSwitch() *ApplianceConnectedSwitch {
	return o.Switch
}

// SetSwitch sets value to Switch
func (o *VPCRouterCreateRequest) SetSwitch(v *ApplianceConnectedSwitch) {
	o.Switch = v
}

// GetIPAddresses returns value of IPAddresses
func (o *VPCRouterCreateRequest) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *VPCRouterCreateRequest) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetSettings returns value of Settings
func (o *VPCRouterCreateRequest) GetSettings() *VPCRouterSetting {
	return o.Settings
}

// SetSettings sets value to Settings
func (o *VPCRouterCreateRequest) SetSettings(v *VPCRouterSetting) {
	o.Settings = v
}

/*************************************************
* ApplianceConnectedSwitch
*************************************************/

// ApplianceConnectedSwitch represents API parameter/response structure
type ApplianceConnectedSwitch struct {
	ID    types.ID
	Scope types.EScope
}

// Validate validates by field tags
func (o *ApplianceConnectedSwitch) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *ApplianceConnectedSwitch) setDefaults() interface{} {
	return &struct {
		ID    types.ID
		Scope types.EScope
	}{
		ID:    o.ID,
		Scope: o.Scope,
	}
}

// GetID returns value of ID
func (o *ApplianceConnectedSwitch) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *ApplianceConnectedSwitch) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *ApplianceConnectedSwitch) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *ApplianceConnectedSwitch) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *ApplianceConnectedSwitch) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *ApplianceConnectedSwitch) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetScope returns value of Scope
func (o *ApplianceConnectedSwitch) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *ApplianceConnectedSwitch) SetScope(v types.EScope) {
	o.Scope = v
}

/*************************************************
* VPCRouterUpdateRequest
*************************************************/

// VPCRouterUpdateRequest represents API parameter/response structure
type VPCRouterUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        types.Tags
	IconID      types.ID          `mapconv:"Icon.ID"`
	Settings    *VPCRouterSetting `mapconv:",omitempty,recursive"`
}

// Validate validates by field tags
func (o *VPCRouterUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *VPCRouterUpdateRequest) setDefaults() interface{} {
	return &struct {
		Name        string `validate:"required"`
		Description string `validate:"min=0,max=512"`
		Tags        types.Tags
		IconID      types.ID          `mapconv:"Icon.ID"`
		Settings    *VPCRouterSetting `mapconv:",omitempty,recursive"`
	}{
		Name:        o.Name,
		Description: o.Description,
		Tags:        o.Tags,
		IconID:      o.IconID,
		Settings:    o.Settings,
	}
}

// GetName returns value of Name
func (o *VPCRouterUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *VPCRouterUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *VPCRouterUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *VPCRouterUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *VPCRouterUpdateRequest) GetTags() types.Tags {
	return o.Tags
}

// SetTags sets value to Tags
func (o *VPCRouterUpdateRequest) SetTags(v types.Tags) {
	o.Tags = v
}

// HasTag 指定のタグが存在する場合trueを返す
func (o *VPCRouterUpdateRequest) HasTag(tag string) bool {
	return accessor.HasTag(o, tag)
}

// AppendTag 指定のタグを追加
func (o *VPCRouterUpdateRequest) AppendTag(tag string) {
	accessor.AppendTag(o, tag)
}

// RemoveTag 指定のタグを削除
func (o *VPCRouterUpdateRequest) RemoveTag(tag string) {
	accessor.RemoveTag(o, tag)
}

// ClearTags タグを全クリア
func (o *VPCRouterUpdateRequest) ClearTags() {
	accessor.ClearTags(o)
}

// GetIconID returns value of IconID
func (o *VPCRouterUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *VPCRouterUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetSettings returns value of Settings
func (o *VPCRouterUpdateRequest) GetSettings() *VPCRouterSetting {
	return o.Settings
}

// SetSettings sets value to Settings
func (o *VPCRouterUpdateRequest) SetSettings(v *VPCRouterSetting) {
	o.Settings = v
}

/*************************************************
* WebAccel
*************************************************/

// WebAccel represents API parameter/response structure
type WebAccel struct {
	ID                 types.ID
	Name               string `validate:"required"`
	DomainType         types.EWebAccelDomainType
	Domain             string
	Subdomain          string
	ASCIIDomain        string
	Origin             string
	HostHeader         string
	Status             types.EWebAccelStatus
	HasCertificate     bool
	HasOldCertificate  bool
	GibSentInLastWeek  int64
	CertValidNotBefore int64
	CertValidNotAfter  int64
	CreatedAt          time.Time
}

// Validate validates by field tags
func (o *WebAccel) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccel) setDefaults() interface{} {
	return &struct {
		ID                 types.ID
		Name               string `validate:"required"`
		DomainType         types.EWebAccelDomainType
		Domain             string
		Subdomain          string
		ASCIIDomain        string
		Origin             string
		HostHeader         string
		Status             types.EWebAccelStatus
		HasCertificate     bool
		HasOldCertificate  bool
		GibSentInLastWeek  int64
		CertValidNotBefore int64
		CertValidNotAfter  int64
		CreatedAt          time.Time
	}{
		ID:                 o.ID,
		Name:               o.Name,
		DomainType:         o.DomainType,
		Domain:             o.Domain,
		Subdomain:          o.Subdomain,
		ASCIIDomain:        o.ASCIIDomain,
		Origin:             o.Origin,
		HostHeader:         o.HostHeader,
		Status:             o.Status,
		HasCertificate:     o.HasCertificate,
		HasOldCertificate:  o.HasOldCertificate,
		GibSentInLastWeek:  o.GibSentInLastWeek,
		CertValidNotBefore: o.CertValidNotBefore,
		CertValidNotAfter:  o.CertValidNotAfter,
		CreatedAt:          o.CreatedAt,
	}
}

// GetID returns value of ID
func (o *WebAccel) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *WebAccel) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *WebAccel) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *WebAccel) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *WebAccel) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *WebAccel) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *WebAccel) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *WebAccel) SetName(v string) {
	o.Name = v
}

// GetDomainType returns value of DomainType
func (o *WebAccel) GetDomainType() types.EWebAccelDomainType {
	return o.DomainType
}

// SetDomainType sets value to DomainType
func (o *WebAccel) SetDomainType(v types.EWebAccelDomainType) {
	o.DomainType = v
}

// GetDomain returns value of Domain
func (o *WebAccel) GetDomain() string {
	return o.Domain
}

// SetDomain sets value to Domain
func (o *WebAccel) SetDomain(v string) {
	o.Domain = v
}

// GetSubdomain returns value of Subdomain
func (o *WebAccel) GetSubdomain() string {
	return o.Subdomain
}

// SetSubdomain sets value to Subdomain
func (o *WebAccel) SetSubdomain(v string) {
	o.Subdomain = v
}

// GetASCIIDomain returns value of ASCIIDomain
func (o *WebAccel) GetASCIIDomain() string {
	return o.ASCIIDomain
}

// SetASCIIDomain sets value to ASCIIDomain
func (o *WebAccel) SetASCIIDomain(v string) {
	o.ASCIIDomain = v
}

// GetOrigin returns value of Origin
func (o *WebAccel) GetOrigin() string {
	return o.Origin
}

// SetOrigin sets value to Origin
func (o *WebAccel) SetOrigin(v string) {
	o.Origin = v
}

// GetHostHeader returns value of HostHeader
func (o *WebAccel) GetHostHeader() string {
	return o.HostHeader
}

// SetHostHeader sets value to HostHeader
func (o *WebAccel) SetHostHeader(v string) {
	o.HostHeader = v
}

// GetStatus returns value of Status
func (o *WebAccel) GetStatus() types.EWebAccelStatus {
	return o.Status
}

// SetStatus sets value to Status
func (o *WebAccel) SetStatus(v types.EWebAccelStatus) {
	o.Status = v
}

// GetHasCertificate returns value of HasCertificate
func (o *WebAccel) GetHasCertificate() bool {
	return o.HasCertificate
}

// SetHasCertificate sets value to HasCertificate
func (o *WebAccel) SetHasCertificate(v bool) {
	o.HasCertificate = v
}

// GetHasOldCertificate returns value of HasOldCertificate
func (o *WebAccel) GetHasOldCertificate() bool {
	return o.HasOldCertificate
}

// SetHasOldCertificate sets value to HasOldCertificate
func (o *WebAccel) SetHasOldCertificate(v bool) {
	o.HasOldCertificate = v
}

// GetGibSentInLastWeek returns value of GibSentInLastWeek
func (o *WebAccel) GetGibSentInLastWeek() int64 {
	return o.GibSentInLastWeek
}

// SetGibSentInLastWeek sets value to GibSentInLastWeek
func (o *WebAccel) SetGibSentInLastWeek(v int64) {
	o.GibSentInLastWeek = v
}

// GetCertValidNotBefore returns value of CertValidNotBefore
func (o *WebAccel) GetCertValidNotBefore() int64 {
	return o.CertValidNotBefore
}

// SetCertValidNotBefore sets value to CertValidNotBefore
func (o *WebAccel) SetCertValidNotBefore(v int64) {
	o.CertValidNotBefore = v
}

// GetCertValidNotAfter returns value of CertValidNotAfter
func (o *WebAccel) GetCertValidNotAfter() int64 {
	return o.CertValidNotAfter
}

// SetCertValidNotAfter sets value to CertValidNotAfter
func (o *WebAccel) SetCertValidNotAfter(v int64) {
	o.CertValidNotAfter = v
}

// GetCreatedAt returns value of CreatedAt
func (o *WebAccel) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *WebAccel) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

/*************************************************
* WebAccelCerts
*************************************************/

// WebAccelCerts represents API parameter/response structure
type WebAccelCerts struct {
	Current *WebAccelCurrentCert
	Old     []*WebAccelOldCerts
}

// Validate validates by field tags
func (o *WebAccelCerts) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelCerts) setDefaults() interface{} {
	return &struct {
		Current *WebAccelCurrentCert
		Old     []*WebAccelOldCerts
	}{
		Current: o.Current,
		Old:     o.Old,
	}
}

// GetCurrent returns value of Current
func (o *WebAccelCerts) GetCurrent() *WebAccelCurrentCert {
	return o.Current
}

// SetCurrent sets value to Current
func (o *WebAccelCerts) SetCurrent(v *WebAccelCurrentCert) {
	o.Current = v
}

// GetOld returns value of Old
func (o *WebAccelCerts) GetOld() []*WebAccelOldCerts {
	return o.Old
}

// SetOld sets value to Old
func (o *WebAccelCerts) SetOld(v []*WebAccelOldCerts) {
	o.Old = v
}

/*************************************************
* WebAccelCurrentCert
*************************************************/

// WebAccelCurrentCert represents API parameter/response structure
type WebAccelCurrentCert struct {
	ID                types.ID
	SiteID            types.ID
	CertificateChain  string
	Key               string
	CreatedAt         time.Time
	UpdatedAt         time.Time
	SerialNumber      string
	NotBefore         int64
	NotAfter          int64
	Issuer            *WebAccelCertIssuer  `mapconv:",recursive"`
	Subject           *WebAccelCertSubject `mapconv:",recursive"`
	DNSNames          []string
	SHA256Fingerprint string
}

// Validate validates by field tags
func (o *WebAccelCurrentCert) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelCurrentCert) setDefaults() interface{} {
	return &struct {
		ID                types.ID
		SiteID            types.ID
		CertificateChain  string
		Key               string
		CreatedAt         time.Time
		UpdatedAt         time.Time
		SerialNumber      string
		NotBefore         int64
		NotAfter          int64
		Issuer            *WebAccelCertIssuer  `mapconv:",recursive"`
		Subject           *WebAccelCertSubject `mapconv:",recursive"`
		DNSNames          []string
		SHA256Fingerprint string
	}{
		ID:                o.ID,
		SiteID:            o.SiteID,
		CertificateChain:  o.CertificateChain,
		Key:               o.Key,
		CreatedAt:         o.CreatedAt,
		UpdatedAt:         o.UpdatedAt,
		SerialNumber:      o.SerialNumber,
		NotBefore:         o.NotBefore,
		NotAfter:          o.NotAfter,
		Issuer:            o.Issuer,
		Subject:           o.Subject,
		DNSNames:          o.DNSNames,
		SHA256Fingerprint: o.SHA256Fingerprint,
	}
}

// GetID returns value of ID
func (o *WebAccelCurrentCert) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *WebAccelCurrentCert) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *WebAccelCurrentCert) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *WebAccelCurrentCert) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *WebAccelCurrentCert) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *WebAccelCurrentCert) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetSiteID returns value of SiteID
func (o *WebAccelCurrentCert) GetSiteID() types.ID {
	return o.SiteID
}

// SetSiteID sets value to SiteID
func (o *WebAccelCurrentCert) SetSiteID(v types.ID) {
	o.SiteID = v
}

// GetCertificateChain returns value of CertificateChain
func (o *WebAccelCurrentCert) GetCertificateChain() string {
	return o.CertificateChain
}

// SetCertificateChain sets value to CertificateChain
func (o *WebAccelCurrentCert) SetCertificateChain(v string) {
	o.CertificateChain = v
}

// GetKey returns value of Key
func (o *WebAccelCurrentCert) GetKey() string {
	return o.Key
}

// SetKey sets value to Key
func (o *WebAccelCurrentCert) SetKey(v string) {
	o.Key = v
}

// GetCreatedAt returns value of CreatedAt
func (o *WebAccelCurrentCert) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *WebAccelCurrentCert) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns value of UpdatedAt
func (o *WebAccelCurrentCert) GetUpdatedAt() time.Time {
	return o.UpdatedAt
}

// SetUpdatedAt sets value to UpdatedAt
func (o *WebAccelCurrentCert) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetSerialNumber returns value of SerialNumber
func (o *WebAccelCurrentCert) GetSerialNumber() string {
	return o.SerialNumber
}

// SetSerialNumber sets value to SerialNumber
func (o *WebAccelCurrentCert) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetNotBefore returns value of NotBefore
func (o *WebAccelCurrentCert) GetNotBefore() int64 {
	return o.NotBefore
}

// SetNotBefore sets value to NotBefore
func (o *WebAccelCurrentCert) SetNotBefore(v int64) {
	o.NotBefore = v
}

// GetNotAfter returns value of NotAfter
func (o *WebAccelCurrentCert) GetNotAfter() int64 {
	return o.NotAfter
}

// SetNotAfter sets value to NotAfter
func (o *WebAccelCurrentCert) SetNotAfter(v int64) {
	o.NotAfter = v
}

// GetIssuer returns value of Issuer
func (o *WebAccelCurrentCert) GetIssuer() *WebAccelCertIssuer {
	return o.Issuer
}

// SetIssuer sets value to Issuer
func (o *WebAccelCurrentCert) SetIssuer(v *WebAccelCertIssuer) {
	o.Issuer = v
}

// GetSubject returns value of Subject
func (o *WebAccelCurrentCert) GetSubject() *WebAccelCertSubject {
	return o.Subject
}

// SetSubject sets value to Subject
func (o *WebAccelCurrentCert) SetSubject(v *WebAccelCertSubject) {
	o.Subject = v
}

// GetDNSNames returns value of DNSNames
func (o *WebAccelCurrentCert) GetDNSNames() []string {
	return o.DNSNames
}

// SetDNSNames sets value to DNSNames
func (o *WebAccelCurrentCert) SetDNSNames(v []string) {
	o.DNSNames = v
}

// GetSHA256Fingerprint returns value of SHA256Fingerprint
func (o *WebAccelCurrentCert) GetSHA256Fingerprint() string {
	return o.SHA256Fingerprint
}

// SetSHA256Fingerprint sets value to SHA256Fingerprint
func (o *WebAccelCurrentCert) SetSHA256Fingerprint(v string) {
	o.SHA256Fingerprint = v
}

/*************************************************
* WebAccelCertIssuer
*************************************************/

// WebAccelCertIssuer represents API parameter/response structure
type WebAccelCertIssuer struct {
	Country            string
	Organization       string
	OrganizationalUnit string
	CommonName         string
}

// Validate validates by field tags
func (o *WebAccelCertIssuer) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelCertIssuer) setDefaults() interface{} {
	return &struct {
		Country            string
		Organization       string
		OrganizationalUnit string
		CommonName         string
	}{
		Country:            o.Country,
		Organization:       o.Organization,
		OrganizationalUnit: o.OrganizationalUnit,
		CommonName:         o.CommonName,
	}
}

// GetCountry returns value of Country
func (o *WebAccelCertIssuer) GetCountry() string {
	return o.Country
}

// SetCountry sets value to Country
func (o *WebAccelCertIssuer) SetCountry(v string) {
	o.Country = v
}

// GetOrganization returns value of Organization
func (o *WebAccelCertIssuer) GetOrganization() string {
	return o.Organization
}

// SetOrganization sets value to Organization
func (o *WebAccelCertIssuer) SetOrganization(v string) {
	o.Organization = v
}

// GetOrganizationalUnit returns value of OrganizationalUnit
func (o *WebAccelCertIssuer) GetOrganizationalUnit() string {
	return o.OrganizationalUnit
}

// SetOrganizationalUnit sets value to OrganizationalUnit
func (o *WebAccelCertIssuer) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = v
}

// GetCommonName returns value of CommonName
func (o *WebAccelCertIssuer) GetCommonName() string {
	return o.CommonName
}

// SetCommonName sets value to CommonName
func (o *WebAccelCertIssuer) SetCommonName(v string) {
	o.CommonName = v
}

/*************************************************
* WebAccelCertSubject
*************************************************/

// WebAccelCertSubject represents API parameter/response structure
type WebAccelCertSubject struct {
	Country            string
	Organization       string
	OrganizationalUnit string
	Locality           string
	Province           string
	StreetAddress      string
	PostalCode         string
	SerialNumber       string
	CommonName         string
}

// Validate validates by field tags
func (o *WebAccelCertSubject) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelCertSubject) setDefaults() interface{} {
	return &struct {
		Country            string
		Organization       string
		OrganizationalUnit string
		Locality           string
		Province           string
		StreetAddress      string
		PostalCode         string
		SerialNumber       string
		CommonName         string
	}{
		Country:            o.Country,
		Organization:       o.Organization,
		OrganizationalUnit: o.OrganizationalUnit,
		Locality:           o.Locality,
		Province:           o.Province,
		StreetAddress:      o.StreetAddress,
		PostalCode:         o.PostalCode,
		SerialNumber:       o.SerialNumber,
		CommonName:         o.CommonName,
	}
}

// GetCountry returns value of Country
func (o *WebAccelCertSubject) GetCountry() string {
	return o.Country
}

// SetCountry sets value to Country
func (o *WebAccelCertSubject) SetCountry(v string) {
	o.Country = v
}

// GetOrganization returns value of Organization
func (o *WebAccelCertSubject) GetOrganization() string {
	return o.Organization
}

// SetOrganization sets value to Organization
func (o *WebAccelCertSubject) SetOrganization(v string) {
	o.Organization = v
}

// GetOrganizationalUnit returns value of OrganizationalUnit
func (o *WebAccelCertSubject) GetOrganizationalUnit() string {
	return o.OrganizationalUnit
}

// SetOrganizationalUnit sets value to OrganizationalUnit
func (o *WebAccelCertSubject) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = v
}

// GetLocality returns value of Locality
func (o *WebAccelCertSubject) GetLocality() string {
	return o.Locality
}

// SetLocality sets value to Locality
func (o *WebAccelCertSubject) SetLocality(v string) {
	o.Locality = v
}

// GetProvince returns value of Province
func (o *WebAccelCertSubject) GetProvince() string {
	return o.Province
}

// SetProvince sets value to Province
func (o *WebAccelCertSubject) SetProvince(v string) {
	o.Province = v
}

// GetStreetAddress returns value of StreetAddress
func (o *WebAccelCertSubject) GetStreetAddress() string {
	return o.StreetAddress
}

// SetStreetAddress sets value to StreetAddress
func (o *WebAccelCertSubject) SetStreetAddress(v string) {
	o.StreetAddress = v
}

// GetPostalCode returns value of PostalCode
func (o *WebAccelCertSubject) GetPostalCode() string {
	return o.PostalCode
}

// SetPostalCode sets value to PostalCode
func (o *WebAccelCertSubject) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetSerialNumber returns value of SerialNumber
func (o *WebAccelCertSubject) GetSerialNumber() string {
	return o.SerialNumber
}

// SetSerialNumber sets value to SerialNumber
func (o *WebAccelCertSubject) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetCommonName returns value of CommonName
func (o *WebAccelCertSubject) GetCommonName() string {
	return o.CommonName
}

// SetCommonName sets value to CommonName
func (o *WebAccelCertSubject) SetCommonName(v string) {
	o.CommonName = v
}

/*************************************************
* WebAccelOldCerts
*************************************************/

// WebAccelOldCerts represents API parameter/response structure
type WebAccelOldCerts struct {
	ID                types.ID
	SiteID            types.ID
	CertificateChain  string
	Key               string
	CreatedAt         time.Time
	UpdatedAt         time.Time
	SerialNumber      string
	NotBefore         int64
	NotAfter          int64
	Issuer            *WebAccelCertIssuer  `mapconv:",recursive"`
	Subject           *WebAccelCertSubject `mapconv:",recursive"`
	DNSNames          []string
	SHA256Fingerprint string
}

// Validate validates by field tags
func (o *WebAccelOldCerts) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelOldCerts) setDefaults() interface{} {
	return &struct {
		ID                types.ID
		SiteID            types.ID
		CertificateChain  string
		Key               string
		CreatedAt         time.Time
		UpdatedAt         time.Time
		SerialNumber      string
		NotBefore         int64
		NotAfter          int64
		Issuer            *WebAccelCertIssuer  `mapconv:",recursive"`
		Subject           *WebAccelCertSubject `mapconv:",recursive"`
		DNSNames          []string
		SHA256Fingerprint string
	}{
		ID:                o.ID,
		SiteID:            o.SiteID,
		CertificateChain:  o.CertificateChain,
		Key:               o.Key,
		CreatedAt:         o.CreatedAt,
		UpdatedAt:         o.UpdatedAt,
		SerialNumber:      o.SerialNumber,
		NotBefore:         o.NotBefore,
		NotAfter:          o.NotAfter,
		Issuer:            o.Issuer,
		Subject:           o.Subject,
		DNSNames:          o.DNSNames,
		SHA256Fingerprint: o.SHA256Fingerprint,
	}
}

// GetID returns value of ID
func (o *WebAccelOldCerts) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *WebAccelOldCerts) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *WebAccelOldCerts) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *WebAccelOldCerts) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *WebAccelOldCerts) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *WebAccelOldCerts) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetSiteID returns value of SiteID
func (o *WebAccelOldCerts) GetSiteID() types.ID {
	return o.SiteID
}

// SetSiteID sets value to SiteID
func (o *WebAccelOldCerts) SetSiteID(v types.ID) {
	o.SiteID = v
}

// GetCertificateChain returns value of CertificateChain
func (o *WebAccelOldCerts) GetCertificateChain() string {
	return o.CertificateChain
}

// SetCertificateChain sets value to CertificateChain
func (o *WebAccelOldCerts) SetCertificateChain(v string) {
	o.CertificateChain = v
}

// GetKey returns value of Key
func (o *WebAccelOldCerts) GetKey() string {
	return o.Key
}

// SetKey sets value to Key
func (o *WebAccelOldCerts) SetKey(v string) {
	o.Key = v
}

// GetCreatedAt returns value of CreatedAt
func (o *WebAccelOldCerts) GetCreatedAt() time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *WebAccelOldCerts) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns value of UpdatedAt
func (o *WebAccelOldCerts) GetUpdatedAt() time.Time {
	return o.UpdatedAt
}

// SetUpdatedAt sets value to UpdatedAt
func (o *WebAccelOldCerts) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetSerialNumber returns value of SerialNumber
func (o *WebAccelOldCerts) GetSerialNumber() string {
	return o.SerialNumber
}

// SetSerialNumber sets value to SerialNumber
func (o *WebAccelOldCerts) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetNotBefore returns value of NotBefore
func (o *WebAccelOldCerts) GetNotBefore() int64 {
	return o.NotBefore
}

// SetNotBefore sets value to NotBefore
func (o *WebAccelOldCerts) SetNotBefore(v int64) {
	o.NotBefore = v
}

// GetNotAfter returns value of NotAfter
func (o *WebAccelOldCerts) GetNotAfter() int64 {
	return o.NotAfter
}

// SetNotAfter sets value to NotAfter
func (o *WebAccelOldCerts) SetNotAfter(v int64) {
	o.NotAfter = v
}

// GetIssuer returns value of Issuer
func (o *WebAccelOldCerts) GetIssuer() *WebAccelCertIssuer {
	return o.Issuer
}

// SetIssuer sets value to Issuer
func (o *WebAccelOldCerts) SetIssuer(v *WebAccelCertIssuer) {
	o.Issuer = v
}

// GetSubject returns value of Subject
func (o *WebAccelOldCerts) GetSubject() *WebAccelCertSubject {
	return o.Subject
}

// SetSubject sets value to Subject
func (o *WebAccelOldCerts) SetSubject(v *WebAccelCertSubject) {
	o.Subject = v
}

// GetDNSNames returns value of DNSNames
func (o *WebAccelOldCerts) GetDNSNames() []string {
	return o.DNSNames
}

// SetDNSNames sets value to DNSNames
func (o *WebAccelOldCerts) SetDNSNames(v []string) {
	o.DNSNames = v
}

// GetSHA256Fingerprint returns value of SHA256Fingerprint
func (o *WebAccelOldCerts) GetSHA256Fingerprint() string {
	return o.SHA256Fingerprint
}

// SetSHA256Fingerprint sets value to SHA256Fingerprint
func (o *WebAccelOldCerts) SetSHA256Fingerprint(v string) {
	o.SHA256Fingerprint = v
}

/*************************************************
* WebAccelCertUpdateRequest
*************************************************/

// WebAccelCertUpdateRequest represents API parameter/response structure
type WebAccelCertUpdateRequest struct {
	CertificateChain string
	Key              string
}

// Validate validates by field tags
func (o *WebAccelCertUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelCertUpdateRequest) setDefaults() interface{} {
	return &struct {
		CertificateChain string
		Key              string
	}{
		CertificateChain: o.CertificateChain,
		Key:              o.Key,
	}
}

// GetCertificateChain returns value of CertificateChain
func (o *WebAccelCertUpdateRequest) GetCertificateChain() string {
	return o.CertificateChain
}

// SetCertificateChain sets value to CertificateChain
func (o *WebAccelCertUpdateRequest) SetCertificateChain(v string) {
	o.CertificateChain = v
}

// GetKey returns value of Key
func (o *WebAccelCertUpdateRequest) GetKey() string {
	return o.Key
}

// SetKey sets value to Key
func (o *WebAccelCertUpdateRequest) SetKey(v string) {
	o.Key = v
}

/*************************************************
* WebAccelDeleteAllCacheRequest
*************************************************/

// WebAccelDeleteAllCacheRequest represents API parameter/response structure
type WebAccelDeleteAllCacheRequest struct {
	Domain string
}

// Validate validates by field tags
func (o *WebAccelDeleteAllCacheRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelDeleteAllCacheRequest) setDefaults() interface{} {
	return &struct {
		Domain string
	}{
		Domain: o.Domain,
	}
}

// GetDomain returns value of Domain
func (o *WebAccelDeleteAllCacheRequest) GetDomain() string {
	return o.Domain
}

// SetDomain sets value to Domain
func (o *WebAccelDeleteAllCacheRequest) SetDomain(v string) {
	o.Domain = v
}

/*************************************************
* WebAccelDeleteCacheResult
*************************************************/

// WebAccelDeleteCacheResult represents API parameter/response structure
type WebAccelDeleteCacheResult struct {
	URL    string
	Status int
	Result string
}

// Validate validates by field tags
func (o *WebAccelDeleteCacheResult) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelDeleteCacheResult) setDefaults() interface{} {
	return &struct {
		URL    string
		Status int
		Result string
	}{
		URL:    o.URL,
		Status: o.Status,
		Result: o.Result,
	}
}

// GetURL returns value of URL
func (o *WebAccelDeleteCacheResult) GetURL() string {
	return o.URL
}

// SetURL sets value to URL
func (o *WebAccelDeleteCacheResult) SetURL(v string) {
	o.URL = v
}

// GetStatus returns value of Status
func (o *WebAccelDeleteCacheResult) GetStatus() int {
	return o.Status
}

// SetStatus sets value to Status
func (o *WebAccelDeleteCacheResult) SetStatus(v int) {
	o.Status = v
}

// GetResult returns value of Result
func (o *WebAccelDeleteCacheResult) GetResult() string {
	return o.Result
}

// SetResult sets value to Result
func (o *WebAccelDeleteCacheResult) SetResult(v string) {
	o.Result = v
}

/*************************************************
* WebAccelDeleteCacheRequest
*************************************************/

// WebAccelDeleteCacheRequest represents API parameter/response structure
type WebAccelDeleteCacheRequest struct {
	URL []string
}

// Validate validates by field tags
func (o *WebAccelDeleteCacheRequest) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *WebAccelDeleteCacheRequest) setDefaults() interface{} {
	return &struct {
		URL []string
	}{
		URL: o.URL,
	}
}

// GetURL returns value of URL
func (o *WebAccelDeleteCacheRequest) GetURL() []string {
	return o.URL
}

// SetURL sets value to URL
func (o *WebAccelDeleteCacheRequest) SetURL(v []string) {
	o.URL = v
}

/*************************************************
* Zone
*************************************************/

// Zone represents API parameter/response structure
type Zone struct {
	ID           types.ID
	Name         string `validate:"required"`
	Description  string `validate:"min=0,max=512"`
	DisplayOrder int64
	IsDummy      bool
	VNCProxy     *VNCProxy      `json:",omitempty"`
	FTPServer    *FTPServerInfo `json:",omitempty"`
	Region       *Region        `json:",omitempty"`
}

// Validate validates by field tags
func (o *Zone) Validate() error {
	return validator.New().Struct(o)
}

// setDefaults implements sacloud.argumentDefaulter
func (o *Zone) setDefaults() interface{} {
	return &struct {
		ID           types.ID
		Name         string `validate:"required"`
		Description  string `validate:"min=0,max=512"`
		DisplayOrder int64
		IsDummy      bool
		VNCProxy     *VNCProxy      `json:",omitempty"`
		FTPServer    *FTPServerInfo `json:",omitempty"`
		Region       *Region        `json:",omitempty"`
	}{
		ID:           o.ID,
		Name:         o.Name,
		Description:  o.Description,
		DisplayOrder: o.DisplayOrder,
		IsDummy:      o.IsDummy,
		VNCProxy:     o.VNCProxy,
		FTPServer:    o.FTPServer,
		Region:       o.Region,
	}
}

// GetID returns value of ID
func (o *Zone) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Zone) SetID(v types.ID) {
	o.ID = v
}

// SetStringID .
func (o *Zone) SetStringID(id string) {
	accessor.SetStringID(o, id)
}

// GetStringID .
func (o *Zone) GetStringID() string {
	return accessor.GetStringID(o)
}

// SetInt64ID .
func (o *Zone) SetInt64ID(id int64) {
	accessor.SetInt64ID(o, id)
}

// GetInt64ID .
func (o *Zone) GetInt64ID() int64 {
	return accessor.GetInt64ID(o)
}

// GetName returns value of Name
func (o *Zone) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Zone) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Zone) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Zone) SetDescription(v string) {
	o.Description = v
}

// GetDisplayOrder returns value of DisplayOrder
func (o *Zone) GetDisplayOrder() int64 {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *Zone) SetDisplayOrder(v int64) {
	o.DisplayOrder = v
}

// GetIsDummy returns value of IsDummy
func (o *Zone) GetIsDummy() bool {
	return o.IsDummy
}

// SetIsDummy sets value to IsDummy
func (o *Zone) SetIsDummy(v bool) {
	o.IsDummy = v
}

// GetVNCProxy returns value of VNCProxy
func (o *Zone) GetVNCProxy() *VNCProxy {
	return o.VNCProxy
}

// SetVNCProxy sets value to VNCProxy
func (o *Zone) SetVNCProxy(v *VNCProxy) {
	o.VNCProxy = v
}

// GetFTPServer returns value of FTPServer
func (o *Zone) GetFTPServer() *FTPServerInfo {
	return o.FTPServer
}

// SetFTPServer sets value to FTPServer
func (o *Zone) SetFTPServer(v *FTPServerInfo) {
	o.FTPServer = v
}

// GetRegion returns value of Region
func (o *Zone) GetRegion() *Region {
	return o.Region
}

// SetRegion sets value to Region
func (o *Zone) SetRegion(v *Region) {
	o.Region = v
}
